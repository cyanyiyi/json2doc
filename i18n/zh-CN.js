/**
 * Created by chenwenxiao on 2016/8/19.
 */

const lan = {
    /**
     * 页面标题国际化，于router里面的name值相同的key
     * 负责人：chenwenxiao
     **/
    page_title: {
        'common': '漫游超人后台管理系统',
        'components': '动态组件库',
        '404': '页面不存在',
        'index': '首页',
        'login': '登录页',
        'test': '测试页',
        'ui': 'UI模板页',
        'home': '主页',
        'homePage': '主页',
        'dictionary': '字典表管理',
        'systemParamConf': '系统参数管理',
        'damages': '赔偿管理',
        'notice': '消息管理',
        'menuManager': '菜单管理',
        'departmentManagement': '部门管理',
        'smsManagement': '短信管理',
        'smssendLog': '短信日志',
        'smsTemplate': '短信模版'
    },
    /**
     * 所有通用组件的多语言翻译目录
     * 负责人：chenwenxiao
     **/
    component: {
        tips: {
            title: '提示',
            ok: '确定',
            close: '关闭'
        },
        //表格组件国际化基础参数
        table: {
            jump: '跳转',
            ok: '确定',
            reset: '重置默认',
            page: '页数据',
            record: '条记录，',
            operate: '操作',
            setCol: '设置自定义列',
            selectAll: '全选',
            pages: '页码',
            ascending: '升序',
            detail: '详情',
            search: '查询条件',
            tableList: '信息列表',
            tips: '提示',
            nulls: '无',
            advanceSearch: '高级查询',
            descending: '降序',
            searchList: '自定义选项'
        },
        //输入框国际化
        input: {
            password: '请输入密码',
            mustSelect: '至少选择一项！',
            imei: '请输入IMEI',
            email: '请输入邮箱',
            user: '请输入用户名',
            port: '请输入身份证号',
            mailNumber: '请输入邮编',
            qq: '请输入QQ号',
            int: '请输入整数',
            desc: '请输入描述',
            page: '页码',
            point: '位',
            msPoint: '输入内容必须是',
            minLength: '输入内容的长度必须大于',
            maxLength: '输入内容的长度必须小于',
            betweenLength: '输入内容的长度在',
            between: '之间',
            notEmpty: '所填项不能为空',
            error: '校验类型出错',
            nullError: '校验为空',
            isLegitimateStr: '输入的内容不能包含特殊字符',
            hasSpace: '输入的内容不能包含空格',
            isNegativePoint: '请输入浮的浮点数',
            isPositvePoint: '请输入正的浮点数',
            isMailNumber: '请输入正确的邮编',
            isIP: '请输入正确的IP地址',
            isIMEI: '请输入正确的IMEI',
            isDeliveryIMEI: '请输入有效的IMEI',
            isQQ: '请输入正确的QQ号',
            isPort: '请输入正确的身份证号',
            isPhone: '请输入正确的电话号码',
            isNumber: '请输入正确的数值',
            isMail: '请输入正确的邮箱号码',
            success: '校验成功'
        },
        //富文本编辑器国际化
        editor: {
            lanPackage: {
                bold: '粗体',
                underline: '下划线',
                italic: '斜体',
                forecolor: '文字颜色',
                bgcolor: '背景色',
                strikethrough: '删除线',
                eraser: '清空格式',
                source: '源码',
                quote: '引用',
                fontfamily: '字体',
                fontsize: '字号',
                head: '标题',
                orderlist: '有序列表',
                unorderlist: '无序列表',
                alignleft: '左对齐',
                aligncenter: '居中',
                alignright: '右对齐',
                link: '链接',
                text: '文本',
                submit: '提交',
                cancel: '取消',
                unlink: '取消链接',
                table: '表格',
                emotion: '表情',
                img: '图片',
                video: '视频',
                width: '宽',
                height: '高',
                location: '位置',
                loading: '加载中',
                searchlocation: '搜索位置',
                dynamicMap: '动态地图',
                clearLocation: '清除位置',
                langDynamicOneLocation: '动态地图只能显示一个位置',
                insertcode: '插入代码',
                undo: '撤销',
                redo: '重复',
                fullscreen: '全屏',
                openLink: '打开链接'
            },
            placeholder: '请输入内容...'
        },
        header: {
            currentLanguage: '简体中文',
            editPwd: '修改密码',
            loginOut: '退出',
            oldPwd: '旧密码',
            newPwd: '新密码',
            edit: '修改',
            confirmNewPwd: '确认新密码',
            repassword: '确认密码与新密码不一致',
            confirmPWD: '请确认新旧密码是否全部输入',
            editSuccess: '修改成功',
            editFailed: '修改失败',
            oldPwdError: '旧密码错误'
        },
        select: {
            all: '所有'
        },
        tableDetail: {
            detail: '详情',
            save: '保存'
        }
    },

    /**
     * 省市县三级联动控件
     * 负责人：chenwenxiao
     * */
    component_area: {
        // areaData: '110000|北京市,110100|市辖区,110101|东城区,110102|西城区,110103|崇文区,110104|宣武区,110105|朝阳区,110106|丰台区,110107|石景山区,110108|海淀区,110109|门头沟区,110111|房山区,110112|通州区,110113|顺义区,110114|昌平区,110115|大兴区,110116|怀柔区,110117|平谷区,110200|县,110228|密云县,110229|延庆县,120000|天津市,120100|市辖区,120101|和平区,120102|河东区,120103|河西区,120104|南开区,120105|河北区,120106|红桥区,120107|塘沽区,120108|汉沽区,120109|大港区,120110|东丽区,120111|西青区,120112|津南区,120113|北辰区,120114|武清区,120115|宝坻区,120200|县,120221|宁河县,120223|静海县,120225|蓟县,130000|河北省,130100|石家庄市,130101|市辖区,130102|长安区,130103|桥东区,130104|桥西区,130105|新华区,130107|井陉矿区,130108|裕华区,130121|井陉县,130123|正定县,130124|栾城县,130125|行唐县,130126|灵寿县,130127|高邑县,130128|深泽县,130129|赞皇县,130130|无极县,130131|平山县,130132|元氏县,130133|赵县,130181|辛集市,130182|藁城市,130183|晋州市,130184|新乐市,130185|鹿泉市,130200|唐山市,130201|市辖区,130202|路南区,130203|路北区,130204|古冶区,130205|开平区,130207|丰南区,130208|丰润区,130223|滦县,130224|滦南县,130225|乐亭县,130227|迁西县,130229|玉田县,130230|唐海县,130281|遵化市,130283|迁安市,130300|秦皇岛市,130301|市辖区,130302|海港区,130303|山海关区,130304|北戴河区,130321|青龙满族自治县,130322|昌黎县,130323|抚宁县,130324|卢龙县,130400|邯郸市,130401|市辖区,130402|邯山区,130403|丛台区,130404|复兴区,130406|峰峰矿区,130421|邯郸县,130423|临漳县,130424|成安县,130425|大名县,130426|涉县,130427|磁县,130428|肥乡县,130429|永年县,130430|邱县,130431|鸡泽县,130432|广平县,130433|馆陶县,130434|魏县,130435|曲周县,130481|武安市,130500|邢台市,130501|市辖区,130502|桥东区,130503|桥西区,130521|邢台县,130522|临城县,130523|内丘县,130524|柏乡县,130525|隆尧县,130526|任县,130527|南和县,130528|宁晋县,130529|巨鹿县,130530|新河县,130531|广宗县,130532|平乡县,130533|威县,130534|清河县,130535|临西县,130581|南宫市,130582|沙河市,130600|保定市,130601|市辖区,130602|新市区,130603|北市区,130604|南市区,130621|满城县,130622|清苑县,130623|涞水县,130624|阜平县,130625|徐水县,130626|定兴县,130627|唐县,130628|高阳县,130629|容城县,130630|涞源县,130631|望都县,130632|安新县,130633|易县,130634|曲阳县,130635|蠡县,130636|顺平县,130637|博野县,130638|雄县,130681|涿州市,130682|定州市,130683|安国市,130684|高碑店市,130700|张家口市,130701|市辖区,130702|桥东区,130703|桥西区,130705|宣化区,130706|下花园区,130721|宣化县,130722|张北县,130723|康保县,130724|沽源县,130725|尚义县,130726|蔚县,130727|阳原县,130728|怀安县,130729|万全县,130730|怀来县,130731|涿鹿县,130732|赤城县,130733|崇礼县,130800|承德市,130801|市辖区,130802|双桥区,130803|双滦区,130804|鹰手营子矿区,130821|承德县,130822|兴隆县,130823|平泉县,130824|滦平县,130825|隆化县,130826|丰宁满族自治县,130827|宽城满族自治县,130828|围场满族蒙古族自治县,130900|沧州市,130901|市辖区,130902|新华区,130903|运河区,130921|沧县,130922|青县,130923|东光县,130924|海兴县,130925|盐山县,130926|肃宁县,130927|南皮县,130928|吴桥县,130929|献县,130930|孟村回族自治县,130981|泊头市,130982|任丘市,130983|黄骅市,130984|河间市,131000|廊坊市,131001|市辖区,131002|安次区,131003|广阳区,131022|固安县,131023|永清县,131024|香河县,131025|大城县,131026|文安县,131028|大厂回族自治县,131081|霸州市,131082|三河市,131100|衡水市,131101|市辖区,131102|桃城区,131121|枣强县,131122|武邑县,131123|武强县,131124|饶阳县,131125|安平县,131126|故城县,131127|景县,131128|阜城县,131181|冀州市,131182|深州市,140000|山西省,140100|太原市,140101|市辖区,140105|小店区,140106|迎泽区,140107|杏花岭区,140108|尖草坪区,140109|万柏林区,140110|晋源区,140121|清徐县,140122|阳曲县,140123|娄烦县,140181|古交市,140200|大同市,140201|市辖区,140202|城区,140203|矿区,140211|南郊区,140212|新荣区,140221|阳高县,140222|天镇县,140223|广灵县,140224|灵丘县,140225|浑源县,140226|左云县,140227|大同县,140300|阳泉市,140301|市辖区,140302|城区,140303|矿区,140311|郊区,140321|平定县,140322|盂县,140400|长治市,140401|市辖区,140402|城区,140411|郊区,140421|长治县,140423|襄垣县,140424|屯留县,140425|平顺县,140426|黎城县,140427|壶关县,140428|长子县,140429|武乡县,140430|沁县,140431|沁源县,140481|潞城市,140500|晋城市,140501|市辖区,140502|城区,140521|沁水县,140522|阳城县,140524|陵川县,140525|泽州县,140581|高平市,140600|朔州市,140601|市辖区,140602|朔城区,140603|平鲁区,140621|山阴县,140622|应县,140623|右玉县,140624|怀仁县,140700|晋中市,140701|市辖区,140702|榆次区,140721|榆社县,140722|左权县,140723|和顺县,140724|昔阳县,140725|寿阳县,140726|太谷县,140727|祁县,140728|平遥县,140729|灵石县,140781|介休市,140800|运城市,140801|市辖区,140802|盐湖区,140821|临猗县,140822|万荣县,140823|闻喜县,140824|稷山县,140825|新绛县,140826|绛县,140827|垣曲县,140828|夏县,140829|平陆县,140830|芮城县,140881|永济市,140882|河津市,140900|忻州市,140901|市辖区,140902|忻府区,140921|定襄县,140922|五台县,140923|代县,140924|繁峙县,140925|宁武县,140926|静乐县,140927|神池县,140928|五寨县,140929|岢岚县,140930|河曲县,140931|保德县,140932|偏关县,140981|原平市,141000|临汾市,141001|市辖区,141002|尧都区,141021|曲沃县,141022|翼城县,141023|襄汾县,141024|洪洞县,141025|古县,141026|安泽县,141027|浮山县,141028|吉县,141029|乡宁县,141030|大宁县,141031|隰县,141032|永和县,141033|蒲县,141034|汾西县,141081|侯马市,141082|霍州市,141100|吕梁市,141101|市辖区,141102|离石区,141121|文水县,141122|交城县,141123|兴县,141124|临县,141125|柳林县,141126|石楼县,141127|岚县,141128|方山县,141129|中阳县,141130|交口县,141181|孝义市,141182|汾阳市,150000|内蒙古自治区,150100|呼和浩特市,150101|市辖区,150102|新城区,150103|回民区,150104|玉泉区,150105|赛罕区,150121|土默特左旗,150122|托克托县,150123|和林格尔县,150124|清水河县,150125|武川县,150200|包头市,150201|市辖区,150202|东河区,150203|昆都仑区,150204|青山区,150205|石拐区,150206|白云矿区,150207|九原区,150221|土默特右旗,150222|固阳县,150223|达尔罕茂明安联合旗,150300|乌海市,150301|市辖区,150302|海勃湾区,150303|海南区,150304|乌达区,150400|赤峰市,150401|市辖区,150402|红山区,150403|元宝山区,150404|松山区,150421|阿鲁科尔沁旗,150422|巴林左旗,150423|巴林右旗,150424|林西县,150425|克什克腾旗,150426|翁牛特旗,150428|喀喇沁旗,150429|宁城县,150430|敖汉旗,150500|通辽市,150501|市辖区,150502|科尔沁区,150521|科尔沁左翼中旗,150522|科尔沁左翼后旗,150523|开鲁县,150524|库伦旗,150525|奈曼旗,150526|扎鲁特旗,150581|霍林郭勒市,150600|鄂尔多斯市,150601|市辖区,150602|东胜区,150621|达拉特旗,150622|准格尔旗,150623|鄂托克前旗,150624|鄂托克旗,150625|杭锦旗,150626|乌审旗,150627|伊金霍洛旗,150700|呼伦贝尔市,150701|市辖区,150702|海拉尔区,150721|阿荣旗,150722|莫力达瓦达斡尔族自治旗,150723|鄂伦春自治旗,150724|鄂温克族自治旗,150725|陈巴尔虎旗,150726|新巴尔虎左旗,150727|新巴尔虎右旗,150781|满洲里市,150782|牙克石市,150783|扎兰屯市,150784|额尔古纳市,150785|根河市,150800|巴彦淖尔市,150801|市辖区,150802|临河区,150821|五原县,150822|磴口县,150823|乌拉特前旗,150824|乌拉特中旗,150825|乌拉特后旗,150826|杭锦后旗,150900|乌兰察布市,150901|市辖区,150902|集宁区,150921|卓资县,150922|化德县,150923|商都县,150924|兴和县,150925|凉城县,150926|察哈尔右翼前旗,150927|察哈尔右翼中旗,150928|察哈尔右翼后旗,150929|四子王旗,150981|丰镇市,152200|兴安盟,152201|乌兰浩特市,152202|阿尔山市,152221|科尔沁右翼前旗,152222|科尔沁右翼中旗,152223|扎赉特旗,152224|突泉县,152500|锡林郭勒盟,152501|二连浩特市,152502|锡林浩特市,152522|阿巴嘎旗,152523|苏尼特左旗,152524|苏尼特右旗,152525|东乌珠穆沁旗,152526|西乌珠穆沁旗,152527|太仆寺旗,152528|镶黄旗,152529|正镶白旗,152530|正蓝旗,152531|多伦县,152900|阿拉善盟,152921|阿拉善左旗,152922|阿拉善右旗,152923|额济纳旗,210000|辽宁省,210100|沈阳市,210101|市辖区,210102|和平区,210103|沈河区,210104|大东区,210105|皇姑区,210106|铁西区,210111|苏家屯区,210112|东陵区,210113|沈北新区,210114|于洪区,210122|辽中县,210123|康平县,210124|法库县,210181|新民市,210200|大连市,210201|市辖区,210202|中山区,210203|西岗区,210204|沙河口区,210211|甘井子区,210212|旅顺口区,210213|金州区,210224|长海县,210281|瓦房店市,210282|普兰店市,210283|庄河市,210300|鞍山市,210301|市辖区,210302|铁东区,210303|铁西区,210304|立山区,210311|千山区,210321|台安县,210323|岫岩满族自治县,210381|海城市,210400|抚顺市,210401|市辖区,210402|新抚区,210403|东洲区,210404|望花区,210411|顺城区,210421|抚顺县,210422|新宾满族自治县,210423|清原满族自治县,210500|本溪市,210501|市辖区,210502|平山区,210503|溪湖区,210504|明山区,210505|南芬区,210521|本溪满族自治县,210522|桓仁满族自治县,210600|丹东市,210601|市辖区,210602|元宝区,210603|振兴区,210604|振安区,210624|宽甸满族自治县,210681|东港市,210682|凤城市,210700|锦州市,210701|市辖区,210702|古塔区,210703|凌河区,210711|太和区,210726|黑山县,210727|义县,210781|凌海市,210782|北镇市,210800|营口市,210801|市辖区,210802|站前区,210803|西市区,210804|鲅鱼圈区,210811|老边区,210881|盖州市,210882|大石桥市,210900|阜新市,210901|市辖区,210902|海州区,210903|新邱区,210904|太平区,210905|清河门区,210911|细河区,210921|阜新蒙古族自治县,210922|彰武县,211000|辽阳市,211001|市辖区,211002|白塔区,211003|文圣区,211004|宏伟区,211005|弓长岭区,211011|太子河区,211021|辽阳县,211081|灯塔市,211100|盘锦市,211101|市辖区,211102|双台子区,211103|兴隆台区,211121|大洼县,211122|盘山县,211200|铁岭市,211201|市辖区,211202|银州区,211204|清河区,211221|铁岭县,211223|西丰县,211224|昌图县,211281|调兵山市,211282|开原市,211300|朝阳市,211301|市辖区,211302|双塔区,211303|龙城区,211321|朝阳县,211322|建平县,211324|喀喇沁左翼蒙古族自治县,211381|北票市,211382|凌源市,211400|葫芦岛市,211401|市辖区,211402|连山区,211403|龙港区,211404|南票区,211421|绥中县,211422|建昌县,211481|兴城市,220000|吉林省,220100|长春市,220101|市辖区,220102|南关区,220103|宽城区,220104|朝阳区,220105|二道区,220106|绿园区,220112|双阳区,220122|农安县,220181|九台市,220182|榆树市,220183|德惠市,220200|吉林市,220201|市辖区,220202|昌邑区,220203|龙潭区,220204|船营区,220211|丰满区,220221|永吉县,220281|蛟河市,220282|桦甸市,220283|舒兰市,220284|磐石市,220300|四平市,220301|市辖区,220302|铁西区,220303|铁东区,220322|梨树县,220323|伊通满族自治县,220381|公主岭市,220382|双辽市,220400|辽源市,220401|市辖区,220402|龙山区,220403|西安区,220421|东丰县,220422|东辽县,220500|通化市,220501|市辖区,220502|东昌区,220503|二道江区,220521|通化县,220523|辉南县,220524|柳河县,220581|梅河口市,220582|集安市,220600|白山市,220601|市辖区,220602|八道江区,220605|江源区,220621|抚松县,220622|靖宇县,220623|长白朝鲜族自治县,220681|临江市,220700|松原市,220701|市辖区,220702|宁江区,220721|前郭尔罗斯蒙古族自治县,220722|长岭县,220723|乾安县,220724|扶余县,220800|白城市,220801|市辖区,220802|洮北区,220821|镇赉县,220822|通榆县,220881|洮南市,220882|大安市,222400|延边朝鲜族自治州,222401|延吉市,222402|图们市,222403|敦化市,222404|珲春市,222405|龙井市,222406|和龙市,222424|汪清县,222426|安图县,230000|黑龙江省,230100|哈尔滨市,230102|道里区,230103|南岗区,230104|道外区,230108|平房区,230109|松北区,230110|香坊区,230111|呼兰区,230112|阿城区,230123|依兰县,230124|方正县,230125|宾县,230126|巴彦县,230127|木兰县,230128|通河县,230129|延寿县,230182|双城市,230183|尚志市,230184|五常市,230200|齐齐哈尔市,230202|龙沙区,230203|建华区,230204|铁锋区,230205|昂昂溪区,230206|富拉尔基区,230207|碾子山区,230208|梅里斯达斡尔族区,230221|龙江县,230223|依安县,230224|泰来县,230225|甘南县,230227|富裕县,230229|克山县,230230|克东县,230231|拜泉县,230281|讷河市,230300|鸡西市,230302|鸡冠区,230303|恒山区,230304|滴道区,230305|梨树区,230306|城子河区,230307|麻山区,230321|鸡东县,230381|虎林市,230382|密山市,230400|鹤岗市,230402|向阳区,230403|工农区,230404|南山区,230405|兴安区,230406|东山区,230407|兴山区,230421|萝北县,230422|绥滨县,230500|双鸭山市,230502|尖山区,230503|岭东区,230505|四方台区,230506|宝山区,230521|集贤县,230522|友谊县,230523|宝清县,230524|饶河县,230600|大庆市,230602|萨尔图区,230603|龙凤区,230604|让胡路区,230605|红岗区,230606|大同区,230621|肇州县,230622|肇源县,230623|林甸县,230624|杜尔伯特蒙古族自治县,230700|伊春市,230702|伊春区,230703|南岔区,230704|友好区,230705|西林区,230706|翠峦区,230707|新青区,230708|美溪区,230709|金山屯区,230710|五营区,230711|乌马河区,230712|汤旺河区,230713|带岭区,230714|乌伊岭区,230715|红星区,230716|上甘岭区,230722|嘉荫县,230781|铁力市,230800|佳木斯市,230803|向阳区,230804|前进区,230805|东风区,230811|郊区,230822|桦南县,230826|桦川县,230828|汤原县,230833|抚远县,230881|同江市,230882|富锦市,230900|七台河市,230902|新兴区,230903|桃山区,230904|茄子河区,230921|勃利县,231000|牡丹江市,231002|东安区,231003|阳明区,231004|爱民区,231005|西安区,231024|东宁县,231025|林口县,231081|绥芬河市,231083|海林市,231084|宁安市,231085|穆棱市,231100|黑河市,231102|爱辉区,231121|嫩江县,231123|逊克县,231124|孙吴县,231181|北安市,231182|五大连池市,231200|绥化市,231202|北林区,231221|望奎县,231222|兰西县,231223|青冈县,231224|庆安县,231225|明水县,231226|绥棱县,231281|安达市,231282|肇东市,231283|海伦市,232700|大兴安岭地区,232721|呼玛县,232722|塔河县,232723|漠河县,310000|上海市,310100|市辖区,310101|黄浦区,310103|卢湾区,310104|徐汇区,310105|长宁区,310106|静安区,310107|普陀区,310108|闸北区,310109|虹口区,310110|杨浦区,310112|闵行区,310113|宝山区,310114|嘉定区,310115|浦东新区,310116|金山区,310117|松江区,310118|青浦区,310119|南汇区,310120|奉贤区,310200|县,310230|崇明县,320000|江苏省,320100|南京市,320101|市辖区,320102|玄武区,320103|白下区,320104|秦淮区,320105|建邺区,320106|鼓楼区,320107|下关区,320111|浦口区,320113|栖霞区,320114|雨花台区,320115|江宁区,320116|六合区,320124|溧水县,320125|高淳县,320200|无锡市,320201|市辖区,320202|崇安区,320203|南长区,320204|北塘区,320205|锡山区,320206|惠山区,320211|滨湖区,320281|江阴市,320282|宜兴市,320300|徐州市,320301|市辖区,320302|鼓楼区,320303|云龙区,320304|九里区,320305|贾汪区,320311|泉山区,320321|丰县,320322|沛县,320323|铜山县,320324|睢宁县,320381|新沂市,320382|邳州市,320400|常州市,320401|市辖区,320402|天宁区,320404|钟楼区,320405|戚墅堰区,320411|新北区,320412|武进区,320481|溧阳市,320482|金坛市,320500|苏州市,320501|市辖区,320502|沧浪区,320503|平江区,320504|金阊区,320505|虎丘区,320506|吴中区,320507|相城区,320581|常熟市,320582|张家港市,320583|昆山市,320584|吴江市,320585|太仓市,320600|南通市,320601|市辖区,320602|崇川区,320611|港闸区,320621|海安县,320623|如东县,320681|启东市,320682|如皋市,320683|通州市,320684|海门市,320700|连云港市,320701|市辖区,320703|连云区,320705|新浦区,320706|海州区,320721|赣榆县,320722|东海县,320723|灌云县,320724|灌南县,320800|淮安市,320801|市辖区,320802|清河区,320803|楚州区,320804|淮阴区,320811|清浦区,320826|涟水县,320829|洪泽县,320830|盱眙县,320831|金湖县,320900|盐城市,320901|市辖区,320902|亭湖区,320903|盐都区,320921|响水县,320922|滨海县,320923|阜宁县,320924|射阳县,320925|建湖县,320981|东台市,320982|大丰市,321000|扬州市,321001|市辖区,321002|广陵区,321003|邗江区,321011|维扬区,321023|宝应县,321081|仪征市,321084|高邮市,321088|江都市,321100|镇江市,321101|市辖区,321102|京口区,321111|润州区,321112|丹徒区,321181|丹阳市,321182|扬中市,321183|句容市,321200|泰州市,321201|市辖区,321202|海陵区,321203|高港区,321281|兴化市,321282|靖江市,321283|泰兴市,321284|姜堰市,321300|宿迁市,321301|市辖区,321302|宿城区,321311|宿豫区,321322|沭阳县,321323|泗阳县,321324|泗洪县,330000|浙江省,330100|杭州市,330101|市辖区,330102|上城区,330103|下城区,330104|江干区,330105|拱墅区,330106|西湖区,330108|滨江区,330109|萧山区,330110|余杭区,330122|桐庐县,330127|淳安县,330182|建德市,330183|富阳市,330185|临安市,330200|宁波市,330201|市辖区,330203|海曙区,330204|江东区,330205|江北区,330206|北仑区,330211|镇海区,330212|鄞州区,330225|象山县,330226|宁海县,330281|余姚市,330282|慈溪市,330283|奉化市,330300|温州市,330301|市辖区,330302|鹿城区,330303|龙湾区,330304|瓯海区,330322|洞头县,330324|永嘉县,330326|平阳县,330327|苍南县,330328|文成县,330329|泰顺县,330381|瑞安市,330382|乐清市,330400|嘉兴市,330401|市辖区,330402|南湖区,330411|秀洲区,330421|嘉善县,330424|海盐县,330481|海宁市,330482|平湖市,330483|桐乡市,330500|湖州市,330501|市辖区,330502|吴兴区,330503|南浔区,330521|德清县,330522|长兴县,330523|安吉县,330600|绍兴市,330601|市辖区,330602|越城区,330621|绍兴县,330624|新昌县,330681|诸暨市,330682|上虞市,330683|嵊州市,330700|金华市,330701|市辖区,330702|婺城区,330703|金东区,330723|武义县,330726|浦江县,330727|磐安县,330781|兰溪市,330782|义乌市,330783|东阳市,330784|永康市,330800|衢州市,330801|市辖区,330802|柯城区,330803|衢江区,330822|常山县,330824|开化县,330825|龙游县,330881|江山市,330900|舟山市,330901|市辖区,330902|定海区,330903|普陀区,330921|岱山县,330922|嵊泗县,331000|台州市,331001|市辖区,331002|椒江区,331003|黄岩区,331004|路桥区,331021|玉环县,331022|三门县,331023|天台县,331024|仙居县,331081|温岭市,331082|临海市,331100|丽水市,331101|市辖区,331102|莲都区,331121|青田县,331122|缙云县,331123|遂昌县,331124|松阳县,331125|云和县,331126|庆元县,331127|景宁畲族自治县,331181|龙泉市,340000|安徽省,340100|合肥市,340101|市辖区,340102|瑶海区,340103|庐阳区,340104|蜀山区,340111|包河区,340121|长丰县,340122|肥东县,340123|肥西县,340200|芜湖市,340201|市辖区,340202|镜湖区,340203|弋江区,340207|鸠江区,340208|三山区,340221|芜湖县,340222|繁昌县,340223|南陵县,340300|蚌埠市,340301|市辖区,340302|龙子湖区,340303|蚌山区,340304|禹会区,340311|淮上区,340321|怀远县,340322|五河县,340323|固镇县,340400|淮南市,340401|市辖区,340402|大通区,340403|田家庵区,340404|谢家集区,340405|八公山区,340406|潘集区,340421|凤台县,340500|马鞍山市,340501|市辖区,340502|金家庄区,340503|花山区,340504|雨山区,340521|当涂县,340600|淮北市,340601|市辖区,340602|杜集区,340603|相山区,340604|烈山区,340621|濉溪县,340700|铜陵市,340701|市辖区,340702|铜官山区,340703|狮子山区,340711|郊区,340721|铜陵县,340800|安庆市,340801|市辖区,340802|迎江区,340803|大观区,340811|宜秀区,340822|怀宁县,340823|枞阳县,340824|潜山县,340825|太湖县,340826|宿松县,340827|望江县,340828|岳西县,340881|桐城市,341000|黄山市,341001|市辖区,341002|屯溪区,341003|黄山区,341004|徽州区,341021|歙县,341022|休宁县,341023|黟县,341024|祁门县,341100|滁州市,341101|市辖区,341102|琅琊区,341103|南谯区,341122|来安县,341124|全椒县,341125|定远县,341126|凤阳县,341181|天长市,341182|明光市,341200|阜阳市,341201|市辖区,341202|颍州区,341203|颍东区,341204|颍泉区,341221|临泉县,341222|太和县,341225|阜南县,341226|颍上县,341282|界首市,341300|宿州市,341301|市辖区,341302|埇桥区,341321|砀山县,341322|萧县,341323|灵璧县,341324|泗县,341400|巢湖市,341401|市辖区,341402|居巢区,341421|庐江县,341422|无为县,341423|含山县,341424|和县,341500|六安市,341501|市辖区,341502|金安区,341503|裕安区,341521|寿县,341522|霍邱县,341523|舒城县,341524|金寨县,341525|霍山县,341600|亳州市,341601|市辖区,341602|谯城区,341621|涡阳县,341622|蒙城县,341623|利辛县,341700|池州市,341701|市辖区,341702|贵池区,341721|东至县,341722|石台县,341723|青阳县,341800|宣城市,341801|市辖区,341802|宣州区,341821|郎溪县,341822|广德县,341823|泾县,341824|绩溪县,341825|旌德县,341881|宁国市,350000|福建省,350100|福州市,350101|市辖区,350102|鼓楼区,350103|台江区,350104|仓山区,350105|马尾区,350111|晋安区,350121|闽侯县,350122|连江县,350123|罗源县,350124|闽清县,350125|永泰县,350128|平潭县,350181|福清市,350182|长乐市,350200|厦门市,350201|市辖区,350203|思明区,350205|海沧区,350206|湖里区,350211|集美区,350212|同安区,350213|翔安区,350300|莆田市,350301|市辖区,350302|城厢区,350303|涵江区,350304|荔城区,350305|秀屿区,350322|仙游县,350400|三明市,350401|市辖区,350402|梅列区,350403|三元区,350421|明溪县,350423|清流县,350424|宁化县,350425|大田县,350426|尤溪县,350427|沙县,350428|将乐县,350429|泰宁县,350430|建宁县,350481|永安市,350500|泉州市,350501|市辖区,350502|鲤城区,350503|丰泽区,350504|洛江区,350505|泉港区,350521|惠安县,350524|安溪县,350525|永春县,350526|德化县,350527|金门县,350581|石狮市,350582|晋江市,350583|南安市,350600|漳州市,350601|市辖区,350602|芗城区,350603|龙文区,350622|云霄县,350623|漳浦县,350624|诏安县,350625|长泰县,350626|东山县,350627|南靖县,350628|平和县,350629|华安县,350681|龙海市,350700|南平市,350701|市辖区,350702|延平区,350721|顺昌县,350722|浦城县,350723|光泽县,350724|松溪县,350725|政和县,350781|邵武市,350782|武夷山市,350783|建瓯市,350784|建阳市,350800|龙岩市,350801|市辖区,350802|新罗区,350821|长汀县,350822|永定县,350823|上杭县,350824|武平县,350825|连城县,350881|漳平市,350900|宁德市,350901|市辖区,350902|蕉城区,350921|霞浦县,350922|古田县,350923|屏南县,350924|寿宁县,350925|周宁县,350926|柘荣县,350981|福安市,350982|福鼎市,360000|江西省,360100|南昌市,360101|市辖区,360102|东湖区,360103|西湖区,360104|青云谱区,360105|湾里区,360111|青山湖区,360121|南昌县,360122|新建县,360123|安义县,360124|进贤县,360200|景德镇市,360201|市辖区,360202|昌江区,360203|珠山区,360222|浮梁县,360281|乐平市,360300|萍乡市,360301|市辖区,360302|安源区,360313|湘东区,360321|莲花县,360322|上栗县,360323|芦溪县,360400|九江市,360401|市辖区,360402|庐山区,360403|浔阳区,360421|九江县,360423|武宁县,360424|修水县,360425|永修县,360426|德安县,360427|星子县,360428|都昌县,360429|湖口县,360430|彭泽县,360481|瑞昌市,360500|新余市,360501|市辖区,360502|渝水区,360521|分宜县,360600|鹰潭市,360601|市辖区,360602|月湖区,360622|余江县,360681|贵溪市,360700|赣州市,360701|市辖区,360702|章贡区,360721|赣县,360722|信丰县,360723|大余县,360724|上犹县,360725|崇义县,360726|安远县,360727|龙南县,360728|定南县,360729|全南县,360730|宁都县,360731|于都县,360732|兴国县,360733|会昌县,360734|寻乌县,360735|石城县,360781|瑞金市,360782|南康市,360800|吉安市,360801|市辖区,360802|吉州区,360803|青原区,360821|吉安县,360822|吉水县,360823|峡江县,360824|新干县,360825|永丰县,360826|泰和县,360827|遂川县,360828|万安县,360829|安福县,360830|永新县,360881|井冈山市,360900|宜春市,360901|市辖区,360902|袁州区,360921|奉新县,360922|万载县,360923|上高县,360924|宜丰县,360925|靖安县,360926|铜鼓县,360981|丰城市,360982|樟树市,360983|高安市,361000|抚州市,361001|市辖区,361002|临川区,361021|南城县,361022|黎川县,361023|南丰县,361024|崇仁县,361025|乐安县,361026|宜黄县,361027|金溪县,361028|资溪县,361029|东乡县,361030|广昌县,361100|上饶市,361101|市辖区,361102|信州区,361121|上饶县,361122|广丰县,361123|玉山县,361124|铅山县,361125|横峰县,361126|弋阳县,361127|余干县,361128|鄱阳县,361129|万年县,361130|婺源县,361181|德兴市,370000|山东省,370100|济南市,370101|市辖区,370102|历下区,370103|市中区,370104|槐荫区,370105|天桥区,370112|历城区,370113|长清区,370124|平阴县,370125|济阳县,370126|商河县,370181|章丘市,370200|青岛市,370201|市辖区,370202|市南区,370203|市北区,370205|四方区,370211|黄岛区,370212|崂山区,370213|李沧区,370214|城阳区,370281|胶州市,370282|即墨市,370283|平度市,370284|胶南市,370285|莱西市,370300|淄博市,370301|市辖区,370302|淄川区,370303|张店区,370304|博山区,370305|临淄区,370306|周村区,370321|桓台县,370322|高青县,370323|沂源县,370400|枣庄市,370401|市辖区,370402|市中区,370403|薛城区,370404|峄城区,370405|台儿庄区,370406|山亭区,370481|滕州市,370500|东营市,370501|市辖区,370502|东营区,370503|河口区,370521|垦利县,370522|利津县,370523|广饶县,370600|烟台市,370601|市辖区,370602|芝罘区,370611|福山区,370612|牟平区,370613|莱山区,370634|长岛县,370681|龙口市,370682|莱阳市,370683|莱州市,370684|蓬莱市,370685|招远市,370686|栖霞市,370687|海阳市,370700|潍坊市,370701|市辖区,370702|潍城区,370703|寒亭区,370704|坊子区,370705|奎文区,370724|临朐县,370725|昌乐县,370781|青州市,370782|诸城市,370783|寿光市,370784|安丘市,370785|高密市,370786|昌邑市,370800|济宁市,370801|市辖区,370802|市中区,370811|任城区,370826|微山县,370827|鱼台县,370828|金乡县,370829|嘉祥县,370830|汶上县,370831|泗水县,370832|梁山县,370881|曲阜市,370882|兖州市,370883|邹城市,370900|泰安市,370901|市辖区,370902|泰山区,370911|岱岳区,370921|宁阳县,370923|东平县,370982|新泰市,370983|肥城市,371000|威海市,371001|市辖区,371002|环翠区,371081|文登市,371082|荣成市,371083|乳山市,371100|日照市,371101|市辖区,371102|东港区,371103|岚山区,371121|五莲县,371122|莒县,371200|莱芜市,371201|市辖区,371202|莱城区,371203|钢城区,371300|临沂市,371301|市辖区,371302|兰山区,371311|罗庄区,371312|河东区,371321|沂南县,371322|郯城县,371323|沂水县,371324|苍山县,371325|费县,371326|平邑县,371327|莒南县,371328|蒙阴县,371329|临沭县,371400|德州市,371401|市辖区,371402|德城区,371421|陵县,371422|宁津县,371423|庆云县,371424|临邑县,371425|齐河县,371426|平原县,371427|夏津县,371428|武城县,371481|乐陵市,371482|禹城市,371500|聊城市,371501|市辖区,371502|东昌府区,371521|阳谷县,371522|莘县,371523|茌平县,371524|东阿县,371525|冠县,371526|高唐县,371581|临清市,371600|滨州市,371601|市辖区,371602|滨城区,371621|惠民县,371622|阳信县,371623|无棣县,371624|沾化县,371625|博兴县,371626|邹平县,371700|菏泽市,371701|市辖区,371702|牡丹区,371721|曹县,371722|单县,371723|成武县,371724|巨野县,371725|郓城县,371726|鄄城县,371727|定陶县,371728|东明县,410000|河南省,410100|郑州市,410101|市辖区,410102|中原区,410103|二七区,410104|管城回族区,410105|金水区,410106|上街区,410108|惠济区,410122|中牟县,410181|巩义市,410182|荥阳市,410183|新密市,410184|新郑市,410185|登封市,410200|开封市,410201|市辖区,410202|龙亭区,410203|顺河回族区,410204|鼓楼区,410205|禹王台区,410211|金明区,410221|杞县,410222|通许县,410223|尉氏县,410224|开封县,410225|兰考县,410300|洛阳市,410301|市辖区,410302|老城区,410303|西工区,410304|瀍河回族区,410305|涧西区,410306|吉利区,410311|洛龙区,410322|孟津县,410323|新安县,410324|栾川县,410325|嵩县,410326|汝阳县,410327|宜阳县,410328|洛宁县,410329|伊川县,410381|偃师市,410400|平顶山市,410401|市辖区,410402|新华区,410403|卫东区,410404|石龙区,410411|湛河区,410421|宝丰县,410422|叶县,410423|鲁山县,410425|郏县,410481|舞钢市,410482|汝州市,410500|安阳市,410501|市辖区,410502|文峰区,410503|北关区,410505|殷都区,410506|龙安区,410522|安阳县,410523|汤阴县,410526|滑县,410527|内黄县,410581|林州市,410600|鹤壁市,410601|市辖区,410602|鹤山区,410603|山城区,410611|淇滨区,410621|浚县,410622|淇县,410700|新乡市,410701|市辖区,410702|红旗区,410703|卫滨区,410704|凤泉区,410711|牧野区,410721|新乡县,410724|获嘉县,410725|原阳县,410726|延津县,410727|封丘县,410728|长垣县,410781|卫辉市,410782|辉县市,410800|焦作市,410801|市辖区,410802|解放区,410803|中站区,410804|马村区,410811|山阳区,410821|修武县,410822|博爱县,410823|武陟县,410825|温县,410881|济源市,410882|沁阳市,410883|孟州市,410900|濮阳市,410901|市辖区,410902|华龙区,410922|清丰县,410923|南乐县,410926|范县,410927|台前县,410928|濮阳县,411000|许昌市,411001|市辖区,411002|魏都区,411023|许昌县,411024|鄢陵县,411025|襄城县,411081|禹州市,411082|长葛市,411100|漯河市,411101|市辖区,411102|源汇区,411103|郾城区,411104|召陵区,411121|舞阳县,411122|临颍县,411200|三门峡市,411201|市辖区,411202|湖滨区,411221|渑池县,411222|陕县,411224|卢氏县,411281|义马市,411282|灵宝市,411300|南阳市,411301|市辖区,411302|宛城区,411303|卧龙区,411321|南召县,411322|方城县,411323|西峡县,411324|镇平县,411325|内乡县,411326|淅川县,411327|社旗县,411328|唐河县,411329|新野县,411330|桐柏县,411381|邓州市,411400|商丘市,411401|市辖区,411402|梁园区,411403|睢阳区,411421|民权县,411422|睢县,411423|宁陵县,411424|柘城县,411425|虞城县,411426|夏邑县,411481|永城市,411500|信阳市,411501|市辖区,411502|浉河区,411503|平桥区,411521|罗山县,411522|光山县,411523|新县,411524|商城县,411525|固始县,411526|潢川县,411527|淮滨县,411528|息县,411600|周口市,411601|市辖区,411602|川汇区,411621|扶沟县,411622|西华县,411623|商水县,411624|沈丘县,411625|郸城县,411626|淮阳县,411627|太康县,411628|鹿邑县,411681|项城市,411700|驻马店市,411701|市辖区,411702|驿城区,411721|西平县,411722|上蔡县,411723|平舆县,411724|正阳县,411725|确山县,411726|泌阳县,411727|汝南县,411728|遂平县,411729|新蔡县,420000|湖北省,420100|武汉市,420101|市辖区,420102|江岸区,420103|江汉区,420104|硚口区,420105|汉阳区,420106|武昌区,420107|青山区,420111|洪山区,420112|东西湖区,420113|汉南区,420114|蔡甸区,420115|江夏区,420116|黄陂区,420117|新洲区,420200|黄石市,420201|市辖区,420202|黄石港区,420203|西塞山区,420204|下陆区,420205|铁山区,420222|阳新县,420281|大冶市,420300|十堰市,420301|市辖区,420302|茅箭区,420303|张湾区,420321|郧县,420322|郧西县,420323|竹山县,420324|竹溪县,420325|房县,420381|丹江口市,420500|宜昌市,420501|市辖区,420502|西陵区,420503|伍家岗区,420504|点军区,420505|猇亭区,420506|夷陵区,420525|远安县,420526|兴山县,420527|秭归县,420528|长阳土家族自治县,420529|五峰土家族自治县,420581|宜都市,420582|当阳市,420583|枝江市,420600|襄樊市,420601|市辖区,420602|襄城区,420606|樊城区,420607|襄阳区,420624|南漳县,420625|谷城县,420626|保康县,420682|老河口市,420683|枣阳市,420684|宜城市,420700|鄂州市,420701|市辖区,420702|梁子湖区,420703|华容区,420704|鄂城区,420800|荆门市,420801|市辖区,420802|东宝区,420804|掇刀区,420821|京山县,420822|沙洋县,420881|钟祥市,420900|孝感市,420901|市辖区,420902|孝南区,420921|孝昌县,420922|大悟县,420923|云梦县,420981|应城市,420982|安陆市,420984|汉川市,421000|荆州市,421001|市辖区,421002|沙市区,421003|荆州区,421022|公安县,421023|监利县,421024|江陵县,421081|石首市,421083|洪湖市,421087|松滋市,421100|黄冈市,421101|市辖区,421102|黄州区,421121|团风县,421122|红安县,421123|罗田县,421124|英山县,421125|浠水县,421126|蕲春县,421127|黄梅县,421181|麻城市,421182|武穴市,421200|咸宁市,421201|市辖区,421202|咸安区,421221|嘉鱼县,421222|通城县,421223|崇阳县,421224|通山县,421281|赤壁市,421300|随州市,421301|市辖区,421302|曾都区,421381|广水市,422800|恩施土家族苗族自治州,422801|恩施市,422802|利川市,422822|建始县,422823|巴东县,422825|宣恩县,422826|咸丰县,422827|来凤县,422828|鹤峰县,429000|省直辖县级行政单位,429004|仙桃市,429005|潜江市,429006|天门市,429021|神农架林区,430000|湖南省,430100|长沙市,430101|市辖区,430102|芙蓉区,430103|天心区,430104|岳麓区,430105|开福区,430111|雨花区,430121|长沙县,430122|望城县,430124|宁乡县,430181|浏阳市,430200|株洲市,430201|市辖区,430202|荷塘区,430203|芦淞区,430204|石峰区,430211|天元区,430221|株洲县,430223|攸县,430224|茶陵县,430225|炎陵县,430281|醴陵市,430300|湘潭市,430301|市辖区,430302|雨湖区,430304|岳塘区,430321|湘潭县,430381|湘乡市,430382|韶山市,430400|衡阳市,430401|市辖区,430405|珠晖区,430406|雁峰区,430407|石鼓区,430408|蒸湘区,430412|南岳区,430421|衡阳县,430422|衡南县,430423|衡山县,430424|衡东县,430426|祁东县,430481|耒阳市,430482|常宁市,430500|邵阳市,430501|市辖区,430502|双清区,430503|大祥区,430511|北塔区,430521|邵东县,430522|新邵县,430523|邵阳县,430524|隆回县,430525|洞口县,430527|绥宁县,430528|新宁县,430529|城步苗族自治县,430581|武冈市,430600|岳阳市,430601|市辖区,430602|岳阳楼区,430603|云溪区,430611|君山区,430621|岳阳县,430623|华容县,430624|湘阴县,430626|平江县,430681|汨罗市,430682|临湘市,430700|常德市,430701|市辖区,430702|武陵区,430703|鼎城区,430721|安乡县,430722|汉寿县,430723|澧县,430724|临澧县,430725|桃源县,430726|石门县,430781|津市市,430800|张家界市,430801|市辖区,430802|永定区,430811|武陵源区,430821|慈利县,430822|桑植县,430900|益阳市,430901|市辖区,430902|资阳区,430903|赫山区,430921|南县,430922|桃江县,430923|安化县,430981|沅江市,431000|郴州市,431001|市辖区,431002|北湖区,431003|苏仙区,431021|桂阳县,431022|宜章县,431023|永兴县,431024|嘉禾县,431025|临武县,431026|汝城县,431027|桂东县,431028|安仁县,431081|资兴市,431100|永州市,431101|市辖区,431102|零陵区,431103|冷水滩区,431121|祁阳县,431122|东安县,431123|双牌县,431124|道县,431125|江永县,431126|宁远县,431127|蓝山县,431128|新田县,431129|江华瑶族自治县,431200|怀化市,431201|市辖区,431202|鹤城区,431221|中方县,431222|沅陵县,431223|辰溪县,431224|溆浦县,431225|会同县,431226|麻阳苗族自治县,431227|新晃侗族自治县,431228|芷江侗族自治县,431229|靖州苗族侗族自治县,431230|通道侗族自治县,431281|洪江市,431300|娄底市,431301|市辖区,431302|娄星区,431321|双峰县,431322|新化县,431381|冷水江市,431382|涟源市,433100|湘西土家族苗族自治州,433101|吉首市,433122|泸溪县,433123|凤凰县,433124|花垣县,433125|保靖县,433126|古丈县,433127|永顺县,433130|龙山县,440000|广东省,440100|广州市,440101|市辖区,440103|荔湾区,440104|越秀区,440105|海珠区,440106|天河区,440111|白云区,440112|黄埔区,440113|番禺区,440114|花都区,440115|南沙区,440116|萝岗区,440183|增城市,440184|从化市,440200|韶关市,440201|市辖区,440203|武江区,440204|浈江区,440205|曲江区,440222|始兴县,440224|仁化县,440229|翁源县,440232|乳源瑶族自治县,440233|新丰县,440281|乐昌市,440282|南雄市,440300|深圳市,440301|市辖区,440303|罗湖区,440304|福田区,440305|南山区,440306|宝安区,440307|龙岗区,440308|盐田区,440400|珠海市,440401|市辖区,440402|香洲区,440403|斗门区,440404|金湾区,440500|汕头市,440501|市辖区,440507|龙湖区,440511|金平区,440512|濠江区,440513|潮阳区,440514|潮南区,440515|澄海区,440523|南澳县,440600|佛山市,440601|市辖区,440604|禅城区,440605|南海区,440606|顺德区,440607|三水区,440608|高明区,440700|江门市,440701|市辖区,440703|蓬江区,440704|江海区,440705|新会区,440781|台山市,440783|开平市,440784|鹤山市,440785|恩平市,440800|湛江市,440801|市辖区,440802|赤坎区,440803|霞山区,440804|坡头区,440811|麻章区,440823|遂溪县,440825|徐闻县,440881|廉江市,440882|雷州市,440883|吴川市,440900|茂名市,440901|市辖区,440902|茂南区,440903|茂港区,440923|电白县,440981|高州市,440982|化州市,440983|信宜市,441200|肇庆市,441201|市辖区,441202|端州区,441203|鼎湖区,441223|广宁县,441224|怀集县,441225|封开县,441226|德庆县,441283|高要市,441284|四会市,441300|惠州市,441301|市辖区,441302|惠城区,441303|惠阳区,441322|博罗县,441323|惠东县,441324|龙门县,441400|梅州市,441401|市辖区,441402|梅江区,441421|梅县,441422|大埔县,441423|丰顺县,441424|五华县,441426|平远县,441427|蕉岭县,441481|兴宁市,441500|汕尾市,441501|市辖区,441502|城区,441521|海丰县,441523|陆河县,441581|陆丰市,441600|河源市,441601|市辖区,441602|源城区,441621|紫金县,441622|龙川县,441623|连平县,441624|和平县,441625|东源县,441700|阳江市,441701|市辖区,441702|江城区,441721|阳西县,441723|阳东县,441781|阳春市,441800|清远市,441801|市辖区,441802|清城区,441821|佛冈县,441823|阳山县,441825|连山壮族瑶族自治县,441826|连南瑶族自治县,441827|清新县,441881|英德市,441882|连州市,441900|东莞市,442000|中山市,445100|潮州市,445101|市辖区,445102|湘桥区,445121|潮安县,445122|饶平县,445200|揭阳市,445201|市辖区,445202|榕城区,445221|揭东县,445222|揭西县,445224|惠来县,445281|普宁市,445300|云浮市,445301|市辖区,445302|云城区,445321|新兴县,445322|郁南县,445323|云安县,445381|罗定市,450000|广西壮族自治区,450100|南宁市,450101|市辖区,450102|兴宁区,450103|青秀区,450105|江南区,450107|西乡塘区,450108|良庆区,450109|邕宁区,450122|武鸣县,450123|隆安县,450124|马山县,450125|上林县,450126|宾阳县,450127|横县,450200|柳州市,450201|市辖区,450202|城中区,450203|鱼峰区,450204|柳南区,450205|柳北区,450221|柳江县,450222|柳城县,450223|鹿寨县,450224|融安县,450225|融水苗族自治县,450226|三江侗族自治县,450300|桂林市,450301|市辖区,450302|秀峰区,450303|叠彩区,450304|象山区,450305|七星区,450311|雁山区,450321|阳朔县,450322|临桂县,450323|灵川县,450324|全州县,450325|兴安县,450326|永福县,450327|灌阳县,450328|龙胜各族自治县,450329|资源县,450330|平乐县,450331|荔蒲县,450332|恭城瑶族自治县,450400|梧州市,450401|市辖区,450403|万秀区,450404|蝶山区,450405|长洲区,450421|苍梧县,450422|藤县,450423|蒙山县,450481|岑溪市,450500|北海市,450501|市辖区,450502|海城区,450503|银海区,450512|铁山港区,450521|合浦县,450600|防城港市,450601|市辖区,450602|港口区,450603|防城区,450621|上思县,450681|东兴市,450700|钦州市,450701|市辖区,450702|钦南区,450703|钦北区,450721|灵山县,450722|浦北县,450800|贵港市,450801|市辖区,450802|港北区,450803|港南区,450804|覃塘区,450821|平南县,450881|桂平市,450900|玉林市,450901|市辖区,450902|玉州区,450921|容县,450922|陆川县,450923|博白县,450924|兴业县,450981|北流市,451000|百色市,451001|市辖区,451002|右江区,451021|田阳县,451022|田东县,451023|平果县,451024|德保县,451025|靖西县,451026|那坡县,451027|凌云县,451028|乐业县,451029|田林县,451030|西林县,451031|隆林各族自治县,451100|贺州市,451101|市辖区,451102|八步区,451121|昭平县,451122|钟山县,451123|富川瑶族自治县,451200|河池市,451201|市辖区,451202|金城江区,451221|南丹县,451222|天峨县,451223|凤山县,451224|东兰县,451225|罗城仫佬族自治县,451226|环江毛南族自治县,451227|巴马瑶族自治县,451228|都安瑶族自治县,451229|大化瑶族自治县,451281|宜州市,451300|来宾市,451301|市辖区,451302|兴宾区,451321|忻城县,451322|象州县,451323|武宣县,451324|金秀瑶族自治县,451381|合山市,451400|崇左市,451401|市辖区,451402|江洲区,451421|扶绥县,451422|宁明县,451423|龙州县,451424|大新县,451425|天等县,451481|凭祥市,460000|海南省,460100|海口市,460101|市辖区,460105|秀英区,460106|龙华区,460107|琼山区,460108|美兰区,460200|三亚市,460201|市辖区,469000|省直辖县级行政单位,469001|五指山市,469002|琼海市,469003|儋州市,469005|文昌市,469006|万宁市,469007|东方市,469021|定安县,469022|屯昌县,469023|澄迈县,469024|临高县,469025|白沙黎族自治县,469026|昌江黎族自治县,469027|乐东黎族自治县,469028|陵水黎族自治县,469029|保亭黎族苗族自治县,469030|琼中黎族苗族自治县,469031|西沙群岛,469032|南沙群岛,469033|中沙群岛的岛礁及其海域,500000|重庆市,500100|市辖区,500101|万州区,500102|涪陵区,500103|渝中区,500104|大渡口区,500105|江北区,500106|沙坪坝区,500107|九龙坡区,500108|南岸区,500109|北碚区,500110|万盛区,500111|双桥区,500112|渝北区,500113|巴南区,500114|黔江区,500115|长寿区,500116|江津区,500117|合川区,500118|永川区,500119|南川区,500200|县,500222|綦江县,500223|潼南县,500224|铜梁县,500225|大足县,500226|荣昌县,500227|璧山县,500228|梁平县,500229|城口县,500230|丰都县,500231|垫江县,500232|武隆县,500233|忠县,500234|开县,500235|云阳县,500236|奉节县,500237|巫山县,500238|巫溪县,500240|石柱土家族自治县,500241|秀山土家族苗族自治县,500242|酉阳土家族苗族自治县,500243|彭水苗族土家族自治县,510000|四川省,510100|成都市,510101|市辖区,510104|锦江区,510105|青羊区,510106|金牛区,510107|武侯区,510108|成华区,510112|龙泉驿区,510113|青白江区,510114|新都区,510115|温江区,510121|金堂县,510122|双流县,510124|郫县,510129|大邑县,510131|蒲江县,510132|新津县,510181|都江堰市,510182|彭州市,510183|邛崃市,510184|崇州市,510300|自贡市,510301|市辖区,510302|自流井区,510303|贡井区,510304|大安区,510311|沿滩区,510321|荣县,510322|富顺县,510400|攀枝花市,510401|市辖区,510402|东区,510403|西区,510411|仁和区,510421|米易县,510422|盐边县,510500|泸州市,510501|市辖区,510502|江阳区,510503|纳溪区,510504|龙马潭区,510521|泸县,510522|合江县,510524|叙永县,510525|古蔺县,510600|德阳市,510601|市辖区,510603|旌阳区,510623|中江县,510626|罗江县,510681|广汉市,510682|什邡市,510683|绵竹市,510700|绵阳市,510701|市辖区,510703|涪城区,510704|游仙区,510722|三台县,510723|盐亭县,510724|安县,510725|梓潼县,510726|北川羌族自治县,510727|平武县,510781|江油市,510800|广元市,510801|市辖区,510802|市中区,510811|元坝区,510812|朝天区,510821|旺苍县,510822|青川县,510823|剑阁县,510824|苍溪县,510900|遂宁市,510901|市辖区,510903|船山区,510904|安居区,510921|蓬溪县,510922|射洪县,510923|大英县,511000|内江市,511001|市辖区,511002|市中区,511011|东兴区,511024|威远县,511025|资中县,511028|隆昌县,511100|乐山市,511101|市辖区,511102|市中区,511111|沙湾区,511112|五通桥区,511113|金口河区,511123|犍为县,511124|井研县,511126|夹江县,511129|沐川县,511132|峨边彝族自治县,511133|马边彝族自治县,511181|峨眉山市,511300|南充市,511301|市辖区,511302|顺庆区,511303|高坪区,511304|嘉陵区,511321|南部县,511322|营山县,511323|蓬安县,511324|仪陇县,511325|西充县,511381|阆中市,511400|眉山市,511401|市辖区,511402|东坡区,511421|仁寿县,511422|彭山县,511423|洪雅县,511424|丹棱县,511425|青神县,511500|宜宾市,511501|市辖区,511502|翠屏区,511521|宜宾县,511522|南溪县,511523|江安县,511524|长宁县,511525|高县,511526|珙县,511527|筠连县,511528|兴文县,511529|屏山县,511600|广安市,511601|市辖区,511602|广安区,511621|岳池县,511622|武胜县,511623|邻水县,511681|华蓥市,511700|达州市,511701|市辖区,511702|通川区,511721|达县,511722|宣汉县,511723|开江县,511724|大竹县,511725|渠县,511781|万源市,511800|雅安市,511801|市辖区,511802|雨城区,511821|名山县,511822|荥经县,511823|汉源县,511824|石棉县,511825|天全县,511826|芦山县,511827|宝兴县,511900|巴中市,511901|市辖区,511902|巴州区,511921|通江县,511922|南江县,511923|平昌县,512000|资阳市,512001|市辖区,512002|雁江区,512021|安岳县,512022|乐至县,512081|简阳市,513200|阿坝藏族羌族自治州,513221|汶川县,513222|理县,513223|茂县,513224|松潘县,513225|九寨沟县,513226|金川县,513227|小金县,513228|黑水县,513229|马尔康县,513230|壤塘县,513231|阿坝县,513232|若尔盖县,513233|红原县,513300|甘孜藏族自治州,513321|康定县,513322|泸定县,513323|丹巴县,513324|九龙县,513325|雅江县,513326|道孚县,513327|炉霍县,513328|甘孜县,513329|新龙县,513330|德格县,513331|白玉县,513332|石渠县,513333|色达县,513334|理塘县,513335|巴塘县,513336|乡城县,513337|稻城县,513338|得荣县,513400|凉山彝族自治州,513401|西昌市,513422|木里藏族自治县,513423|盐源县,513424|德昌县,513425|会理县,513426|会东县,513427|宁南县,513428|普格县,513429|布拖县,513430|金阳县,513431|昭觉县,513432|喜德县,513433|冕宁县,513434|越西县,513435|甘洛县,513436|美姑县,513437|雷波县,520000|贵州省,520100|贵阳市,520101|市辖区,520102|南明区,520103|云岩区,520111|花溪区,520112|乌当区,520113|白云区,520114|小河区,520121|开阳县,520122|息烽县,520123|修文县,520181|清镇市,520200|六盘水市,520201|钟山区,520203|六枝特区,520221|水城县,520222|盘县,520300|遵义市,520301|市辖区,520302|红花岗区,520303|汇川区,520321|遵义县,520322|桐梓县,520323|绥阳县,520324|正安县,520325|道真仡佬族苗族自治县,520326|务川仡佬族苗族自治县,520327|凤冈县,520328|湄潭县,520329|余庆县,520330|习水县,520381|赤水市,520382|仁怀市,520400|安顺市,520401|市辖区,520402|西秀区,520421|平坝县,520422|普定县,520423|镇宁布依族苗族自治县,520424|关岭布依族苗族自治县,520425|紫云苗族布依族自治县,522200|铜仁地区,522201|铜仁市,522222|江口县,522223|玉屏侗族自治县,522224|石阡县,522225|思南县,522226|印江土家族苗族自治县,522227|德江县,522228|沿河土家族自治县,522229|松桃苗族自治县,522230|万山特区,522300|黔西南布依族苗族自治州,522301|兴义市,522322|兴仁县,522323|普安县,522324|晴隆县,522325|贞丰县,522326|望谟县,522327|册亨县,522328|安龙县,522400|毕节地区,522401|毕节市,522422|大方县,522423|黔西县,522424|金沙县,522425|织金县,522426|纳雍县,522427|威宁彝族回族苗族自治县,522428|赫章县,522600|黔东南苗族侗族自治州,522601|凯里市,522622|黄平县,522623|施秉县,522624|三穗县,522625|镇远县,522626|岑巩县,522627|天柱县,522628|锦屏县,522629|剑河县,522630|台江县,522631|黎平县,522632|榕江县,522633|从江县,522634|雷山县,522635|麻江县,522636|丹寨县,522700|黔南布依族苗族自治州,522701|都匀市,522702|福泉市,522722|荔波县,522723|贵定县,522725|瓮安县,522726|独山县,522727|平塘县,522728|罗甸县,522729|长顺县,522730|龙里县,522731|惠水县,522732|三都水族自治县,530000|云南省,530100|昆明市,530101|市辖区,530102|五华区,530103|盘龙区,530111|官渡区,530112|西山区,530113|东川区,530121|呈贡县,530122|晋宁县,530124|富民县,530125|宜良县,530126|石林彝族自治县,530127|嵩明县,530128|禄劝彝族苗族自治县,530129|寻甸回族彝族自治县,530181|安宁市,530300|曲靖市,530301|市辖区,530302|麒麟区,530321|马龙县,530322|陆良县,530323|师宗县,530324|罗平县,530325|富源县,530326|会泽县,530328|沾益县,530381|宣威市,530400|玉溪市,530401|市辖区,530402|红塔区,530421|江川县,530422|澄江县,530423|通海县,530424|华宁县,530425|易门县,530426|峨山彝族自治县,530427|新平彝族傣族自治县,530428|元江哈尼族彝族傣族自治县,530500|保山市,530501|市辖区,530502|隆阳区,530521|施甸县,530522|腾冲县,530523|龙陵县,530524|昌宁县,530600|昭通市,530601|市辖区,530602|昭阳区,530621|鲁甸县,530622|巧家县,530623|盐津县,530624|大关县,530625|永善县,530626|绥江县,530627|镇雄县,530628|彝良县,530629|威信县,530630|水富县,530700|丽江市,530701|市辖区,530702|古城区,530721|玉龙纳西族自治县,530722|永胜县,530723|华坪县,530724|宁蒗彝族自治县,530800|普洱市,530801|市辖区,530802|思茅区,530821|宁洱哈尼族彝族自治县,530822|墨江哈尼族自治县,530823|景东彝族自治县,530824|景谷傣族彝族自治县,530825|镇沅彝族哈尼族拉祜族自治县,530826|江城哈尼族彝族自治县,530827|孟连傣族拉祜族佤族自治县,530828|澜沧拉祜族自治县,530829|西盟佤族自治县,530900|临沧市,530901|市辖区,530902|临翔区,530921|凤庆县,530922|云县,530923|永德县,530924|镇康县,530925|双江拉祜族佤族布朗族傣族自治县,530926|耿马傣族佤族自治县,530927|沧源佤族自治县,532300|楚雄彝族自治州,532301|楚雄市,532322|双柏县,532323|牟定县,532324|南华县,532325|姚安县,532326|大姚县,532327|永仁县,532328|元谋县,532329|武定县,532331|禄丰县,532500|红河哈尼族彝族自治州,532501|个旧市,532502|开远市,532522|蒙自县,532523|屏边苗族自治县,532524|建水县,532525|石屏县,532526|弥勒县,532527|泸西县,532528|元阳县,532529|红河县,532530|金平苗族瑶族傣族自治县,532531|绿春县,532532|河口瑶族自治县,532600|文山壮族苗族自治州,532621|文山县,532622|砚山县,532623|西畴县,532624|麻栗坡县,532625|马关县,532626|丘北县,532627|广南县,532628|富宁县,532800|西双版纳傣族自治州,532801|景洪市,532822|勐海县,532823|勐腊县,532900|大理白族自治州,532901|大理市,532922|漾濞彝族自治县,532923|祥云县,532924|宾川县,532925|弥渡县,532926|南涧彝族自治县,532927|巍山彝族回族自治县,532928|永平县,532929|云龙县,532930|洱源县,532931|剑川县,532932|鹤庆县,533100|德宏傣族景颇族自治州,533102|瑞丽市,533103|潞西市,533122|梁河县,533123|盈江县,533124|陇川县,533300|怒江傈僳族自治州,533321|泸水县,533323|福贡县,533324|贡山独龙族怒族自治县,533325|兰坪白族普米族自治县,533400|迪庆藏族自治州,533421|香格里拉县,533422|德钦县,533423|维西傈僳族自治县,540000|西藏自治区,540100|拉萨市,540101|市辖区,540102|城关区,540121|林周县,540122|当雄县,540123|尼木县,540124|曲水县,540125|堆龙德庆县,540126|达孜县,540127|墨竹工卡县,542100|昌都地区,542121|昌都县,542122|江达县,542123|贡觉县,542124|类乌齐县,542125|丁青县,542126|察雅县,542127|八宿县,542128|左贡县,542129|芒康县,542132|洛隆县,542133|边坝县,542200|山南地区,542221|乃东县,542222|扎囊县,542223|贡嘎县,542224|桑日县,542225|琼结县,542226|曲松县,542227|措美县,542228|洛扎县,542229|加查县,542231|隆子县,542232|错那县,542233|浪卡子县,542300|日喀则地区,542301|日喀则市,542322|南木林县,542323|江孜县,542324|定日县,542325|萨迦县,542326|拉孜县,542327|昂仁县,542328|谢通门县,542329|白朗县,542330|仁布县,542331|康马县,542332|定结县,542333|仲巴县,542334|亚东县,542335|吉隆县,542336|聂拉木县,542337|萨嘎县,542338|岗巴县,542400|那曲地区,542421|那曲县,542422|嘉黎县,542423|比如县,542424|聂荣县,542425|安多县,542426|申扎县,542427|索县,542428|班戈县,542429|巴青县,542430|尼玛县,542500|阿里地区,542521|普兰县,542522|札达县,542523|噶尔县,542524|日土县,542525|革吉县,542526|改则县,542527|措勤县,542600|林芝地区,542621|林芝县,542622|工布江达县,542623|米林县,542624|墨脱县,542625|波密县,542626|察隅县,542627|朗县,610000|陕西省,610100|西安市,610101|市辖区,610102|新城区,610103|碑林区,610104|莲湖区,610111|灞桥区,610112|未央区,610113|雁塔区,610114|阎良区,610115|临潼区,610116|长安区,610122|蓝田县,610124|周至县,610125|户县,610126|高陵县,610200|铜川市,610201|市辖区,610202|王益区,610203|印台区,610204|耀州区,610222|宜君县,610300|宝鸡市,610301|市辖区,610302|渭滨区,610303|金台区,610304|陈仓区,610322|凤翔县,610323|岐山县,610324|扶风县,610326|眉县,610327|陇县,610328|千阳县,610329|麟游县,610330|凤县,610331|太白县,610400|咸阳市,610401|市辖区,610402|秦都区,610403|杨凌区,610404|渭城区,610422|三原县,610423|泾阳县,610424|乾县,610425|礼泉县,610426|永寿县,610427|彬县,610428|长武县,610429|旬邑县,610430|淳化县,610431|武功县,610481|兴平市,610500|渭南市,610501|市辖区,610502|临渭区,610521|华县,610522|潼关县,610523|大荔县,610524|合阳县,610525|澄城县,610526|蒲城县,610527|白水县,610528|富平县,610581|韩城市,610582|华阴市,610600|延安市,610601|市辖区,610602|宝塔区,610621|延长县,610622|延川县,610623|子长县,610624|安塞县,610625|志丹县,610626|吴起县,610627|甘泉县,610628|富县,610629|洛川县,610630|宜川县,610631|黄龙县,610632|黄陵县,610700|汉中市,610701|市辖区,610702|汉台区,610721|南郑县,610722|城固县,610723|洋县,610724|西乡县,610725|勉县,610726|宁强县,610727|略阳县,610728|镇巴县,610729|留坝县,610730|佛坪县,610800|榆林市,610801|市辖区,610802|榆阳区,610821|神木县,610822|府谷县,610823|横山县,610824|靖边县,610825|定边县,610826|绥德县,610827|米脂县,610828|佳县,610829|吴堡县,610830|清涧县,610831|子洲县,610900|安康市,610901|市辖区,610902|汉滨区,610921|汉阴县,610922|石泉县,610923|宁陕县,610924|紫阳县,610925|岚皋县,610926|平利县,610927|镇坪县,610928|旬阳县,610929|白河县,611000|商洛市,611001|市辖区,611002|商州区,611021|洛南县,611022|丹凤县,611023|商南县,611024|山阳县,611025|镇安县,611026|柞水县,620000|甘肃省,620100|兰州市,620101|市辖区,620102|城关区,620103|七里河区,620104|西固区,620105|安宁区,620111|红古区,620121|永登县,620122|皋兰县,620123|榆中县,620200|嘉峪关市,620201|市辖区,620300|金昌市,620301|市辖区,620302|金川区,620321|永昌县,620400|白银市,620401|市辖区,620402|白银区,620403|平川区,620421|靖远县,620422|会宁县,620423|景泰县,620500|天水市,620501|市辖区,620502|秦州区,620503|麦积区,620521|清水县,620522|秦安县,620523|甘谷县,620524|武山县,620525|张家川回族自治县,620600|武威市,620601|市辖区,620602|凉州区,620621|民勤县,620622|古浪县,620623|天祝藏族自治县,620700|张掖市,620701|市辖区,620702|甘州区,620721|肃南裕固族自治县,620722|民乐县,620723|临泽县,620724|高台县,620725|山丹县,620800|平凉市,620801|市辖区,620802|崆峒区,620821|泾川县,620822|灵台县,620823|崇信县,620824|华亭县,620825|庄浪县,620826|静宁县,620900|酒泉市,620901|市辖区,620902|肃州区,620921|金塔县,620922|瓜州县,620923|肃北蒙古族自治县,620924|阿克塞哈萨克族自治县,620981|玉门市,620982|敦煌市,621000|庆阳市,621001|市辖区,621002|西峰区,621021|庆城县,621022|环县,621023|华池县,621024|合水县,621025|正宁县,621026|宁县,621027|镇原县,621100|定西市,621101|市辖区,621102|安定区,621121|通渭县,621122|陇西县,621123|渭源县,621124|临洮县,621125|漳县,621126|岷县,621200|陇南市,621201|市辖区,621202|武都区,621221|成县,621222|文县,621223|宕昌县,621224|康县,621225|西和县,621226|礼县,621227|徽县,621228|两当县,622900|临夏回族自治州,622901|临夏市,622921|临夏县,622922|康乐县,622923|永靖县,622924|广河县,622925|和政县,622926|东乡族自治县,622927|积石山保安族东乡族撒拉族自治县,623000|甘南藏族自治州,623001|合作市,623021|临潭县,623022|卓尼县,623023|舟曲县,623024|迭部县,623025|玛曲县,623026|碌曲县,623027|夏河县,630000|青海省,630100|西宁市,630101|市辖区,630102|城东区,630103|城中区,630104|城西区,630105|城北区,630121|大通回族土族自治县,630122|湟中县,630123|湟源县,632100|海东地区,632121|平安县,632122|民和回族土族自治县,632123|乐都县,632126|互助土族自治县,632127|化隆回族自治县,632128|循化撒拉族自治县,632200|海北藏族自治州,632221|门源回族自治县,632222|祁连县,632223|海晏县,632224|刚察县,632300|黄南藏族自治州,632321|同仁县,632322|尖扎县,632323|泽库县,632324|河南蒙古族自治县,632500|海南藏族自治州,632521|共和县,632522|同德县,632523|贵德县,632524|兴海县,632525|贵南县,632600|果洛藏族自治州,632621|玛沁县,632622|班玛县,632623|甘德县,632624|达日县,632625|久治县,632626|玛多县,632700|玉树藏族自治州,632721|玉树县,632722|杂多县,632723|称多县,632724|治多县,632725|囊谦县,632726|曲麻莱县,632800|海西蒙古族藏族自治州,632801|格尔木市,632802|德令哈市,632821|乌兰县,632822|都兰县,632823|天峻县,640000|宁夏回族自治区,640100|银川市,640101|市辖区,640104|兴庆区,640105|西夏区,640106|金凤区,640121|永宁县,640122|贺兰县,640181|灵武市,640200|石嘴山市,640201|市辖区,640202|大武口区,640205|惠农区,640221|平罗县,640300|吴忠市,640301|市辖区,640302|利通区,640323|盐池县,640324|同心县,640381|青铜峡市,640400|固原市,640401|市辖区,640402|原州区,640422|西吉县,640423|隆德县,640424|泾源县,640425|彭阳县,640500|中卫市,640501|市辖区,640502|沙坡头区,640521|中宁县,640522|海原县,650000|新疆维吾尔自治区,650100|乌鲁木齐市,650101|市辖区,650102|天山区,650103|沙依巴克区,650104|新市区,650105|水磨沟区,650106|头屯河区,650107|达坂城区,650109|米东区,650121|乌鲁木齐县,650200|克拉玛依市,650201|市辖区,650202|独山子区,650203|克拉玛依区,650204|白碱滩区,650205|乌尔禾区,652100|吐鲁番地区,652101|吐鲁番市,652122|鄯善县,652123|托克逊县,652200|哈密地区,652201|哈密市,652222|巴里坤哈萨克自治县,652223|伊吾县,652300|昌吉回族自治州,652301|昌吉市,652302|阜康市,652323|呼图壁县,652324|玛纳斯县,652325|奇台县,652327|吉木萨尔县,652328|木垒哈萨克自治县,652700|博尔塔拉蒙古自治州,652701|博乐市,652722|精河县,652723|温泉县,652800|巴音郭楞蒙古自治州,652801|库尔勒市,652822|轮台县,652823|尉犁县,652824|若羌县,652825|且末县,652826|焉耆回族自治县,652827|和静县,652828|和硕县,652829|博湖县,652900|阿克苏地区,652901|阿克苏市,652922|温宿县,652923|库车县,652924|沙雅县,652925|新和县,652926|拜城县,652927|乌什县,652928|阿瓦提县,652929|柯坪县,653000|克孜勒苏柯尔克孜自治州,653001|阿图什市,653022|阿克陶县,653023|阿合奇县,653024|乌恰县,653100|喀什地区,653101|喀什市,653121|疏附县,653122|疏勒县,653123|英吉沙县,653124|泽普县,653125|莎车县,653126|叶城县,653127|麦盖提县,653128|岳普湖县,653129|伽师县,653130|巴楚县,653131|塔什库尔干塔吉克自治县,653200|和田地区,653201|和田市,653221|和田县,653222|墨玉县,653223|皮山县,653224|洛浦县,653225|策勒县,653226|于田县,653227|民丰县,654000|伊犁哈萨克自治州,654002|伊宁市,654003|奎屯市,654021|伊宁县,654022|察布查尔锡伯自治县,654023|霍城县,654024|巩留县,654025|新源县,654026|昭苏县,654027|特克斯县,654028|尼勒克县,654200|塔城地区,654201|塔城市,654202|乌苏市,654221|额敏县,654223|沙湾县,654224|托里县,654225|裕民县,654226|和布克赛尔蒙古自治县,654300|阿勒泰地区,654301|阿勒泰市,654321|布尔津县,654322|富蕴县,654323|福海县,654324|哈巴河县,654325|青河县,654326|吉木乃县,659000|自治区直辖县级行政单位,659001|石河子市,659002|阿拉尔市,659003|图木舒克市,659004|五家渠市,710000|台湾省,810000|香港特别行政区,820000|澳门特别行政区',
        selectProvince: '请选择省份',
        selectCity: '请选择城市',
        selectCountry: '请选择辖区',
        selectAddress: '请选择地址',
        province: '省份',
        city: '城市',
        district: '区县'
    },

    /**
     * 登录 页面国际化
     * 负责人：chenwenxiao
     **/
    v_login: {
        titleM: '管理平台',
        titleA: '账号登录',
        userBox: '账号登录',
        loginBtn: '登录',
        msgLoginFailed: '登录失败',
        rememberPwd: '记住密码',
        //copyright: '版权所有©2016 深圳市优克联新技术有限公司',
        copyright: 'Ucloudlink copyright © 2017 All Rights Reserved',
        icp: '粤ICP备14087725号-4'
    },
    v_homeOrderReturn: {
        list: {
            serialNumber: '订单编号',
            customerName: '客户姓名',
            customerPhone: '客户电话',
            imei: 'IMEI',
            endDate: '回国时间',
            overDay: '延期天数',
            orderProgress: '订单进度',
            reletEndDate: '续租结束时间'
        },
        title: '待归还列表',
        titleDelayT: '逾期十天未归还',
        titleDelay: '逾期未归还',
        search: '查询',
        IMEI: 'IMEI',
        customerName: '客户姓名',
        customerPhone: '客户电话',
        serialNumber: '订单编号',
        batchReturn: '批量归还',
        back: '归还'
    },
    /**
     * 系统参数配置 页面国际化
     * 负责人：chenwenxiao
     **/
    v_systemParamConf: {
        list: {
            'code': '参数编码',
            'name': '参数名称',
            'data': '参数取值',
            'remark': '备注',
            'status': '状态',
            'mvnoCode': 'MVNO',
            'createTime': '创建时间',
            'updateTime': '更新时间'
        },
        all: '全部',
        yes: '是',
        no: '否',
        effective: '有效',
        invalid: '无效',
        code: '参数编码',
        name: '参数名称',
        data: '参数取值',
        mvnoCode: 'MVNO',
        createTime: '创建时间',
        updateTime: '更新时间',
        search: '查询',
        detail: '详情',
        edit: '编辑',
        add: '新增',
        del: '删除',
        editSuccess: '编辑成功',
        editFailed: '编辑失败',
        delSuccess: '删除成功',
        delFailed: '删除失败',
        addSuccess: '新增成功',
        addFailed: '新增失败',
        delConfirm: '真的要删除这条数据吗？',
        status: '状态',
        status_type: {
            '': '全部',
            'Common@valid': '有效',
            'Common@invalid': '无效'
        }
    },

    /**
     * 字典表 页面国际化
     * 负责人：wanglehui
     **/
    v_dictionary: {
        list: {
            'type': '字典类型',
            'key': '字典编码',
            'langType': '语言',
            'value': '字典取值',
            'status': '状态',
            'description': '描述',
            'createTime': '创建时间'
        },
        all: '全部',
        type: '字典类型',
        key: '字典编码',
        value: '　字典值',
        effective: '有效',
        invalid: '无效',
        description: '字典描述',
        langType: '语言类型',
        status: '状　　态',
        search: '查询',
        detail: '详情',
        edit: '编辑',
        editSuccess: '编辑字典值成功！',
        editFailed: '编辑字典值失败！',
        add: '新增',
        addSuccess: '新增字典值成功！',
        addFailed: '新增字典值失败！',
        del: '删除',
        delConfirm: '真的要删除这条数据吗？',
        delSuccess: '删除字典值成功！',
        delFailed: '删除字典值失败！'
    },

    /**
     * 集团账户 页面国际化
     * 负责人：huangchao (test)
     **/
    v_groupAccount: {
        list: {
            'groupName': '集团账户名称',
            'partnerCode': '集团账户编码',
            'userCodeSuffix': '子账户规则',
            'isDefault': '是否默认',
            'mvnoCode': 'MVNO',
            'status': '数据状态',
            'createUserName': '创建人',
            'createTime': '创建时间'
        },
        yes: '是',
        no: '否',
        groupName: '集团账户名称',
        dataStatus: '数据状态',
        newFrameworkCode: '集团账户编码',
        newFrameworkAccountRule: '子账户规则',
        MVNO: 'MVNO',
        createUserName: '创建人',
        createTime: '创建时间',
        value: '　字典值',
        effective: '有效',
        invalid: '无效',
        description: '字典描述',
        lanType: '语言类型',
        status: '是否默认',
        search: '查询',
        detail: '详情',
        edit: '编辑',
        editSuccess: '编辑成功！',
        editFailed: '编辑失败！',
        add: '新增',
        addSuccess: '新增成功！',
        addFailed: '新增失败！',
        del: '删除',
        delConfirm: '真的要删除这条数据吗？',
        delSuccess: '删除成功！',
        delFailed: '删除失败！',
        lan_type: {
            'zh-CN': '简体中文',
            'zh-TW': '繁体中文',
            'en-US': '英文'
        },
        select_lantype_edit: {
            'zh-CN': 'zh-CN',
            'zh-TW': 'zh-TW',
            'en-US': 'en-US'
        },
        status_type: {
            'Common@all': '全部',
            'Common@valid': '有效',
            'Common@invalid': '无效'
        },
        status_YN: {
            'CommonType@yes': '是',
            'CommonType@no': '否'
        },
        dataStatusLabel: {
            'Common@all': '全部',
            'Common@valid': '有效',
            'Common@invalid': '无效'
        },
        status_radio: {
            'Common@valid': '有效',
            'Common@invalid': '无效'
        },
        MVNO_label: {
            'Common@valid': '漫游超人'
        }
    },

    /**
     * 通知 页面国际化
     * 负责人：lihuan
     **/
    v_notice: {
        list: {
            'noticeNum': '发文号',
            'title': '标题',
            'titlePicture': '标题图片',
            'emergencyDegree': '紧急程度',
            'pushWay': '发布方式',
            'roleNameListStr': '推送对象',
            'noticeStatus': '状态',
            'createName': '创建人',
            'createTime': '创建时间',
            'updateTime': '更新时间',
            'isRead': '是否阅读',
            'contentPicture': '内容图片',
            'createUser': '创建账号',
            'mvnoCode': 'MVNO',
            'content': '内容'
        },
        createTime: '创建时间',
        content: '内容',
        imgUploadSuccess: '图片上传成功',
        imgUploadFailed: '图片上传失败',
        add: '新增',
        search: '查询',
        detail: '详情',
        edit: '编辑',
        del: '删除',
        read: '发布',
        offline: '下线',
        browse: '浏览',
        bgTime: '创建时间',
        endTime: '更新时间',
        editSuccess: '编辑成功',
        editFailed: '编辑失败',
        delSuccess: '删除成功',
        delFailed: '删除失败',
        readSuccess: '发布成功',
        readFailed: '发布失败',
        offlineSuccess: '下线成功',
        offlineFailed: '下线失败',
        delConfirm: '确定要删除这条数据信息？',
        readConfirm: '确定要发布这条数据信息？',
        offlineConfirm: '确定要下线这条数据信息？',
        addSuccess: '新增成功',
        addFailed: '新增失败',
        createName: '创建人',
        createUser: '创建账号',
        state: '状态',
        language: '语言',
        mvno: 'MVNO',
        mvno_1: 'MVNO',
        state_1: '状态',
        title_1: '标题',
        noticeNum_1: '发文号',
        emergencyDegree_1: '紧急程度',
        pushWay_1: '发布方式',
        isRead_1: '是否阅读',
        title: '标题',
        noticeNum: '发文号',
        isRead: '是否已读',
        emergencyDegree: '紧急程度',
        pushWay: '发布方式',
        roleNameListStr: '推送对象',
        tipsRoleName: '推送对象不能为空',
        titlePicture: '标题图片',
        contentPicture: '内容图片',
        all: '全部',
        to: '至',
        roleTitle: '推送对象',
        pleaseObject: '请选择推送对象',
        placeholder: '搜索...',
        confirm: '确定',
        internetBug: '网络异常',
        emergencyDegree_type: {
            'NoticeEmergencydegree@commonly': '一般',
            'NoticeEmergencydegree@urgent': '紧急',
            'NoticeEmergencydegree@exigence': '非常紧急'
        },
        isRead_type: {
            'CommonType@yes': '是',
            'CommonType@no': '否'
        },
        pushWay_tpye: {
            'NoticePublishModel@ordinary': '普通',
            'NoticePublishModel@force': '强制'
        },
        status_type: {
            'NoticeStatus@publish': '发布',
            'NoticeStatus@draft': '草稿',
            'NoticeStatus@offline': '下线'
        }
    },

    /**
     * 基础设置 赔偿管理
     * 负责人：wanglehui
     **/
    v_damages: {
        list: {
            'damagesCode': '赔偿编码',
            'damagesName': '赔偿名称',
            'damagesPrice': '赔偿金额',
            'langType': '语言',
            'description': '描述',
            'damagesType': '赔偿类型',
            'dataStatus': '状态',
            'mvnoCode': 'MVNO',
            'createTime': '创建时间',
            'updateTime': '更新时间'
        },
        currencyUnit: '货币单位',
        currencyCountry: '所属国家',
        add: '新增',
        all: '全部',
        damagesCode: '赔偿编码',
        damagesPrice: '赔偿金额',
        damagesName: '赔偿名称',
        createTime: '创建时间',
        updateTime: '更新时间',
        editSuccess: '编辑成功',
        editFailed: '编辑失败',
        delSuccess: '删除成功',
        delFailed: '删除失败',
        delConfirm: '确定要删除这条数据信息？',
        addSuccess: '新增成功',
        addFailed: '新增失败',
        mvno: 'MVNO',
        dataStatus: '状态',
        langType: '语言',
        description: '描述',
        damagesType: '赔偿类型',
        search: '查询',
        detail: '详情',
        edit: '编辑',
        del: '删除',
        status: '状态',
        status_type: {
            'Common@valid': '有效',
            'Common@invalid': '无效'
        },
        mvnoCode_type: {
            '': '全部',
            'MvnoCode@B': 'GTBU300兆',
            'MvnoCode@C': '携程专用',
            'MvnoCode@D': 'GTBU解绑'
        }
    },
    /**
     * 通知 页面国际化
     * 负责人：xiaodi
     **/
    v_department: {
        list: {
            'code': '部门编码',
            'name': '部门名称',
            'parentDeptName': '上级部门',
            'status': '状态',
            'description': '描述',
            'adminUserName': '负责人',
            'createUserName': '创建人',
            'createTime': '创建时间',
            'updateTime': '更新时间',
            'type': '类型',
            'pTypes': '套餐类型',
            'createUserAccount': '创建账号',
            'mvnoCode': 'MVNO'
        },
        add: '新增',
        search: '查询',
        detail: '详情',
        edit: '编辑',
        del: '删除',
        type: '类型',
        change: '请选择',
        all: '全部',
        package: '分配套餐',
        createTime: '创建时间',
        updateTime: '更新时间',
        editSuccess: '编辑成功',
        editFailed: '编辑失败',
        delSuccess: '删除成功',
        delFailed: '删除失败',
        addSuccess: '新增成功',
        addFailed: '新增失败',
        status: '状态',
        parentID: '上级部门',
        mvnoCode: 'MVNO',
        code: '部门编码',
        name: '部门名称',
        adminUserId: '负责人',
        createUserName: '创建人',
        createUserAccount: '创建账号',
        delConfirm: '确定删除此部门？',
        charge: '负责人信息',
        loginname: '登录名',
        username: '显示名',
        usercode: '员工编码',
        mobile: '联系手机',
        email: '邮箱地址',
        inputPack: '请输入套餐类型',
        searchPack: '套餐搜索',
        save: '保存',
        status_type: {
            'Common@valid': '有效',
            'Common@invalid': '无效'
        },
        exists_value: '该值已经存在',
        existes_user: '当前用户已存在'
    },
    /**
     * 员工管理 页面国际化
     * 负责人：xiaodi
     **/
    v_management: {
        list: {
            'usercode': '编码',
            'loginname': '登录名',
            'username': '显示名',
            'usertype': '用户类型',
            'deptName': '机构名称',
            'mobile': '联系手机',
            'status': '状态',
            'createUserName': '创建人',
            'createTime': '创建时间',
            'updateTime': '更新时间',
            'user': '角色',
            'adminType': '管理员',
            'email': '邮箱地址',
            'identifyType': '证件类型',
            'identifyNum': '证件号码',
            'createUserAccount': '创建人账号',
            'mvnoCode': 'Mvno编码'
        },
        usertype: '用户类型',
        adminType: '管理员',
        add: '新增',
        mvno: 'MVNO',
        addTpye: '创建类型',
        search: '查询',
        detail: '详情',
        edit: '编辑',
        del: '删除',
        stop: '停用',
        enabled: '启用',
        change: '请选择',
        all: '全部',
        resetPwd: '重置密码',
        distributionUser: '分配角色',
        distributionOrg: '分配机构',
        distributionPosition: '分配仓位',
        basicRole: '基础角色',
        businessRole: '业务角色',
        orglist: '机构列表',
        positionlist: '仓位列表',
        agentOrg: '代理机构',
        agentShop: '代理店铺',
        selfShoplist: '自营店铺列表',
        agentShotlist: '代理店铺列表',
        createTime: '创建时间',
        updateTime: '更新时间',
        editSuccess: '编辑成功',
        editFailed: '编辑失败',
        delSuccess: '删除成功',
        delFailed: '删除失败',
        addSuccess: '新增成功',
        addFailed: '新增失败',
        delConfirm: '确定要删除这条数据信息？',
        stopConfirm: '确定要停用该用户的使用状态？',
        upConfirm: '确定要启用该用户的使用状态？',
        upSuccess: '启用成功',
        upFailed: '启用失败',
        stopSuccess: '停用成功',
        stopFailed: '停用失败',
        resetPwdSuccess: '重置成功',
        resetPwdFailed: '重置失败',
        distributionUserSuccess: '分配角色成功',
        distributionUserFailed: '分配角色失败',
        reustConfirm: '确定要重置该用户的密码',
        status: '状态',
        usercode: '编码',
        username: '显示名',
        deptName: '机构',
        dept: '部门',
        user: '基础角色',
        createUserName: '创建人',
        createUserAccount: '创建人账号',
        mvnoCode: 'MVNO',
        functionalAuthority: '功能权限',
        userType: '员工类型',
        departmentUser: '部门员工',
        agentUser: '代理员工',
        addOrdinary: '普通员工',
        addAdmin: '管理员工',
        userList: '基础角色',
        code: '编码',
        loginname: '登录名',
        userName: '显示名',
        org: '机构',
        mobile: '手机号',
        email: '邮箱',
        identifyType: '证件类型',
        identifyNum: '证件号码',
        admin: '管理员',
        keep: '保存',
        functionaLauthority: '功能权限',
        orgAuthority: '机构权限',
        rolePermissions: '平台管理禁止分配角色',
        institutionalAuthority: '平台管理禁止分配机构',
        positionPermission: '平台管理禁止分配',
        searchOrg: '机构查询',
        checkOrg: '已分配机构',
        status_type: {
            'Common@valid': '有效',
            'Common@invalid': '无效'
        },
        status_typeAdd: {
            'Common@valid': '有效',
            'Common@invalid': '无效'
        },
        user_type: {
            'userType@deptUser': '部门员工',
            'userType@agentUser': '代理员工'
        },
        user_typeALL: {
            'userType@deptUser': '部门员工',
            'userType@agentUser': '代理员工'
        },
        user_typeadmin: {
            'userType@deptUser': '部门员工'
        },
        admin_Type: {
            'adminType@Admin': 'MVNO管理员',
            'adminType@superAdmin': '平台管理员'
        },
        fileType: {
            'FileType@identity': '身份证'
        }
    },
    /**
     * 短信模板 页面国际化
     * 负责人：wanglehui
     **/
    v_smsTemplate: {
        list: {
            'code': '模版编码',
            'name': '模版名称',
            'data': '模版内容',
            'langType': '语言',
            'orgCode': '机构编码',
            'type': '模版类型',
            'status': '状态',
            'mvnoCode': 'MVNO',
            'createTime': '创建时间',
            'updateTime': '更新时间',
            'remark': '备注'
        },
        all: '全部',
        add: '新增',
        search: '查询',
        detail: '详情',
        edit: '编辑',
        del: '删除',
        createTime: '创建时间',
        updateTime: '更新时间',
        editSuccess: '编辑成功',
        editFailed: '编辑失败',
        delConfirm: '真的要删除这条数据吗？',
        delSuccess: '删除成功',
        delFailed: '删除失败',
        addSuccess: '新增成功',
        addFailed: '新增失败',
        status: '状态',
        langType: '语言',
        mvno: 'MVNO',
        remark: '备注',
        pleaseInput: '请输入模板内容',
        orgCode: '机构编码',
        code: '模版编码',
        name: '模版名称',
        type: '模版类型',
        data: '模版内容'
    },
    /**
     * 短信日志 页面国际化
     * 负责人：wanglehui
     **/
    v_smssendLog: {
        list: {
            'receiver': '接受者',
            'senderName': '发送者',
            'content': '短信内容',
            'templateName': '短信模版',
            'serialNumber': '业务流水',
            'status': '状态',
            'mvnoCode': 'MVNO',
            'createTime': '发送时间',
            'updateTime': '重发时间'
        },
        all: '全部',
        search: '查询',
        detail: '详情',
        del: '删除',
        createTime: '发送时间',
        receiver: '接受号码',
        senderName: '发送者账号',
        mvno: 'MVNO',
        status: '状态',
        orgCode: '所属机构',
        templateName: '短信模版',
        serialNumber: '业务流水',
        sendAgain: '重发',
        isOk: '确定要重发这条短信么',
        sendSuccess: '重发成功',
        sendFailed: '重发失败',
        status_type: {
            'Common@success': '成功',
            'Common@fail': '失败 '
        }
    },

    /**
     * 基础设置 优惠码管理
     * 负责人：wanglehui  （接口待定）
     **/
    // v_privilegeCodeManageBiz:{
    //     list:{
    //
    //     },
    //     search:"查询",
    //     add:"创建",
    //     dateStatus:'数据状态',
    //     edit:'编辑'
    // },
    /**
     * 店铺管理
     * 负责人：fengcheng
     **/
    v_shopManage: {
        list: {
            'code': '店铺编码',
            'name': '店铺名称',
            'parentID': '上级部门ID',
            'parentDeptName': '上级部门',
            'status': '状态',
            'description': '描述',
            'adminUserID': '负责人ID',
            'adminUserName': '负责人',
            'createUserName': '创建人',
            'createTime': '创建时间',
            'updateTime': '更新时间',
            'type': '类型',
            'createUserAccount': '创建账号',
            'mvnoCode': 'MVNO'
        },
        all: '全部',
        add: '创建',
        save: '保存',
        search: '查询',
        detail: '详情',
        edit: '编辑',
        del: '删除',
        createTime: '创建时间',
        updateTime: '更新时间',
        editSuccess: '编辑成功',
        editFailed: '编辑失败',
        delSuccess: '删除成功',
        delFailed: '删除失败',
        addSuccess: '新增成功',
        addFailed: '新增失败',
        status: '状态',
        parentID: '部门编码',
        parentDeptName: '上级部门',
        mvno: 'MVNO',
        code: '店铺编码',
        name: '店铺名称',
        storeDescription: '店铺描述',
        description: '描述',
        createStore: '店铺创建',
        storeType: '店铺类型',
        adminUserID: '负责人ID',
        adminUserName: '负责人',
        adminUserInfo: '负责人信息',
        createUserName: '创建人',
        createUserAccount: '创建账号',
        loginname: '登录名',
        username: '显示名',
        usercode: '员工编码',
        email: '邮箱地址',
        mobile: '联系手机',
        delConfirm: '真的要删除这条数据吗？',
        duplicate: '当前用户已存在',
        duplicate_department: '当前店铺名已存在'
    },
    /**
     * 代理店铺 页面国际化
     * 负责人：ruiyang.lu
     **/
    /*v_agencyShop: {
        list: {
            'code': '店铺编码',
            'name': '店铺名称',
            'parentDeptName': '上级部门',
            'status': '状态',
            'auditStatus': '审批状态',
            'shopName': '线上商店',
            'adminUserName': '负责人',
            'ownerUserName': '业务代表',
            'agentCreateUserName': '创建人',
            'agentCreateTime': '创建时间',
            'agentUpdateTime': '更新时间',
            'operation': '操作',
            'type': '类型',
            'agentType': '代理类型',
            'license': '营业执照',
            'orgNum': '组织机构编码',
            'address': '公司地址',
            'rent': '税务登记号',
            'taxNum': '纳税识别号',
            'bank': '开户行',
            'bankAccountName': '开户名',
            'bankNum': '银行账号',
            'linkMan1': '联系人一',
            'linkPhone1': '联系人一电话',
            'linkMan2': '联系人二',
            'linkPhone2': '联系人二电话',
            'agentDescription': '备注',
            'auditUserName': '审批员',
            'auditOpinion': '审批意见',
            'auditUserAccount': '审批员账号',
            'ownerUserAccount': '业务员账号',
            'agentCreateUserAccount': '创建账号',
            'mvnoCode': 'MVNO',
        },
        add: "新增",
        search: "查询",
        detail: '详情',
        edit: '编辑',
        del: '删除',
        check: '审核',
        change: '更换业务员',
        set: '设置业务参数',
        mvno: "MVNO",
        status: "状态",
        orgCode: "所属机构",
        templateCode: "短信模版",
        sendAgain: "重发",
        isOk: "确定要重发这条短信么",
        delConfirm: " 确定要删除此代理店铺吗",
        sendSuccess: "重发成功",
        code: '店铺编码',
        agentCode: '代理编码',
        agentName: '代理名称',
        name: '店铺名称',
        parentDeptName: '上级部门',
        reviewSuccess: "审核成功",
        reviewFailed: "审核失败",
        shopName: '线上商店',
        ownerUserName: '业务代表',
        license: '营业执照',
        orgNum: '组织机构编码',
        address: '公司地址',
        rent: '税务登记号',
        taxNum: '纳税识别号',
        bank: '开户行',
        bankAccountName: '开户名',
        bankNum: '银行账号',
        linkMan1: '联系人一',
        linkPhone1: '联系人一电话',
        linkMan2: '联系人二',
        linkPhone2: '联系人二电话',
        description: '备注',
        salesman: '业务员',
        mvnoCode: 'MVNO',
        describe:"描述",
        loginName:"登录名",
        displayName:"显示名",
        employeeCode:"员工编码",
        mailAddress:"邮箱地址",
        contactPhone:"联系手机",
        review:"审核",
        auditStatus:"审核状态",
        replaceClerk:"更换业务员",
        currentClerk:'当前业务员',
        newClerk: "新业务员",
        determine: "确定",
        replaceSuccess: '更换成功',
        replaceFailed: '更换失败',
        setParameters: '设置业务参数',
        agencyAgency: '机构代理',
        parameterType: '参数类型',
        parameterValue: '参数取值',
        userMsg: '负责人信息',
        attachmentList: '附件列表',
        fileName: '文件名',
        fileDescription: '文件描述',
        fileType: '文件类型',
        file: '文件',
        setSuccess: '设置成功',
        setFailed: '设置失败',
        delSuccess: "删除成功",
        delFailed: "删除失败",
        addSuccess: "新增成功",
        addFailed: "新增失败",
        delFileSuccess:'删除文件记录成功',
        delFileFailed:'删除文件记录失败',
        editSuccess: "编辑成功",
        editFailed: "编辑失败",
        submitFileSuccess:'新增文件记录成功',
        submitFileFailed:'新增文件记录失败',
        fileAddress:'文件地址',
        auditOpinion: "审批原因",
        paramType: "参数类型",
        paramValue: "参数取值",
        chargeName: "负责人",
        type: '类型',
        agentType: '代理类型',
        founder: '创建人',
        createUserAccount: '创建账号',
        createTime: '创建时间',
        updateTime: '更新时间',
        status_type: {
            "0": "有效",
            "1": "无效",
        },
        audit_type: {
            "Common@valid": "通过",
            "Common@invalid": "驳回",
        },
        templateCode_type: {
            "SmsTepmlate@customer": "客服模板",
            "SmsTepmlate@business": "业务模板",
        }
    },*/
    /**
     * 系统管理 机构代理
     * 负责人：fengcheng yankang
     **/
    v_agencyAgent: {
        list: {
            code: '代理编码',
            name: '代理名称',
            parentAgentName: '上级部门',
            status: '状态',
            reviewStatus: '审批状态',
            adminUserName: '负责人',
            representative: '业务代表',
            createUserName: '创建人',
            createTime: '创建时间',
            updateTime: '更新时间',
            //type:'代理类型',
            pNames: '套餐类型',
            remitStatus: '汇款审核状态',
            description: '备注',
            remiterName: '汇款审批人',
            reviewerName: '审批人',
            representativeId: '业务员账号',
            createUserAccount: '创建人账号',
            mvnoCode: 'MVNO'
        },
        all: '全部',
        pleaseSelectMinOne: '请选择至少一条数据',
        agentName: '机构名称',
        agencyAgent: '机构代理',
        agentId: '机构编码',
        agentCode: '机构编码',
        representative: '业务代表',
        parentDeptName: '上级部门',
        auditStatus: '审核状态',
        remittanceStatus: '汇款审核状态',
        remitStatus: '汇款审核状态',
        status: '状态',
        mvnoCode: 'MVNO',
        search: '查询',
        export: '导出',
        changeSalesman: '更换业务员',
        add: '创建',
        detail: '详情',
        edit: '编辑',
        del: '删除',
        delConfirm: '确认删除?',
        delSuccess: '删除成功',
        delFailed: '删除失败',
        audit: '审核',
        setServiceParams: '设置业务参数',
        setOTA: '设置OTA参数',
        assignPackage: '分配套餐',
        basicInfo: '基础信息',
        contractInfo: '合同信息',
        remittanceInfo: '汇款信息',
        billInfo: '开票信息',
        businessParam: '业务参数',
        packageType: '套餐类型',

        agentName1: '机构名称',
        businessLicense: '营业执照',
        legalPersonName: '法人姓名',
        legalPersonPhone: '法人电话',
        dockingPeopleName: '对接人姓名',
        dockingPeoplePhone: '对接人电话',
        dockingPeopleEmail: '对接人邮箱',
        companyAddress: '公司地址',
        remark: '备注',
        responsiblePersonInfo: '负责人信息',
        loginname: '登录名',
        username: '显示名',
        usercode: '员工编码',
        email: '邮箱地址',
        phoneNum: '联系电话',
        attachmentList: '附件列表',
        filename: '文件名',
        filedescription: '文件描述',
        filetype: '文件类型',
        file: '文件',
        updata: '上传',
        cancel: '取消',
        close: '关闭',

        hireRebate: '租赁合同',
        leaseContract: '租赁合同',
        monthlyContract: '包月合同',
        addHireRebate: '创建租赁合同',
        mainContract: '主合同信息',
        rebateInfo: '返点信息',
        start: '合同起始日',
        end: '合同结束日',
        addOtherContract: '添加附加合同',
        editOtherContract: '编辑附加合同',
        addMonthly: '创建包月合同',
        monthly_price: '包月单价',
        monthlyDevices: '包月台数',
        depositAmount: '押金金额',
        depositTotalAmount: '押金总额',
        area: '使用地区',
        settlement: '结算方式',
        advance: '预收',
        otherContract: '附加合同',
        stockContract: '存货合同',
        expressDepositContract: '快递免押金合同',
        num0: '台数',
        num1: '台',
        bottomPrice: '保底单价',
        minConsumption: '保底消费',
        stockArea: '存货地区',
        notAdded: '暂不添加',
        leaseContractAttached: '租赁合同附加合同',

        addRemittance: '创建汇款信息',
        add1: '新增',
        index: '序号',
        remittanceName: '汇款人',
        remittanceBank: '汇款行',
        remittanceNumber: '汇款账号',
        attachment: '附件',
        enterRemittanceName: '请输入汇款人姓名',
        enterRemittanceBank: '请输入汇款行',
        enterRemittanceNumber: '请输入汇款账号',

        addInvoice: '创建开票信息',
        invoiceTitle: '发票抬头',
        telephoneNumber: '电话号码',
        phone: '电话号码',
        taxNum: '纳税识别号or统一社会信用代码',
        bankName: '开户银行',
        bankAccount: '开户行号',
        addressRegistered: '企业注册地址',
        addressMail: '邮寄地址',

        reviewStatus: '审核状态',
        reviewTime: '审核时间',
        reviewPerson: '审核人',
        reviewOpinion: '审核意见',
        paramType: '参数类型',
        createPerson: '创建人',
        createId: '创建账号',
        createTime: '创建时间',
        updateTime: '更新时间',

        editContract: '编辑合同信息',
        editRemittance: '编辑汇款信息',
        editInvoice: '编辑开票信息',
        nowSalesman: '当前业务员',
        newSalesman: '新业务员',

        prev: '上一步',
        next: '下一步',
        save: '保存',
        seeDetails: '查看详情',

        isRebate: '有无返点',
        haveRebate: '有返点',
        noRebate: '无返点',

        operateSuccessed: '操作成功',
        operateFailed: '操作失败',

        agentsName: '代理名称',
        paramValue: '参数值',
        submit: '提交',
        confirm: '确定',

        otaAccountID: 'otaAccountID',
        otaSignKey: 'otaSignKey',
        otaAPIUrl: 'otaAPIUrl',
        apiAccountCode: 'apiAccountCode',
        combineOrderCodePre: 'combineOrderCodePre',

        pleaseInputPackageType: '请输入套餐类型',
        queryPackage: '套餐搜索',

        refundPercent: '退款比例',
        contactType: '合同类型',
        percent: '%',
        enterDetail: '请输入详细地址',
        editHireRebate: '编辑租赁合同',
        editMonthly: '编辑包月合同',

        pleaseInputRefund: '请输入退款比例',
        setRefundFailed: '设置退款比例失败',
        refundMin: '退款比例不能为负',
        refundMax: '退款比例不能超过100',
        refundNoempty: '退款比例不能为空',

        auditPassNoDel: '审核通过的机构不能删除',
        aTotalOf: '共',
        use_area:　'使用地区',
        head_man: '负责人',

        data: '条记录',
        pagesOfData: '页数据',
        pagination: '页码',
        go: '跳转',
        stripPage: '条/页',

        msgBasic01: '请填写机构名称',
        msgBasic02: '请填写营业执照',
        msgBasic03: '请填写法人姓名',
        msgBasic04: '请填写对接人姓名',
        msgBasic05: '请填写对接人电话',
        msgBasic06: '请填写对接人邮箱',
        msgBasic07: '请填写公司地址',
        msgBasic08: '请填写附件文件名',
        msgBasic09: '附件营业执照至少上传一份',
        msgContract01: '请填写租赁合同起始日',
        msgContract02: '请填写租赁合同附件文件名',
        msgContract03: '租赁合同附件至少上传一份',
        msgContract04: '请填写存货合同台数',
        msgContract05: '请填写存货合同保底单价',
        msgContract06: '请填写存货合同存货地区',
        msgContract07: '请填写存货合同附件文件名',
        msgContract08: '存货合同附件至少上传一份',
        msgContract09: '请填写快递免运费合同附件文件名',
        msgContract10: '快递免运费附件至少上传一份',
        msgContract11: '请填写包月合同台数',
        msgContract12: '请填写包月合同单价',
        msgContract13: '请填写包月合同地区',
        msgContract14: '请填写包月合同起始日',
        msgContract15: '请填写包月合同附件文件名',
        msgContract16: '包月合同附件至少上传一份',
        msgContract17: '存货合同台数或保底单价不能是负数',
        msgContract18: '包月合同包月单价或包月台数不能是负数',
        msgRemittance01: '请填写汇款人',
        msgRemittance02: '请填写汇款行',
        msgRemittance03: '请填写汇款账号',
        msgRemittance04: '请上传附件',
        msgInvoice01: '请填写发票抬头',
        msgInvoice02: '请填写电话号码',
        msgInvoice03: '请填写纳税识别号or统一社会信用代码',
        msgInvoice04: '请填写开户银行',
        msgInvoice05: '请填写开户行号',
        msgInvoice06: '请填写企业注册地址',
        msgInvoice07: '请填写邮寄地址',

        sureBatchInvalid: '确定要批量无效吗?',
        batchInvalid: '批量无效',

        delRemittanceList: '确定要删除选择数据吗？',
        max50: '新增上限设置为50个',
        noDelAll: '汇款信息至少上传一条信息！',
        saveSuccessfully: '保存成功',
        agentNameRepeat : "机构名称已存在, 请重新填写"
    },
    /**
     * 角色管理 页面国际化
     * 负责人：wanglehui
     **/
    v_roleManager: {
        list: {
            'code': '编码',
            'name': '名称',
            'deptName': '机构',
            'type': '类型',
            'description': '描述',
            'status': '状态',
            'createUserName': '创建人',
            'createTime': '创建时间',
            'updateTime': '更新时间',
            'roleRelationList': '基础角色',
            'createUserAccount': '创建账号',
            'mvnoCode': 'MVNO'
        },
        all: '全部',
        code: '编码',
        name: '名称',
        deptName: '机构',
        type: '类型',
        description: '描述',
        status: '状态',
        createUserName: '创建人',
        createTime: '创建时间',
        updateTime: '更新时间',
        roleRelationList: '基础角色',
        createUserAccount: '创建账号',
        mvnoCode: 'MVNO',
        remark: '描述',
        add: '创建',
        addBasic: '基础角色',
        addBusiness: '业务角色',
        search: '查询',
        detail: '详情',
        edit: '编辑',
        del: '删除',
        editSuccess: '编辑成功',
        editFailed: '编辑失败',
        delSuccess: '删除成功',
        delFailed: '删除失败',
        addSuccess: '新增成功',
        addFailed: '新增失败',
        delConfirm: '确定要删除此角色吗?',
        save: '保存',
        functionLimits: '功能权限',
        dataLimits: '数据权限',
        interfaceLimits: '接口权限',
        saveReturn: '保存并返回',
        savaSuccess: '权限修改成功',
        savaFailed: '权限修改失败',
        singleSave: '单条保存',
        singleSaveTipT: '保存成功，继续其他权限分配',
        singleSaveTipF: '保存失败，请稍后再试',
        saveFaild: '保存失败，您没有勾选任何选项',
        noBaseRole: '基础角色不能为空',
        status_type: {
            'Common@valid': '有效',
            'Common@invalid': '无效'
        },
        roleType_type: {
            '': '全部',
            'RoleType@Basic': '基础角色',
            'RoleType@Business': '业务角色'
        }
    },
    /**
     * 库存管理 库存操作 主语言包
     * 负责人：yankang
     * list 为主页面 主table list
     **/
    v_inventoryOperation: {
        list: {
            'serialNumber': '单号',
            'operateType': '操作类型',
            'deviceNumber': '设备数量',
            'alloctOutWarehouseName': '调出仓',
            'alloctInWarehouseName': '调入仓',
            'operatorName': '操作人员',
            'operateDate': '操作时间',
            'auditStatus': '审核状态',
            'auditUserName': '审核人',
            'auditDate': '审核时间',
            'mvnoCode': 'MVNO',
            'auditRemark': '审核说明',
            'remark': '备注'
        },
        index: '序号',
        all: '全部',
        mvno: 'MVNO',
        operateType: '操作类型',
        auditStatus: '审核状态',
        serialNumber: '单号',
        operateDate: '操作时间',
        imei: 'IMEI',
        pwd: 'PWD',
        ssid: 'SSID',
        deviceType: '设备类型',
        versionNo: '软件版本',
        search: '查询',
        detail: '详情',
        detailInfo: '详情信息',
        audit: '审核',
        del: '删除',
        auditSuccess: '审核成功',
        auditFailed: '审核失败',
        delSuccess: '删除成功',
        delFailed: '删除失败',
        delConfirm: '确定要删除吗?',
        save: '保存',
        inWarehouse: '入库',
        outWarehouse: '退库',
        scanCodeOutW: '扫码退库',
        importOutW: '导入退库',
        allot: '调拨',
        borrow: '借用',
        export: '导出',
        import: '导入',
        downloadTemplate: '下载模板',
        nextStep: '下一步',
        confirm: '确定',
        addDeviceImei: '扫码添加设备IMEI',
        outWarehouseRemark: '退库说明',
        chooseAllot: '选择调拨仓',
        operateSuccess: '操作成功',
        operateFailed: '操作失败',
        noOperate: '该设备不能进行此操作',
        allotFrom0: '从',
        allotFrom1: '调入',
        borrowInfo: '借用信息',
        borrowPackage: '借用套餐',
        borrowInUserName: '借用人',
        borrowInTelephone: '手机号码',
        borrowStartDate: '开通时间',
        borrowEndDate: '关闭时间',
        maxLength: '导入单次最多10000条数据',
        operation: '操作',
        scanCodeOut: '扫码退库',
        exportOut: '导入退库',
        scanCodeAllot: '扫码调拨',
        exportAllot: '导入调拨',
        scanCodeBorrow: '扫码借用',
        exportBorrow: '导入借用',
        outFailed: '该设备不能进行退库操作',
        allowFailed: '该设备不能进行调拨操作',
        borrowFailed: '该设备不能进行借用操作',
        pass: '通过',
        reject: '驳回',
        auditReason: '审核理由',
        remark: '请输入备注内容'
    },
    /**
     * 库存管理 库存操作 详情弹窗
     * 负责人：yankang
     * list 为详情弹窗table list
     **/
    v_inventoryOperationDetail: {
        list: {
            'imei': 'IMEI',
            'warehouseName': '仓位名称',
            'operateDate': '操作时间',
            'operatorName': '操作人员',
            'deviceType': '设备类型',
            'deviceStatus': '设备状态'
        }
    },
    /**
     * 库存管理 库存统计 仓位统计
     * 负责人：wanglehui
     **/
    v_statisticsWarehouse: {
        list: {
            name: '仓位名称',
            type: '仓位类型',
            classes: '仓位类别',
            totalDevice: '设备总数',
            stockNumber: '在库',
            rentNumber: '租用',
            onTheWayNumber: '在途',
            borrowNumber: '借用',
            dataStatus: '仓位状态',  //详情用
            imei: 'IMEI',
            ssid: 'SSID',
            pwd: 'PWD',
            deviceType: '设备类型',
            versionNo: '软件版本',
            deviceStatus: '设备状态'
        },
        mvnoCode: 'MVNO',
        name: '仓位',
        dataStatus: '仓位状态',
        type: '仓位类型',
        classes: '仓位类型',
        search: '查询',
        export: '导出',
        all: '全部',
        close: '关闭',
        wareStatisticsTitle: '仓位统计详情',
        imei: 'IMEI',
        ssid: 'SSID',
        pwd: 'PWD',
        deviceType: '设备类型',
        versionNo: '软件版本',
        deviceStatus: '设备状态'
    },
    /**
     * 库存管理 库存统计 设备统计
     * 负责人：wanglehui
     **/
    v_statisticsDevices: {
        list: {
            name: '仓位名称',
            type: '仓位类型',
            imei: 'IMEI',
            ssid: 'SSID',
            pwd: 'PWD',
            deviceType: '设备类型',
            versionNo: '软件版本',
            deviceStatus: '设备状态',
            dataStatus: '仓位状态',
            mvnoCode: 'MVNO',
            index: '序号',
            createTime: '日期',
            visitCountry: '国家',
            flowSize: '流量'
        },
        all: '全部',
        mvnoCode: 'MVNO',
        name: '仓位名称',
        imei: 'IMEI',
        type: '仓位类型',
        deviceStatus: '设备状态',
        dataStatus: '仓位状态',
        search: '查询',
        export: '导出',
        test: '测试',
        queryTraffic: '流量查询',
        trafficRecord: '流量使用记录',
        beginDate: '开始时间',
        endDate: '结束时间',
        inputImei: '请输入imei号',
        index: '序号',
        date: '日期',
        country: '国家',
        traffic: '流量',
        noDataTip: '哇呜...,没设备了',
        flowNoDataTip: '当前无流量使用记录'
    },
    /**
     * 仓位管理 页面国际化
     * 负责人：xiaodi
     **/
    v_wareHouse: {
        list: {
            name: '仓位名称',
            mvnoCode: 'MVNO',
            number: '仓位号',
            classes: '仓位类别',
            type: '仓位类型',
            createUserName: '创建人',
            createTime: '创建时间',
            updateTime: '更新时间',
            dataStatus: '是否有效',
            createUserAccount: '创建账号',
            // rangeUse: "是否自用",
            parentName: '上级仓位',
            isSendMsgCode: '是否发送验证码',
            taobaoObtainProvince: '淘宝取件省份',
            taobaoObtainCity: '淘宝取件城市',
            taobaoObtainPosition: '淘宝取件区域'
        },
        add: '创建',
        addJoin: '加盟仓创建',
        addUser: '自营仓创建',
        mvnoCode: 'MVNO',
        save: '保存',
        search: '查询',
        detail: '详情',
        edit: '编辑',
        settaobao: '设置淘宝地址',
        taobaoObtainProvince: '淘宝取件省份',
        taobaoObtainCity: '淘宝取件城市',
        taobaoObtainPosition: '淘宝取件区域',
        name: '仓位名称',
        classes: '仓位类别',
        orgname: '机构名称',
        isStatus: '是否有效',
        all: '全部',
        change: '请选择',
        type: '仓位类型',
        number: '仓位编码',
        rangeUse: '是否自用',
        SendMsgCode: '是否发送验证码',
        isparentWareHouse: '存在上级仓位',
        parentName: '上级仓位',
        dataStatus: '数据状态',
        createUserName: '创建人',
        createUserAccount: '创建账号',
        createTime: '创建时间',
        updateTime: '上次更新时间',
        editSuccess: '编辑成功',
        editFailed: '编辑失败',
        addSuccess: '新增成功',
        addFailed: '新增失败',
        package: '分配套餐',
        inputPack: '请输入套餐类型',
        searchPack: '套餐搜索',
        wareHouseKeep: '当前仓位已存在',
        wareHouseClasses: {
            'WareHouseClasses@Point': '网点',
            'WareHouseClasses@Area': '区域仓',
            'WareHouseClasses@Cabinet': '机柜'
        },
        searchwareHouseClasses: {
            'WareHouseClasses@Point': '网点',
            'WareHouseClasses@Area': '区域仓',
            'WareHouseClasses@Cabinet': '机柜',
            'WareHouseClasses@wareHouse': '总仓'
        },
        wareHouseType: {
            'WareHouseType@selfSupport': '自营',
            'WareHouseType@join': '加盟'
        },
        common: {
            'Common@valid': '有效',
            'Common@invalid': '无效'
        },
        dataStatusType: {
            'Common@valid': '有效',
            'Common@invalid': '无效'
        },
        IsSendMsgCode: {
            'IsSendMsgCode@yes': '是',
            'IsSendMsgCode@no': '否'
        },
        parentWareHouse: {
            'parentWareHouse@yes': '存在',
            'parentWareHouse@no': '不存在'
        },
        rangeUseType: {
            'rangeUse@use': '是',
            'rangeUse@share': '否'
        }
    },
        /**
         * 网点管理 页面国际化
         * 负责人：ruiyang.lu
         **/
    v_networkDot: {
        list: {
            name: '网点名称',
            mvnoCode: 'MVNO',
            cityName: '所在城市',
            busLine: '公交站点',
            address: '地址',
            businessStatus: '服务范围',
            createUserName: '创建人',
            createTime: '创建时间',
            updateTime: '更新时间',
            officeDate: '营业时间',
            createUserAccout: '创建账号',
            phone: '联系电话',
            status: '状态',
            photoPath: '网点图片',
            netContent: '备注'
        },
        all: '全部',
        add: '创建',
        addJoin: '加盟仓创建',
        addUser: '自营仓创建',
        mvnoCode: 'MVNO',
        save: '保存',
        search: '查询',
        detail: '详情',
        edit: '编辑',
        del: '删除',
        name: '网点名称',
        cityName: '所在城市',
        type: '仓位类型',
        status: '状态',
        businessStatus: '服务范围',
        officeDate: '营业时间',
        phone: '联系电话',
        busLine: '公交站点',
        address: '地址',
        lastPhoto: '网点图片',
        netContent: '备注',
        delSuccess: '删除成功',
        delFailed: '删除失败',
        delConfirm: '确定要删除吗?',
        editSuccess: '编辑成功',
        editFailed: '编辑失败',
        addSuccess: '新增成功',
        addFailed: '新增失败',
        invalid: '无效',
        valid: '有效',
        expressOnly: '快递办理',
        getAndReturn: '可取还',
        getOnly: '仅自取',
        returnOnly: '仅返还',
        sceneOnly: '支持客户现场办理业务'
    },
    v_borrowEquipmentList: {
        list: {
            imei: 'IMEI',
            ssid: 'SSID',
            pwd: 'PWD',
            borrowWarehouseName: '借出仓',
            lendUserName: '借出人',
            contactPhoneNo: '联系方式',
            startTimeBorrow: '借出开始时间',
            endTimeBorrow: '借出结束时间',
            returnStatus: '归还状态',
            weatherOpen: '开通状态',
            effectiveTime: '开通时间',
            expiryTime: '关闭时间',
            returnWarehouseName: '归还仓',
            returnUserName: '归还人',
            returnTime: '归还时间',
            borrowName: '借用人'
        },
        imei: 'IMEI',
        borrowName: '借用人',
        lendUserName: '借出人',
        borrowWarehouseName: '借出仓',
        returnStatus: '归还状态',
        ssid: 'SSID',
        pwd: 'PWD',
        contactPhoneNo: '联系方式',
        startTimeBorrow: '借出开始时间',
        endTimeBorrow: '借出结束时间',
        weatherOpen: '开通状态',
        effectiveTime: '开通时间',
        expiryTime: '关闭时间',
        returnWarehouseName: '归还仓',
        returnUserName: '归还人',
        returnTime: '归还时间',
        search: '查询',
        export: '导出',
        detail: '详情',
        edit: '编辑',
        back: '归还',
        sure: '确定',
        selectBack: '选择归还仓',
        editSuccess: '编辑成功',
        editFailed: '编辑失败',
        returnSuccess: '归还成功',
        returnFailed: '归还失败',
        save: '保存',
        all: '全部'
    },
    /**
     * 订单列表
     * 负责人：wanglehui
     **/
    v_countrySelect: {
        title: '选择国家',
        confirm: '确认'
    },
    v_revert: {
        returnInfo: '归还信息',
        index: '序号',
        serialNumber: '订单编号',
        imei: 'IMEI',
        return: '归还',
        comfirm: '确定',
        inputExprees: '扫描或输入快递单号',
        inputImei: '扫描或手动输入imei',
        totalAmount: '合计金额',
        returnExpressNumber: '寄回快递单号',
        cancelBreachFee: '应收违约金',
        receivableOtherFee: '其他金额',
        receivableDamageFee: '应收赔偿金',
        receivableLateFee: '应收滞纳金',
        delayDay: '延期天数',
        returnWarehouse: '归还仓位',
        compensateForReason: '赔偿原因',
        returnExpressCode: '请输入正确格式快递单号',
        repeatInput: 'imei重复，请重新输入',
        importNumber: '请输入15位整数的imei',
        noSearch: '未查询到订单信息',
        noImei: '是否前往旧系统查询？',
        point: '提示',
        checkReturnTip: '该订单并未到回国时间，确定要归还吗？',
        friendshipTips: '友情提示'
    },
    /**
     * 订单列表
     * 负责人：wanglehui
     **/
    v_orderList: {
        list: {
            serialNumber: '订单编号',
            imei: 'IMEI',
            orderProgress: '订单进度',
            departmentType: '订单类型',
            orderLabel: '订单标签',
            orderLabelList: '订单标签',
            departmentName: '部门',
            packageType: '套餐类型',

            packageName: '套餐名称',
            customerName: '客户姓名',
            customerPhone: '客户电话',
            createUserName: '创建人',
            creatDate: '创建日期',

            deliverDate: '发货日期',
            returnDate: '归还日期',
            settlementDate: '结算日期',
            goOutDate: '出国日期',
            getBackDate: '回国日期',

            cancelDate: '取消日期',
            refundDate: '退款日期',
            expressProbablyDate: '预计发货日期',
            salesmanName: '业务员姓名',
            userDepartment: '业务员部门',

            takeType: '取货方式',
            imeiPositionName: '设备仓位',
            otaCombineOrderId: '合并订单号',
            otaOrderId: 'OTA订单号',
            subscribeStatus: '订购关系',
            source: '订购来源',
            orderStatus: '订单状态',
            expectTakePointName: '预计取货网点',

            goAbroadDate: '出国日期',
            backHomeDate: '回国日期',
            index: '序号',
            createTime: '日期',
            visitCountry: '国家',
            flowSize: '流量'

        },
        /* m_orderList start */
        batchReceive: '批量收款',
        batchProTip: '请选择待收款的订单',
        /* m_orderList end */
        /* orderCreat_Start wanglehui faben_wanglehui@ukelink.com*/
        agentOrderCreation: '代理商订单创建',
        websiteOrderCreation: '网点订单创建',
        retailersOrderCreation: '电商订单创建',
        closeOrderCreat: '关闭创建',
        returnOrderList: '返回订单列表',
        dotCreation: '网点创建',
        agentCreation: '代理创建',
        retailersCreation: '电商创建',
        orderCreation: '订单创建',
        createSuccess: '创建成功',
        createFailed: '创建失败',
        trafficQuery: '流量查询',
        day: '天',
        yuanPeeDay: '元/天',
        date: '日期',
        country: '国家',
        traffic: '使用流量',
        trafficRecord: '流量使用记录',
        delivered: '已发货',
        imeiNotEmpty: 'imei不能为空...',
        returnDays: '应退天数',
        excute: '执行',
        edit: '编辑',
        detail: '详情',
        cancel: '取消',
        refund: '退款',
        relet: '续租',
        all: '全部',
        pleaseSelect: '请选择',
        selectDepId: '选择机构',
        selectCountry: '请选择国家',
        selectComboType: '请选择套餐',
        selectGoputDate: '请先选择出行日期',
        expressAddress: '收货地址',
        detailAddress: '详细地址',
        expressPayMode: '付款方式',
        deliveryCosts: '快递费用',
        predictSendTime: '预计发货时间',
        inAdvanceSendTime: '提前发货时间',
        inAdvenceSendCosts: '提前发货费用',
        ifInAdvanceSend: '是否提前发货',
        sendMessage: '是否发送短信',
        confirm: '确定',
        goOut: '出行吗？',
        totalRent: '合计费用:',
        PlaceholderName: '限制25个字符',
        customerEmail: '客户邮箱',
        PlaCustomerEmail: '请注意您的邮箱格式',
        isSendEmail: '是否发送邮件',
        wareHouseId: '预计发货仓',
        /* tips 提示语*/
        tipSelectTakeType: '请先选择取货方式',
        tipSelectTakeId: '请选择取货仓位',
        tipNoBalance: '企业账户余额不足，请充值',
        /* orderCreat_end*/

        /* orderList_start wanglehui*/
        departmentType: '部门',
        tripTime: '出行时间',
        virtualDeliver: '虚拟发货',
        virtualReturn: '虚拟归还',
        wareHouseName: '设备仓位',
        salesmanName: '业务员姓名',
        userDepartment: '业务员部门',
        subscribeStatus: '订购状态',
        packageType: '套餐类型',
        packageName: '套餐名称',
        otaCombineOrderId: '合并订单号',
        otaOrderId: 'OTA订单号',
        dateType: '时间查询',
        /* orderList_end wanglehui*/

        /* orderEdit wanglehui*/
        agentOrderEdit: '代理商订单编辑',
        dotOrderEdit: '网点订单编辑',
        RetailerOrderEdit: '电商订单编辑',
        save: '保存',
        pleaseSelect: '请选择',
        editSuccess: '编辑成功',
        editFailed: '编辑失败',
        notEdit_settlement: '结算、待结算订单不可编辑',
        notEdit_abnormal: '非正常订单不可编辑',
        reEditAdvenceSend: '请重新配置提前发货参数',
        pleaseSelePackType: '请选择套餐类型',
        pleaseSelePackName: '请选择套餐名字',
        pleaseSelectAddress: '请选择收货地址',
        pleSeleAdvanceDate: '请选择提前发货日期',
        /* orderEdit end wanglehui */

        /*order_advanceSearch 高级查询start*/
        expectTakePointName: '预计取货网点',
        transactionId: '押金支付流水号',
        /*order_advanceSearch 高级查询end*/

        agent: '代 理 商 ',
        advanceDeliveryFee: '提前发货费用',
        batchExecute: '批量执行',
        customerPhone: '客户电话',
        cancelOrder: '取消订单申请',
        refundOrderApply: '退款申请',
        refundReason: '退款原因',
        quadraticRefund: '是否二次退款',
        cancelReason: '取消原因',
        cancelExpress: '快递发出取消',
        compensateMoney: '赔偿金额',
        compensateReason: '赔偿原因',
        compensationAmount: '实收赔偿金',
        compensateMoneyNum: '50.00',
        comfirm: '确定',
        delivery: '发货',
        deliveryInfo: '发货信息',
        deliveryDate: '发货日期',
        downloadTemplate: '下载模板',
        deposit: '实收押金',
        depositAmount: '押金金额',
        depositReceiveUserName: '押金收款人',
        depositPayTypeName: '押金收款方式',
        delayAmount: '实收滞纳金',
        department: '部门',
        export: '导出',
        financeExport: '财务导出',
        endTime: '结束时间',
        is: '是',
        imei: 'IMEI',
        import: '导入',
        index: '序号',
        rent: '租金金额',
        isRent: '租金是否收取',
        inputImei: '扫描或手动输入imei',
        not: '否',
        ordered: '订购',
        orderProgress: '订单进度',
        orderType: '订单类型',
        orderStatus: '订单状态',
        orderInfo: '订单信息',
        otherAmount: '其他金额',
        pleaseInputCancelReason: '请输入取消原因',
        query: '查询',
        receipt: '收款',
        receiptAmount: '收款金额',
        receivableLateFee: '应收滞纳金',
        receivableDamageFee: '应收赔偿金(可点击)',
        receiptInfo: '收款信息',
        return: '归还',
        returnInfo: '归还信息',
        returnExpressNumber: '寄回快递单号',
        returnWarehouse: '归还仓位',
        refundAmount: '退款金额',
        startTime: '开始时间',
        search: '搜索',
        serialNumber: '订单编号',
        settlement: '结算',
        settlementInfo: '结算信息',
        swapDevice: '设备对换',
        takeType: '取货方式',
        isNeedPay: '是否需要收款',
        takeInfo: '取货信息',
        totalAmount: '合计金额',
        shop: '店铺',
        // 续租功能语言包 add by zhanhuancheng@ukelink.com
        to: '至',
        days: '天',
        reletInfo: '续租信息',
        reletDate: '续租日期',
        reletOtaOrderId: '续租OTA订单号',
        reletDays: '续租天数',
        reletAmount: '续租租金',
        OTAOrderNumber: 'OTA订单号',
        // END 续租功能语言包

        // 代理商支付 add by zhanhuancheng@ukelink.com
        agentPay: '代理商支付',
        agentBatchPay: '代理商批量支付',
        receivableDeposit: '应收押金金额',
        receiptDeposit: '实收押金金额',
        sumReceiptDeposit: '合计实收押金金额',
        payAmount: '支付金额',
        scanQRCodeToPay: '(扫一扫完成支付)',
        SFExpress: '顺丰打印',
        readyPrint: '准备打印',
        // END 代理商支付

        rentPaySerailNumber: '租金支付流水号',
        ifNeedRecipt: '是否需要收款',
        salesman: '业 务 员 ',
        travelDate: '出行日期',
        selectCountry: '选择国家',
        comboType: '套餐类型',
        comboName: '套餐名称',
        orderNum: '订单数量',
        whetherSend: '是否发送短信',
        cashPledgePayWay: '押金支付方式',
        paymentMethod: '支付方式(选择付款方式)',
        remark: '备注',
        remarkPlaceholder: '请输入备注内容...（选填）',
        takeWebsite: '取货网点',
        takeCabinet: '取货机柜',
        takeAddress: '取货地址',
        bussinessAccountPay: '企业账户支付',
        submit: '提交',
        immediatelyPayment: '立即支付',
        immediatelyReceipt: '立即收款',
        authCode: '授权码',
        uploadNote: '上传票据',
        chargeInfo: '扣款信息',
        chargeMoney: '扣款金额',
        compensationSincere: '赔偿款',
        overdueFine: '滞纳金',
        overdueFineNum: '滞纳金额',
        dalayDays: '延期天数',
        otherExpenses: '其他费用',
        applyRefundPayment: '申请返款扣款',
        returnMoney: '返还金额',
        applyReturnMoney: '申请返还扣款',
        compensateCause: '赔偿原因',
        compensationMoney: '赔偿金额',
	    compensateReasonList: ['设备丢失 ', '设备包丢失 ', '数据线丢失 '],
        applySccusse: '申请成功',
        applyFailed: '申请失败',
        logoRmb: '元',
        payTimeout: '支付超时',
        swapDeviceInfo: {
            index: '序号',
            IMEI: 'IMEI',
            newIMEI: '新IMEI',
            orderIndex: '订单编号',
            clientName: '客户姓名',
            clientNumber: '客户电话'
        },
        imeiCheck: 'IMEI号必须是15位整数',
        importNewImei: '请输入有效的新IMEI',
        importImei: '请输入有效的IMEI',
        firstImeiNoEmpty: '请先输入旧IMEI',
        importNumber: '请输入15位整数的IMEI',
        saveSuccessfully: '保存成功',
        notFoundOrderInfo: '未找到订单信息',
        delayDaysCheck: '延期天数需为大于或等于0的整数',
        otherSumCheck: '其他金额需为大于或等于0的整数',
        returnSumCheck: '申请返款扣款大于扣款金额，请重新选择',
        returnSumIsZeroCheck: '返还金额为0，请慎重选择',
        mostFive: '最多上传5张图片',
        tipsInputDate: '请先选择出行时间',
        tipsInputCombo: '请先选择套餐类型',
        expressCode: '快递单号',
        inputExprees: '扫描或输入快递单号',
        delayDay: '延期天数',
        receivableOtherFee: '其他金额',
        receivableOtherReason: '其他金额原因',
        compensateForReason: '赔偿原因',
        refundOrderApplySuccess: '退款申请成功',
        cancelOrderSuccess: '取消订单申请成功 ',
        prompt: '提示',
        compensateForPromptOne: '申请取消该订单将产生',
        compensateForPromptTwo: '元，确定要取消该订单吗？',
        sameOrderList: '请选择订单进度一致的订单开始操作',
        unsubscribeOrderApply: '退订订单申请',
        unsubscribeReason: '退订原因',
        unsubscribeSuccess: '退订订单申请成功',
        isOrderProgress: '只有完成发货订单才能退款',
        isSettlemented: '已经结算不能退款',
        deliverSuccess: '发货成功',
        sendBack: '异地归还',
        changePayType: '请选择支付方式',
        preview: '预览',
        departmentName: '部门',
        customerName: '客户名称',
        goOutDate: '出国日期',
        getBackDate: '回国日期',
        branchName: '网点名称',
        isSendMessage: '是否发送短信',
        selectTemplateType: '选择模板类型',
        download: '下载',
        orderTemplate: '订单模板',
        cancelBreachFee: '应收违约金',
        cancelBreachAmount: '取消违约金',
        checkReturnTip: '该订单并未到回国时间，确定要归还吗？',
        previewPoint: '请上传有效文件',
        verifyDateType: '请输入正确格式的日期',
        verifyDate: '请检查日期是否合理',
        importSuccess: '导入成功',
        uploadSuccess: '上传成功',
        orderRelationshipExport: '订购关系导出',
        resetOrderCaptcha: '重置订单验证码',
        noDeliver: '请选中至少一条‘待归还’信息选项',
        freeSingle: '免单',
        isSelect: '请选择信息选项',
        repeatInput: 'imei重复，请重新输入',
        operateSuccess: '操作成功',
        friendshipTips: '友情提示',
        selectMultipleMessages: '请选择多条信息选项',
        operationTimedOut: '操作超时，请重新操作',
        noData: '暂无数据',
        nodataTip: '真遗憾你当前没有订单',
        flowNoDataTip: '当前无流量使用记录',
        changeCondition: '请先输入查询条件（最少输入一个），才能显示列表信息',
        exportTipFailed: '请输入查询条件过滤后点击导出',
        exportTipSuccess: '已添加—>系統管理—>通知管理—>下载管理',
        accountPayTip: '*若未显示企业账户支付，可能您选择的订单列表存在不支持企业账户支付订单',
        orderTemplate_type: {
            'OrderTemplate@deptPoint': '自营电商网点取货订单模板',
            'OrderTemplate@proxyPoint': '代理商网点取货订单模板',
            'OrderTemplate@pointPoint': '自营网点网点取货订单模板'
        },
        isUseFreeDepositOrAccountPay: '押金支付方式',
        order_Type: {
            'Department@department': '电商',
            'Department@agent': '代理商',
            'Department@wareHouse': '网点'
        },
        order_Progress: {
            'OrderProgress@receive': '待收款',
            'OrderProgress@deliver': '待发货',
            'OrderProgress@return': '待归还',
            'OrderProgress@settlement': '待结算',
            'OrderProgress@settlemented': '结算'
        },
        order_Status: {
            'OrderStatus@normal': '正常',
            'OrderStatus@free': '免费',
            'OrderStatus@camcel': '取消',
            'OrderStatus@refund': '退款',
            'OrderStatus@unsub': '退订',
            'OrderStatus@invalid': '无效'
        },
        /* 押金支付方式 */
        select_cashPledgePayWay: {
            'CommonType@yes': '免押金',
            'CommonType@no': '现场支付'
        },
        /* 是否需要收款 */
        select_isNeedPay: {
            'CommonType@yes': '是',
            'CommonType@no': '否'
        },
        /* 是否发送邮件 */
        select_SendEmail: {
            'CommonType@yes': '是',
            'CommonType@no': '否'
        },
        // 是否使用企业账户
        select_bussinessAccountPay: {
            'CommonType@yes': '使用',
            'CommonType@no': '不使用'
        },
        /* 是否发送短信  */
        select_sendSms: {
            'CommonType@yes': '是',
            'CommonType@no': '否'
        },
        rentCollection: {
            'CommonType@yes': '是',
            'CommonType@no': '否'
        },
        // 快递付款方式
        select_expressPayMode: {
            'ExpressPayMode@send': '寄付',
            'ExpressPayMode@arrival': '到付'
        },
        /* 是否提前发货 */
        select_inAdvanceSend: {
            'CommonType@yes': '是',
            'CommonType@no': '否'
        },
        code: '验证码'
    },
    /**
     * 工单列表 页面国际化
     * 负责人：wanglehui
     **/
    v_workOrderList: {
        list: {
            orderLabelList: '订单标签',
            serialNumber: '订单编号',
            orderProgress: '订单进度',
            orderStatus: '订单状态',
            customerName: '客户姓名',
            customerPhone: '客户电话',
            goAbroadDate: '出国日期',
            backHomeDate: '回国日期',
            imei: 'IMEI',
            takeType: '取货方式',
            departmentType: '订单类型',
            subscribeStatus: '订购状态',
            creatDate: '创建时间'
        },
        /* 创建_start*/
        agentOrderCreation: '代理商订单创建',
        websiteOrderCreation: '网点订单创建',
        retailersOrderCreation: '电商订单创建',
        dotCreation: '网点创建',
        agentCreation: '代理创建',
        retailersCreation: '电商创建',
        orderCreation: '订单创建',
        createSuccess: '创建成功',
        createFailed: '创建失败',
        excute: '执行',
        edit: '编辑',
        detail: '详情',
        cancel: '取消',
        refund: '退款',
        relet: '续租',
        all: '全部',
        selectComboType: '请选择套餐类型',
        selectGoputDate: '请先选择出行日期',
        expressAddress: '收货地址',
        detailAddress: '详细地址',
        expressPayMode: '付款方式',
        deliveryCosts: '快递费用',
        predictSendTime: '预计发货时间',
        inAdvanceSendTime: '提前发货时间',
        inAdvenceSendCosts: '提前发货费用',
        ifInAdvanceSend: '是否提前发货',
        sendMessage: '是否发送短信',
        tipSelectTakeType: '请先选择取货方式',
        tipNoBalance: '企业账户余额不足，请充值',
        /* 创建end */
        /* 查询start */
        departmentType: '部门',
        tripTime: '出行时间',
        virtualDeliver: '虚拟发货',
        virtualReturn: '虚拟归还',
        wareHouseName: '设备仓位',
        salesmanName: '业务员姓名',
        userDepartment: '业务员部门',
        subscribeStatus: '订购状态',
        packageType: '套餐类型',
        packageName: '套餐名字',
        otaCombineOrderId: '合并订单号',
        otaOrderId: 'OTA订单号',
        dateType: '时间查询',
        /* 查询end */
        /* orderEdit wanglehui*/
        agentOrderEdit: '代理商订单编辑',
        dotOrderEdit: '网点订单编辑',
        RetailerOrderEdit: '电商订单编辑',
        save: '保存',
        pleaseSelect: '请选择',
        editSuccess: '编辑成功',
        editFailed: '编辑失败',
        notEdit_settlement: '结算、待结算订单不可编辑',
        notEdit_abnormal: '非正常订单不可编辑',
        reEditAdvenceSend: '请重新配置提前发货参数',
        pleaseSelePackType: '请选择套餐类型',
        pleaseSelePackName: '请选择套餐名字',
        pleaseSelectAddress: '请选择收货地址',
        pleSeleAdvanceDate: '请选择提前发货日期',
        /* orderEdit end wanglehui */
        agent: '代 理 商 ',
        advanceDeliveryFee: '提前发货费用',
        batchExecute: '批量执行',
        customerName: '客户姓名',
        customerPhone: '客户电话',
        cancelOrder: '取消订单申请',
        refundOrderApply: '退款申请',
        refundReason: '退款原因',
        quadraticRefund: '是否二次退款',
        cancelReason: '取消原因',
        cancelExpress: '快递发出取消',
        compensateMoney: '赔偿金额',
        compensateReason: '赔偿原因',
        compensationAmount: '实收赔偿金',
        compensateMoneyNum: '50.00',
        comfirm: '确定',
        delivery: '发货',
        deliveryInfo: '发货信息',
        deliveryDate: '发货日期',
        downloadTemplate: '下载模板',
        deposit: '实收押金',
        depositAmount: '押金金额',
        depositReceiveUserName: '押金收款人',
        depositPayTypeName: '押金收款方式',
        delayAmount: '实收滞纳金',
        department: '部门',
        export: '导出',
        financeExport: '财务导出',
        endTime: '结束时间',
        is: '是',
        imei: 'IMEI',
        import: '导入',
        index: '序号',
        rent: '租金金额',
        isRent: '租金是否收取',
        inputImei: '扫描或手动输入imei',
        not: '否',
        ordered: '订购',
        orderProgress: '订单进度',
        orderType: '订单类型',
        orderStatus: '订单状态',
        orderInfo: '订单信息',
        otherAmount: '其他金额',
        pleaseInputCancelReason: '请输入取消原因',
        query: '查询',
        receipt: '收款',
        receiptAmount: '收款金额',
        receivableLateFee: '应收滞纳金',
        receivableDamageFee: '应收赔偿金',
        receiptInfo: '收款信息',
        return: '归还',
        returnInfo: '归还信息',
        returnExpressNumber: '寄回快递单号',
        returnWarehouse: '归还仓位',
        refundAmount: '退款金额',
        startTime: '开始时间',
        search: '搜索',
        serialNumber: '订单编号',
        settlement: '结算',
        settlementInfo: '结算信息',
        swapDevice: '设备对换',
        takeType: '取货方式',
        isNeedPay: '是否需要收款',
        takeInfo: '取货信息',
        totalAmount: '合计金额',
        shop: '店铺',
        to: '至',
        days: '天',
        reletInfo: '续租信息',
        reletDate: '续租日期',
        reletOtaOrderId: '续租OTA订单号',
        reletDays: '续租天数',
        reletAmount: '续租租金',
        OTAOrderNumber: 'OTA订单号',
        agentPay: '代理商支付',
        agentBatchPay: '代理商批量支付',
        receivableDeposit: '应收押金金额',
        receiptDeposit: '实收押金金额',
        sumReceiptDeposit: '合计实收押金金额',
        payAmount: '支付金额',
        scanQRCodeToPay: '(扫一扫完成支付)',
        SFExpress: '顺丰打印',
        readyPrint: '准备打印',
        rentPaySerailNumber: '租金支付流水号',
        ifNeedRecipt: '是否需要收款',
        salesman: '业 务 员 ',
        travelDate: '出行日期',
        selectCountry: '选择国家',
        comboType: '套餐类型',
        orderNum: '订单数量',
        whetherSend: '是否发送短信',
        cashPledgePayWay: '押金支付方式',
        paymentMethod: '支付方式(选择付款方式)',
        remark: '备注',
        remarkPlaceholder: '请输入备注内容...（选填）',
        takeWebsite: '取货网点',
        takeCabinet: '取货机柜',
        bussinessAccountPay: '企业账户支付',
        submit: '提交',
        immediatelyPayment: '立即支付',
        immediatelyReceipt: '立即收款',
        authCode: '授权码',
        uploadNote: '上传票据',
        chargeInfo: '扣款信息',
        chargeMoney: '扣款金额',
        compensationSincere: '赔偿款',
        overdueFine: '滞纳金',
        overdueFineNum: '滞纳金额',
        dalayDays: '延期天数',
        otherExpenses: '其他费用',
        applyRefundPayment: '申请返款扣款',
        returnMoney: '返还金额',
        applyReturnMoney: '申请返还扣款',
        compensateCause: '赔偿原因',
        compensationMoney: '赔偿金额',
        compensateReasonList: ['设备丢失 ', '设备包丢失 ', '数据线丢失 '],
        applySccusse: '申请成功',
        applyFailed: '申请失败',
        logoRmb: '元',
        payTimeout: '支付超时',
        swapDeviceInfo: {
            index: '序号',
            IMEI: 'IMEI',
            newIMEI: '新IMEI',
            orderIndex: '订单编号',
            clientName: '客户姓名',
            clientNumber: '客户电话'
        },
        resetOrderCaptcha: '重置订单验证码',
        imeiCheck: 'IMEI号必须是15位整数',
        importNewImei: '请输入有效的新IMEI',
        importImei: '请先输入有效的IMEI',
        saveSuccessfully: '保存成功',
        notFoundOrderInfo: '未找到订单信息',
        delayDaysCheck: '延期天数需为大于或等于0的整数',
        otherSumCheck: '其他金额需为大于或等于0的整数',
        returnSumCheck: '申请返款扣款大于扣款金额，请重新选择',
        returnSumIsZeroCheck: '返还金额为0，请慎重选择',
        mostFive: '最多上传5张图片',
        tipsInputDate: '请先选择出行时间',
        tipsInputCombo: '请先选择套餐类型',
        expressCode: '快递单号',
        inputExprees: '扫描或输入快递单号',
        delayDay: '延期天数',
        receivableOtherFee: '其他金额',
        compensateForReason: '赔偿原因',
        refundOrderApplySuccess: '退款申请成功',
        cancelOrderSuccess: '取消订单申请成功 ',
        prompt: '提示',
        compensateForPromptOne: '申请取消该订单将产生',
        compensateForPromptTwo: '元，确定要取消该订单吗？',
        sameOrderList: '请选择订单进度一致的订单开始操作',
        unsubscribeOrderApply: '退订订单申请',
        unsubscribeReason: '退订原因',
        unsubscribeSuccess: '退订订单申请成功',
        isOrderProgress: '只有完成发货订单才能退款',
        isSettlemented: '已经结算不能退款',
        deliverSuccess: '发货成功',
        sendBack: '异地归还',
        changePayType: '请选择支付方式',
        preview: '预览',
        departmentName: '部门',
        goOutDate: '出国日期',
        getBackDate: '回国日期',
        branchName: '网点名称',
        isSendMessage: '是否发送短信',
        selectTemplateType: '选择模板类型',
        download: '下载',
        orderTemplate: '订单模板',
        cancelBreachFee: '应收违约金',
        cancelBreachAmount: '取消违约金',
        previewPoint: '请上传有效文件',
        verifyDateType: '请输入正确格式的日期',
        verifyDate: '请检查日期是否合理',
        importSuccess: '导入成功',
        uploadSuccess: '上传成功',
        nodataTip: '真遗憾你当前没有订单',
        changeCondition: '请先输入查询条件（最少输入一个），才能显示列表信息',
        orderTemplate_type: {
            'OrderTemplate@deptPoint': '自营电商网点取货订单模板',
            'OrderTemplate@proxyPoint': '代理商网点取货订单模板',
            'OrderTemplate@pointPoint': '自营网点网点取货订单模板'
        },
        isUseFreeDepositOrAccountPay: '押金支付方式',
        order_Type: {
            'Department@department': '电商',
            'Department@agent': '代理商',
            'Department@wareHouse': '网点'
        },
        order_Progress: {
            'OrderProgress@receive': '待收款',
            'OrderProgress@deliver': '待发货',
            'OrderProgress@return': '待归还',
            'OrderProgress@settlement': '待结算',
            'OrderProgress@settlemented': '结算'
        },
        order_Status: {
            'OrderStatus@normal': '正常',
            'OrderStatus@free': '免费',
            'OrderStatus@camcel': '取消',
            'OrderStatus@refund': '退款',
            'OrderStatus@unsub': '退订',
            'OrderStatus@invalid': '无效'
        },
        rentCollection: {
            'CommonType@yes': '是',
            'CommonType@no': '否'
        },
        // 快递付款方式
        select_expressPayMode: {
            'ExpressPayMode@send': '寄付',
            'ExpressPayMode@noSend': '到付'
        },
        select_inAdvanceSend: {
            'noInAdvance': '否',
            'inAdvance': '是'
        }
    },
    v_orderReturnList: {
        list: {
            serialNumber: '订单编号',
            departmentName: '部门',
            alreadyCutAmount: '已扣金额(元)',
            returnBackDamageAmount: '返还赔偿金(元)',
            returnBackDelayAmount: '返还滞纳金(元)',
            returnBackOtherAmount: '返还其他费用(元)',
            returnBackCutAmount: '返还扣款金额(元)',
            returnBackCutPayType: '返还扣款方式',
            applyUserName: '申请人',
            createTime: '申请时间',
            auditStatus: '审核状态'
        },
        search: '查询',
        audit: '审核',
        export: '导出',
        save: '保存',
        auditSaveSuccessfully: '审核成功',
        auditSaveFailed: '保存失败',
        remark: '备注',
        serialNumber: '订单编号',
        departmentName: '部门',
        auditStatus: '审核状态',
        all: '全部',
        auditStatusList: {
            'ReturnBackCutPayAuditStatus@pending': '待审核',
            'ReturnBackCutPayAuditStatus@approve': '通过',
            'ReturnBackCutPayAuditStatus@refuse': '驳回'
        },
        auditTwoStatusList: {
            'ReturnBackCutPayAuditStatus@approve': '通过',
            'ReturnBackCutPayAuditStatus@refuse': '驳回'
        }
    },
    /**
     * 基础设置 销售品管理
     * 负责人：wanglehui
     **/
    v_productManager: {
        list: {
            goodCode: '销售品编码',
            goodName: '销售品名称',
            dataStatus: '状态',
            description: '销售品描述',
            mccList: '国家列表',
            mccFlag: '国家黑白名单标识'
        },
        goodCode: '销售品编码',
        goodName: '销售品名称',
        search: '查询',
        synchronization: '同步',
        synIng: '确认同步？',
        synSuccess: '同步成功',
        synFailed: '同步失败',
        dataStatus_type: {
            'Common@valid': '有效',
            'Common@invalid': '无效'
        }
    },
    v_packageManager: {
        list: {
            packageName: '套餐名称',
            packageCode: '套餐编码',
            price: '单价',
            packageType: '套餐类型',
            beginTime: '生效时间',
            endTime: '失效时间',
            orderBeginTime: '下单开始时间',
            orderEndTime: '下单结束时间',
            dataStatus: '数据状态',
            minDays: '起订天数',
            isShippingFree: '是否包邮'
        },
        all: '全部',
        activityPrice: '活动价格',
        addActivityPackage: '添加活动套餐',
        attachmentlist: '附件列表',
        addProducts: '添加销售品',
        applicationItem: '应用项目',
        addRoutineFail: '添加常规套餐失败',
        addActivityFail: '添加活动套餐失败',
        modifyActivityFail: '修改活动套餐失败',
        addStockFail: '添加存货套餐失败',
        addMonthlyFail: '添加包月套餐失败',
        beginTime: '生效时间',
        beginMonth: '生效月份',
        ctripSingle: '携程单日单数',
        createUserName: '创建人',
        createUserAccount: '创建账号',
        createTime: '创建时间',
        dataStatus: '数据状态',
        detail: '详情',
        detailInfo: '详情信息',
        endTime: '失效时间',
        endMonth: '失效月份',
        export: '导出',
        edit: '编辑',
        editSuccess: '编辑成功',
        editFailed: '编辑失败',
        expressPrice: '快递费',
        fileList: '附件列表',
        fileName: '文件名',
        fileDescription: '文件描述',
        fileType: '文件类型',
        file: '文件',
        fileUploadFailed: '文件上传失败',
        inputExpressFee: '请输入快递费',
        isRecommend: '是否热门',
        isShippingFree: '是否包邮',
        limitCount: '限制下单数量',
        mvno: 'MVNO',
        minDays: '起订天数',
        minMonths: '起订月数',
        orderBeginTime: '下单开始时间',
        orderEndTime: '下单结束时间',
        operationlog: '操作日志',
        operateSuccess: '操作成功',
        operateFail: '操作失败',
        packageCode: '套餐编号',
        packageName: '套餐名称',
        packageType: '套餐类型',
        packageCreate: '套餐创建',
        packageActivity: '活动套餐',
        packageRoutine: '常规套餐',
        packageStock: '存货套餐',
        packageMonthly: '包月套餐',
        packageRoutineCreate: '常规套餐创建',
        packageStockCreate: '存货套餐创建',
        packageMonthlyCreate: '包月套餐创建',
        packageRoutineEdit: '常规套餐编辑',
        packageStockEdit: '存货套餐编辑',
        packageMonthlyEdit: '包月套餐编辑',
        price: '单价',
        packagePrice: '套餐价格',
        pleaseInputRequestData: '所需数据不能为空',
        querySaleProductsFail: '查询销售品失败',
        queryRelativeSaleProductsFail: '查询关联销售品失败',
        queryGroupFail: '查询集团账号失败',
        remark: '备注',
        relateGroup: '关联集团账号',
        saveCreate: '存货套餐',
        search: '查询',
        setHot: '设为热门',
        save: '保存',
        sure: '确定',
        shippingFree: '包邮',
        supportTakeType: '支持取货方式',
        typeName: '类型名称',
        typeStatus: '类型状态',
        uploadFile: '上传',
        updateTime: '上次更新时间',
        updateUserName: '更新人',
        mastInput: '此为必填项',
        packageNameAndTypeCheck: '套餐名称、类型不能重复',
        tipsMsgLimit: '活动套餐生效起止日与下单起止日必须包含在正常套餐时间之内',
        tipsMsgLess: '套餐终止时间不能小于起始时间',
        nitOfChoice:'选择货币单位'
    },
    /*v_userAgent : {
        list : {
            agentCode: '代理编码',
            agentName: '代理名称',
            parentDeptName: '上级部门',
            status: "状态",
            auditStatus: '审批状态',
            adminUserName: '负责人',
            rotocolCode: '协议代码',
            linkMan1: '联系人',
            linkPhone1: '联系人电话',
            ownerUserName: '业务代表',
            agentCreateUserName: '创建人',
            createTime: '创建时间',
            updateTime: '更新时间',
            type: '类型',
            agentType: '代理类型',
            identity: '身份证',
            guideCard: '导游证',
            leaderCard: '领队证',
            bank: '开户行',
            bankAccountName: '开户名',
            bankNum: '银行帐号',
            address: '地址',
            description: '备注',
            auditUserName: '审批员',
            auditOpinion: '审批意见',
            auditUserAccount: '审批员帐号',
            ownerUserAccount: '业务员帐号',
            agentCreateUserName: '创建帐号',
            mvnoCode: 'MVNO'
        },
        mvno: 'MVNO',
        parentDeptName:'上级部门',
        status: '状态',
        agentName: '代理名称',
        agentCode: '代理编码',
        ownerUserName: '业务代表',
        search: "查询",
        add: "创建",
        detail: '详情',
        edit: '编辑',
        del: '删除',
        change:'更换业务员',
        review: '审核'
    }*/
    /*
    * 押金等级管理
    * */
    v_depositGrade: {
        list: {
            'name': '机构名称',
            'code': '机构编码',
            'depositGradeType': '押金等级',
            'deposit': '押金金额',
            'supportOrderType': '支持下单类型',
            'applicant': '申请人',
            'applyTime': '申请时间',
            'auditStatus': '审核状态',
            'auditor': '审核人',
            'auditTime': '审核时间',
            'dataStatus': '数据状态',
            'auditReason': '审核意见',
            'mvnoCode': 'MVNO'
        },
        'code': '机构编码',
        'auditStatus': '审核状态',
        'agency': '机构代理',
        'save': '保存',
        'edit': '编辑',
        'apply': '申请',
        'search': '查询',
        'selectAgent': '请选择代理商',
        //下单类型
        'supportOrderType': {
            'SupportOrderType@pointCabinet': '网点/机柜',
            'SupportOrderType@deliver': '快递'
        },
        //审核状态
        'auditStatusType': {
            'GradeAuditStatus@pending': '待审核',
            'GradeAuditStatus@notPass': '不通过',
            'GradeAuditStatus@pass': '通过'
        },
        //审核状态
        'auditStatusTypetwo': {
            'GradeAuditStatus@notPass': '不通过',
            'GradeAuditStatus@pass': '通过'
        },
        //押金等级
        'depositGradeType': {
            'DepositGradeType@A': 'A',
            'DepositGradeType@B': 'B',
            'DepositGradeType@C': 'C'
        },
        'serialNumber': '序号',
        'Agent': '代理商',
        'supportOrdeType': '支持订单类型',
        'supportPickup': '支持取货方式',
        'depositGrade': '押金等级',
        'depositAmount': '押金金额',
        'audit': '审核',
        'auditOpinion': '审核意见',
        'batchaudit': '批量审核',
        'export': '导出',
        'auditSuccess': '审核成功',
        'auditFailed': '审核失败',
        'editSuccess': '编辑成功',
        'editFailed': '编辑失败',
        'noedit': '不允许编辑',
        'mvnoCode': 'MVNO',
        'dataStatus': '数据状态',
        'sure': '确定',
        'all': '全部',
        'applySccusse': '申请成功',
        'supportStype': '支持取货方式',
        'applyFailed': '申请失败',
        'checkNotEdit': '审核状态为已通过不可编辑',
        'isSelect': '请选择信息选项',
        'dataStatusType': {
            'Common@valid': '有效',
            'Common@invalid': '无效'
        }
    },
    v_menuManager: {
        add: '新增',
        detailInfo: '详细信息',
        'zh-CN': '中文名称',
        'zh-TW': '繁体名称',
        'en-US': '英文名称',
        url: 'URL',
        parentCode: '上级编码',
        parentName: '上级名称',
        parentValue: '无',
        code: '编码',
        type: '类型',
        status: '状态',
        description: '描述',
        sortIndex: '排序',
        interfaceUrl: '接口地址',
        createUserAccount: '创建账号',
        sysChannels: '应用类型',
        createTime: '创建时间',
        updateTime: '上次更新时间',
        menuBtn: '菜单按钮',
        del: '删除',
        edit: '编辑',
        query: '查询',
        save: '保存',
        distMechanism: '分配机构',
        queryTraffic: '查询流量',
        modify: '修改',
        addToken: '+',
        addMenu: '新增菜单',
        delConfirm: '你确定要删除这个菜单?',
        delSuccess: '删除成功',
        delFailed: '删除失败',
        confirm: '确定',
        cancel: '取消',
        editMenu: '编辑菜单',
        editSuccess: '修改成功',
        editFailed: '修改失败',
        addSuccess: '新增成功',
        addFailed: '新增失败',
        parentIDFailed: '上级名称不能为空'
    },
    /**
     * 优惠码 页面国际化
     * 负责人：chenxiaoli
     **/
    v_discountCodeList: {
        list: {
            'discountCode': '优惠码',
            'discountType': '优惠类型',
            'days': '起订天数',
            'discountDays': '减免天数',
            'discountAmount': '减免金额',
            'codeStatus': '获取状态',
            'status': '状态',
            'createTime': '创建时间',
            'updateTime': '更新时间',
            'updateUserName': '更新人'
        },
        discountCode: '优惠码',
        discountType: '优惠类型',
        codeStatus: '获取状态',
        selectDiscountType: '选择优惠类型',
        days: '起订天数',
        discountDays: '减免天数',
        number: '优惠码数量',
        discountAmount: '减免金额',
        status: '数据状态',
        type: '字典类型',
        key: '字典编码',
        value: '　字典值',
        effective: '有效',
        invalid: '无效',
        description: '字典描述',
        lanType: '语言类型',
        search: '查询',
        detail: '详情',
        edit: '编辑',
        editSuccess: '编辑优惠码成功！',
        editFailed: '编辑优惠码失败！',
        add: '新增',
        addSuccess: '新增优惠码成功！',
        addFailed: '新增优惠码失败！',
        del: '删除',
        delConfirm: '真的要删除这条数据吗？',
        delSuccess: '删除字典值成功！',
        delFailed: '删除字典值失败！',
        lan_type: {
            'zh-CN': '简体中文',
            'zh-TW': '繁体中文',
            'en-US': '英文'
        },
        select_lantype_edit: {
            'zh-CN': 'zh-CN',
            'zh-TW': 'zh-TW',
            'en-US': 'en-US'
        },
        status_type: {
            '': '全部',
            'Common@valid': '有效',
            'Common@invalid': '无效'
        },
        status_type_edit: {
            'Common@valid': '有效',
            'Common@invalid': '无效'
        },
        discount_type_status: {
            '': '全部',
            'DiscountType@Days': '减免天数',
            'DiscountType@Amount': '减免金额'
        },
        discount_type_addstatus: {
            'DiscountType@Days': '减免天数',
            'DiscountType@Amount': '减免金额'
        },
        code_status: {
            '': '全部',
            'CouponState@Use': '已经使用',
            'CouponState@Unused': '未使用'
        }
    },
    /**
     * 字段管理 页面国际化
     * 负责人：chenxiaoli
     **/
    v_filedManagementList: {
        list: {
            'interfaceName': '接口名',
            'description': '描述',
            'fieldCode': '字段编码',
            'fieldName': '字段名称',
            'status': '状态',
            'createUserName': '创建人',
            'createUserAccount': '创建账号',
            'createTime': '创建时间',
            'updateTime': '更新时间'
        },
        interfaceName: '接口名',
        description: '描述',
        fieldCode: '字段编码',
        fieldName: '字段名称',
        status: '状态',
        createUserName: '创建人',
        createUserAccount: '创建账号',
        createTime: '创建时间',
        updateTime: '更新时间',
        effective: '有效',
        invalid: '无效',
        lanType: '语言类型',
        search: '查询',
        edit: '编辑',
        editSuccess: '编辑成功！',
        editFailed: '编辑失败！',
        add: '新增',
        addSuccess: '新增成功！',
        addFailed: '新增失败！',
        lan_type: {
            'zh-CN': '简体中文',
            'zh-TW': '繁体中文',
            'en-US': '英文'
        },
        select_lantype_edit: {
            'zh-CN': 'zh-CN',
            'zh-TW': 'zh-TW',
            'en-US': 'en-US'
        },
        status_type: {
            '': '全部',
            'Common@valid': '有效',
            'Common@invalid': '无效'
        },
        status_type_edit: {
            'Common@valid': '有效',
            'Common@invalid': '无效'
        }
    },
    /**
     * 接口管理 页面国际化
     * 负责人：chenzhiming
     **/
    v_interfaceManagementList: {
        list: {
            'interfaceName': '接口名',
            'createUserAccount': '创建账号',
            'createUserName': '创建人',
            'createTime': '创建时间',
            'updateTime': '更新时间',
            'description': '描述'
        },
        interfaceName: '接口名',
        description: '描述',
        status: '状态',
        createUserName: '创建人',
        createUserAccount: '创建账号',
        createTime: '创建时间',
        updateTime: '更新时间',
        lanType: '语言类型：',
        search: '查询',
        edit: '编辑',
        editSuccess: '编辑成功！',
        editFailed: '编辑失败！',
        add: '新增',
        addSuccess: '新增成功！',
        addFailed: '新增失败！',
        del: '删除',
        delConfirm: '确定删除？',
        delSuccess: '删除成功！',
        delFailed: '删除失败！',
        lan_type: {
            'zh-CN': '简体中文',
            'zh-TW': '繁体中文',
            'en-US': '英文'
        },
        select_lantype_edit: {
            'zh-CN': 'zh-CN',
            'zh-TW': 'zh-TW',
            'en-US': 'en-US'
        }
    },
    /**
     * 机柜 页面国际化
     * 负责人：zhangzhijie
     **/
    v_cabinet: {
        list: {
            name: '机柜名称',
            number: '机柜编码',
            type: '机柜类型',
            parentName: '上级仓位',
            cabinetStatus: '机柜状态',
            createTime: '创建时间',
            createUserName: '创建人',
            versionNo: '机柜版本',
            remark: '备注',
            updateTime: '最新修改时间',
            mvnoCode: 'MVNO'
        },
        search: '查询',
        detail: '详情',
        close: '关闭',
        edit: '编辑',
        editSuccess: '编辑成功！',
        editFailed: '编辑失败！',
        add: '机柜创建',
        addSuccess: '创建成功！',
        addFailed: '新增失败',
        mvno: 'MVNO',
        cabinetName: '机柜名称',
        number: '机柜编码',
        cabinetType: '机柜类型',
        cabinetStatus: '机柜状态',
        versionNo: '机柜版本',
        remark: '备注',
        serialNumber: '序号',
        cellName: '柜格编码',
        cellStatus: '柜格类型',
        cabinet_type: {
            '': '全部',
            'cabinetType@canRent': '可租',
            'cabinetType@canReturn': '可还',
            'cabinetType@blend': '混合'
        },
        cabinet_typeVal: {
            'cabinetType@canRent': '可租',
            'cabinetType@canReturn': '可还',
            'cabinetType@blend': '混合'
        },
        cabinet_status: {
            '': '全部',
            'cabinetStatus@normal': '正常',
            'cabinetStatus@notAvailable': '不可用'
        },
        cabinet_statusVal: {
            'cabinetStatus@normal': '正常',
            'cabinetStatus@notAvailable': '不可用'
        },
        cabinet_versionNo: {
            '': '全部',
            'cabinetVersionNo@firstEra': '第一代',
            'cabinetVersionNo@secondEra': '第二代'
        },
        cabinet_versionNoVal: {
            'cabinetVersionNo@firstEra': '第一代',
            'cabinetVersionNo@secondEra': '第二代'
        }
    },
    v_cabinetDetail: {
        list: {
            number: '序号',
            cellName: '柜格编码',
            type: '柜格类型'
        }
    },
    /**
     * 退款订单列表 页面国际化
     * 负责人：lihuan
     **/
    v_refundOrderList: {
        list: {
            serialNumber: '订单编号',
            imei: 'IMEI',
            customerPhone: '客户电话',
            orderProgress: '订单进度',
            startDate: '出国日期',
            endDate: '回国日期',
            customerName: '客户姓名',
            departmentType: '订单类型',
            departmentName: '部门',
            operationReason: '申请原因',
            operationUserName: '申请人',
            operationDate: '申请时间',
            auditReason: '审核意见',
            auditUserName: '审核人',
            auditDate: '审核时间',
            auditStatus: '审核状态',
            refundStatus: '退款状态',
            refundPrice: '退款金额',
            refundDays: '退款天数(天)',
            quadraticRefund: '是否二次退款'
        },
        export: '导出',
        search: '搜索',
        query: '查询',
        apply: '审核',
        refund: '退款',
        sure: '确定',
        adopt: '通过',
        chat: '微信',
        notAdopt: '不通过',
        advancedQuery: '高级查询',
        orderNumber: '订单编号',
        imei: 'IMEI',
        customerName: '客户姓名',
        customerPhone: '客户电话',
        agent: '代理商',
        orderSchedule: '订单进度',
        orderType: '订单类型',
        applyReason: '申请原因',
        applyName: '申请人',
        applyDate: '申请时间',
        applyView: '审核意见',
        auditName: '审核人',
        auditTime: '审核时间',
        auditStatus: '审核状态',
        refundStatus: '退款状态',
        abroadDate: '出国日期',
        returnDate: '回国日期',
        return_date: '归还日期',
        renewEndDate: '续租结束日期',
        daysOfRefund: '应退款天数',
        refundDays: '退款天数',
        refundInformation: '退款信息',
        flowInformation: '流量使用信息',
        travelInformation: '出行信息',
        refundAmount: '退款金额',
        refundMethod: '退款方式',
        agency: '部门',
        timeQuery: '时间查询',
        startTime: '开始时间',
        endTime: '结束时间',
        notTime: '没有开始和结束时间无法审核',
        auditSuccess: '审核成功',
        isRefund: '重复退款',
        refundSuccess: '退款成功',
        quadraticRefund: '是否二次退款',
        isSearch: '请同时选择时间查询和开始时间和关闭时间',
        startDays: '* 您的退款天数有误，与出行天数不符',
        all: '全部',
        day: '天',
        timeQuery_value: {
            'DateQuery@apply': '申请日期',
            'DateQuery@start': '出国日期',
            'DateQuery@end': '回国日期'
        },
        auditStatus_value: {
            'RefundStatus@pass': '通过',
            'RefundStatus@notPass': '不通过',
            'RefundStatus@pending': '待审核'
        },
        refundStatus_value: {
            'RefundStatus@forRefund': '待退款',
            'RefundStatus@refunded': '已退款'
        },
        orderSchedule_value: {
            'OrderProgress@receive': '待收款',
            'OrderProgress@deliver': '待发货',
            'OrderProgress@return': '待归还',
            'OrderProgress@settlement': '待结算',
            'OrderProgress@settlemented': '结算'
        },
        quadraticRefund_value: {
            'CommonType@yes': '是',
            'CommonType@no': '否'
        },
        orderType_value: {
            'Department@wareHouse': '仓位',
            'TypeForOrder@Network': '网点',
            'Department@agent': '代理商',
            'TypeForOrder@Online_retailers': '电商'
        },
        status_lantype: {
            'RefundStatus@pass': '通过',
            'RefundStatus@notPass': '不通过'
        }

    },
    /**
     * 退款订单列表——流量查询 页面国际化
     * 负责人：lihuan
     **/
    v_flowOrderList: {
        list: {
            imei: 'IMEI',
            createTime: '日期',
            visitCountry: '国家',
            flowSize: '使用流量',
            number: '序号'
        }
    },

    /**
     * 财务管理 月应收租金列表
     * 负责人：zhengyongsheng
     */
    v_monthlyReceivableList: {
        list: {
            agentName: '部门',
            agentCode: '部门编码',
            staffDept: '业务员部门',
            staffName: '业务代表',
            month: '月份',
            orderType: '订单类型',
            rent: '租金金额',
            reletRent: '续租租金',
            totalRele: '总租金金额',
            backAmount: '退款金额',
            expressFee: '快递费',
            expressAdvancedFee: '提前发货费用',
            receiveAmount: '应收金额'
        },
        staffDeptName: '业务员部门',
        agentName: '部门',
        agentCode: '部门编码',
        staffName: '业务代表',
        month: '月份',
        search: '查询',
        export: '导出',
        all: '全部'
    },
    /**
     * 财务管理 -- 自动退押金
     * 负责人：litao
     */
    v_autoReturnDeposit: {
        customerPhone: '客户电话',
        customerPhonePlaceholder: '请输入客户电话',
        refundStatus: '退款状态',
        refundType: '退款类型',
        payType: '支付方式',
        serialNumber: '订单编码',
        serialNumberPlaceholder: '请输入订单编码',
        deptName: '部门',
        search: '查询',
        export: '导出',
        must: '请至少选择一条记录进行操作！',
        confirmRefund: ' 确认退款',
        returnDepositSearch: '退款查询',
        returnDepositSearchTips: '请选择支付方式为微信的记录查询！',
        detail: '详情',
        confirmRefundTitle: '确认退款',
        confirmRefundText: '确认要退款吗?',
        confirmRefundTips: '（确认之后，押金将自动退回客户账户）',
        confirm: '确认',
        operateSuccess: '操作成功',
        all: '全部',
        refundTime: '退款开始时间',
        refundOverTime: '退款结束时间',
        list: {
            serialNumber: '订单编号',
            refundType: '退款类型',
            customerName: '客户姓名',
            customerPhone: '客户电话',
            payType: '支付方式',
            refundStatus: '退款状态',
            actualOther: '实收其他费用',
            actualCancel: '实收取消违约金',
            tradeNo: '支付流水号',
            orderProgress: '订单状态',
            deptName: '代理机构',
            actualDeposit: '实收押金',
            actualDamages: '实收赔偿金',
            actualLateFee: '实收滞纳金',
            refundTime: '退款时间',
            refundUserName: '退款人',
            pay: '收款金额',
            channel: '退款渠道',
            refundDesc: '退款说明',
            refundId: '退款单号',
            refundStatusQuery: '退款查询',
            commitTime: '提交时间',
            preRefund: '上次返还金额',
            refund: '返还金额'
        }
    },
    /**
     * 财务管理 返点管理
     * 负责人：yankang
     **/
    v_rebateManagement: {
        list: {
            agnetName: '机构名称',
            agnetCode: '机构编码',
            rewardTypeName: '返点类型',
            rewardRadix: '交易额类型',
            createDate: '创建时间',
            updateDate: '更新时间',
            createUserName: '创建人',
            updateUserName: '更新人',
            dataStatus: '数据状态'
        },
        all: '全部',
        offsetLoan: '冲抵贷款',
        agencyAgent: '机构代理',
        agencyName: '机构名称',
        edit: '编辑',
        detail: '查看详情',
        rebateDetail: '查看详情',
        query: '查询',
        code: '机构编码',
        dataStatus: '数据状态',
        createRebate: '创建返点',
        createRebateInfo: '创建返点信息',
        operateLog: '操作记录',
        choiceRebateType: '选择返点类型',
        leaseContractRebate: '租赁合同返点',
        leaseAttachmentProtocolRebate: '租赁附加协议返点',
        monthlyAttachmentProtocoRebate: '包月附加协议返点',
        rebateSettlement: '返点结算方式',
        transactionType: '交易额类型',
        //lastMonthBackMoney:'上月回款',
        //thisMonthPerformance:'本月业绩',
        index: '序号',
        transactionAmount: '交易额',
        rebatePercent: '返点比例',
        percent: '%',
        setDefault: '设为默认',
        operation: '操作',
        add: '新增',
        delete: '删除',
        remark: '备注',
        fistX: '<X<',
        midX: '≤X<',
        lastX: '≤X',
        save: '保存',
        fileNoempty: '附件列表不能为空',
        createFailed: '创建失败',
        createSuccessed: '创建成功',
        operateFailed: '操作失败',
        operateSuccessed: '操作成功',
        defaultRebeatType: '默认返点类型',
        agencyAgentName: '机构名称',
        createDate: '创建时间',
        updateDate: '更新时间',
        createUserName: '创建人',
        updateUserName: '更新人',
        attachmentlist: '附件列表',
        fileName: '文件名',
        fileDescription: '文件描述',
        fileType: '文件类型',
        file: '文件',
        cancel: '取消',
        noRepeat: '同一机构不能重复创建',
        dataStatusRadioList: {
            'Common@valid': '有效',
            'Common@invalid': '无效'
        },
        transactionTypeList: {
            '上月回款': '上月回款',
            '本月业绩': '本月业绩'
        }

    },
    /**
     * 财务管理 应收租金列表
     * 负责人：zhengyongsheng
     */
    v_receivableList: {
        list: {
            serialNumber: '订单编号',
            agentName: '部门',
            agentCode: '部门编号',
            deptName: '业务员部门',
            rent: '租金',
            reletRent: '续租租金',
            backAmount: '退款金额',
            expressFee: '快递费',
            expressAdvancedFee: '提前发货费用',
            recieveAmount: '应收金额',
            expressFeePayWay: '快递付款方式',
            orderType: '订单类型',
            staffName: '业务员',
            dateGoabroad: '出国时间',
            dateRepaird: '回国时间',
            createTime: '创建时间'
        },
        serialNumber: '订单编号',
        agentName: '部门',
        deptName: '业务员部门',
        orderType: '订单类型',
        staffName: '业务代表',
        timeType: '时间类型',
        startTime: '开始时间',
        endTime: '结束时间',
        search: '查询',
        export: '导出',
        detail: '详情',
        detailInfo: '账单详情',
        detailorderInfo: '订单信息',
        detailpackageType: '套餐类型',
        detailpackageName: '套餐名称',
        detailcustomerName: '客户姓名',
        detailcustomerTel: '客户电话',
        detailoutTime: '出行时间',
        detailoutDay: '出行天数',
        detailexpressFeePayWay: '取货方式',
        detailexpressNumber: '快递单号',
        detailrefundDate: '退款日期',
        detailrefundReason: '退款原因',
        detailimei: 'IMEI',
        detailremark: '备注',
        detailcreateUser: '创建人',
        detailcreateTime: '创建时间',
        detaildeptInfo: '部门信息',
        detailorgName: '机构名称',
        detailarea: '区域仓',
        detailstaffName: '业务员',
        detaildeptName: '部门名称',
        detailfeeInfo: '费用信息',
        detailrent: '租金',
        detailreletRent: '续租租金',
        detailexpressFee: '快递费',
        detailexpressAdvancedFee: '提前发货费用',
        detailbackAmount: '退款金额',
        detailrecieveAmount: '应收金额：',
        all: '全部',
        exportTipSuccess: '已添加—>系統管理—>通知管理—>下载管理'
    },
    /**
     * 赔偿款列表 页面国际化
     * 负责人：chenzhiming
     **/
    v_compensationList: {
        list: {
            serialNumber: '订单编号',
            departmentName: '代理商',
            departmentType: '订单类型',
            payType: '押金支付方式',
            target: '收取目标',
            receivableAmount_damage: '应收赔偿款',
            receivableAmount_delay: '应收滞纳金',
            receivableAmount_other: '应收其他费用',
            receivableAmount: '应收取消违约金',
            receivedleTotalAmount: '应收金额合计',
            receivedAmount_damage: '实收赔偿款',
            receivedAmount_delay: '实收滞纳金',
            receivedAmount_other: '实收其他费用',
            receivedAmount: '实收取消违约金',
            receivedTotalAmount: '实收金额合计',
            difference: '应实收差额',
            delayDay: '延迟天数',
            damageName: '赔偿原因',
            compensatePayType: '赔偿款收取方式',
            settlementUserName_damage: '实收赔偿款人',
            settlementUserName_delay: '实收滞纳金人',
            receiveUserName: '押金收款人',
            imei: 'imei号',
            customerName: '客户姓名',
            customerPhone: '客户电话',
            servicestaffName: '业务员',
            takeType: '取货方式',
            returnWarehouseName: '归还仓',
            transactionId: '支付流水号',
            startDate: '出国时间',
            endDate: '回国时间',
            returnTime: '归还时间',
            settlementDate: '扣款时间',
            createTime: '导入时间',
            createUserName: '导入人',
            remark: '备注'
        },
        serialNumber: '订单编号',
        departmentName: '代理商',
        departmentType: '订单类型',
        payType: '押金支付方式',
        target: '收取目标',
        receivableAmount_damage: '应收赔偿款',
        receivableAmount_delay: '应收滞纳金',
        receivableAmount_other: '应收其他费用',
        receivableAmount: '应收取消违约金',
        receivedleTotalAmount: '应收金额合计',
        receivedAmount_damage: '实收赔偿款',
        receivedAmount_delay: '实收滞纳金',
        receivedAmount_other: '实收其他费用',
        receivedAmount: '实收取消违约金',
        receivedTotalAmount: '实收金额合计',
        difference: '应实收差额',
        delayDay: '延迟天数',
        damageName: '赔偿原因',
        compensatePayType: '赔偿款收取方式',
        settlementUserName_damage: '实收赔偿款人',
        settlementUserName_delay: '实收滞纳金人',
        receiveUserName: '押金收款人',
        imei: 'imei号',
        customerName: '客户姓名',
        customerPhone: '客户电话',
        servicestaffName: '业务员',
        takeType: '取货方式',
        returnWarehouseName: '归还仓',
        transactionId: '支付流水号',
        startDate: '出国时间',
        endDate: '回国时间',
        returnTime: '归还时间',
        settlementDate: '扣款时间',
        createTime: '导入时间',
        createUserName: '导入人',
        remark: '备注',

        departmentId: '部门',
        orderType: '订单类型',
        orgType: '机构类型',
        timeType: '时间类型',
        startTime: '开始时间',
        endTime: '结束时间',
        receivableTotal: '应收总金额合计',
        receivedTotal: '实收总金额合计',
        import: '导入',
        export: '导出',
        downloadTemplate: '下载模版',
        maxLength: '单次导入上限10000条数据',
        all: '全部',
        detail: '详情',
        detailInfo: '详细信息',
        save: '保存',
        query: '查询',
        search: '搜索',
        internetBug: '网络异常'
    },
    /**
     * 临时开通列表 页面国际化
     * 负责人：chenzhiming
     **/
    v_temporaryOpened: {
        list: {
            imei: 'IMEI',
            packageName: '开通套餐',
            openedHours: '开通时长',
            openedTime: '开通时间',
            status: '开通状态',
            creater: '创建人',
            createTime: '创建时间'
        },
        imei: 'IMEI',
        status: '开通状态',
        query: '查询',
        search: '搜索',
        save: '开通',
        add: '临时开通',
        openedHours: '开通时长',
        packageId: '开通套餐',
        imeiPlaceHolder: '请输入IMEI号'
    },
    /**
     * 财务管理 -- 账单列表
     * 负责人：litao
     */
    v_billList: {
        month: '年月',
        deptName: '机构代理',
        rewardStatus: '返点状态',
        rewardAmt: '返点金额',
        staffName: '业务代表',
        department: '部门',
        search: '查询',
        sendMonthBill: '发送月账单',
        batchAudit: '批量审核',
        sendStatus: '发送状态',
        detail: '详情',
        must: '请至少选择一条记录进行操作！',
        all: '全部',
        monthBill: '月账单',
        batchAuditConfirmTip: '确定进行批量审核操作？',
        e_batchSendMonthBillConfirmTip: '确定批量发送所选月账单？',
        rebateAudit: '返点审核',
        editBaseAmout: '修改保底差额',
        receivableAmountDialogTitle: '应收金额明细',
        damageDialogTitle: '赔偿款明细',
        delayAmountDialogTitle: '滞纳金明细',
        otherDialogTitle: '其他费用明细',
        cancelBreachDialogTitle: '取消违约金明细',
        baseAmount: '保底差额',
        monthBillDialogTitle: '月账单',
        remark: '备注',
        save: '保存',

        selectTip: '请选择',

        imei: 'IMEI',
        imeiPlaceholder: '请输入设备号',
        timeSearch: '时间查询',
        orderCode: '订单编号',
        orderCodePlaceHolder: '请输入订单编号',
        staffNamePlaceHolder: '请输入业务员名称',
        startDate: '开始时间',
        startDatePlaceholder: '请输入开始时间',
        endDate: '结束时间',
        endDatePlaceholder: '请输入结束时间',
        customerName: '客户姓名',
        customerNamePlaceholder: '请输入客户姓名',
        customerPhone: '客户电话',
        customerPhonePlaceholder: '请输入客户电话',

        export: '导出',

        dialogDeptName: '机构名称',
        tradeType: '交易额类型',
        rewardType: '返点类型',
        tableNum: '序号',
        tableAmount: '交易额',
        tableRate: '返点比例',
        lastMonthReceive: '上月应收金额',
        lastMonthLowermost: '上月保底差额',
        lastMonthReward: '上月返点金额',
        auditRewardStatus: '审核状态',
        receivableAmount: '本月应收金额',
        lowermostAmount: '本月保底差额',

        sendBillText: '输入收件人',
        send: '发送',
        auditSuccess: '审核通过',
        sendSuccess: '发送成功',

        list: {
            billMonth: '月份',
            departmentName: '代理机构',
            departmentCode: '机构编号',
            receivableAmount: '应收金额',
            lowermostAmount: '保底差额',
            rewardAmount: '返点金额',
            receiveAll: '合计金额',
            damage: '赔偿款',
            delayAmount: '滞纳金',
            otherAmount: '其他费用',
            cancelBreach: '取消违约金',
            totalAmount: '总计金额',
            rewardStatus: '返点状态',
            serviceStaffDeptName: '部门',
            dockingPeopleEmail: '发送邮箱',
            billSendStatus: '账单发送状态',
            serviceStaffName: '业务代表',
            rewardRemark: '返点审核备注',
            lowermostRemark: '保底差额备注'
        },
        audit_status_list: {
            'AuditStatus@audited': '通过',
            'AuditStatus@nopass': '不通过'
        },
        expressPayType: {
            'ExpressPayMode@send': '寄付',
            'ExpressPayMode@noSend': '到付'
        }
    },
    /**
     * 财务管理 -- 账单列表 --   应收金额明细
     * 负责人：litao
     */
    v_receivableAmountList: {
        list: {
            serialNumber: '订单编号',
            departmentName: '机构名称',
            departmentCode: '机构编号',
            receivableAmount: '租金',
            reletAmount: '续租租金',
            refundPrice: '退款金额',
            expressPrice: '快递费',
            expressAdvancePrice: '提前发货费用',
            name: '部门',
            departmentType: '订单类型',
            servicestaffName: '业务员',
            createTime: '创建时间',
            returnDate: '退款时间',
            firstReleDate: '首次续租时间',
            secondReleDate: '二次续租时间',
            thirdReleDate: '三次续租时间'
        }
    },
    /**
     * 财务管理 -- 账单列表 --   赔偿款明细
     * 负责人：litao
     */
    v_compensation: {
        list: {
            serialNumber: '订单编号',
            departmentName: '机构名称',
            code: '机构编码',
            payType: '押金收款方式',
            receivableAmount: '应收赔偿款',
            receivedAmount: '实收赔偿款',
            shouldReceivedAmount: '应实收差额',
            damageName: '赔偿原因',
            createTime: '创建时间',
            returnTime: '归还时间'
        }
    },
    /**
     * 财务管理 -- 账单列表 --   滞纳金明细
     * 负责人：litao
     */
    v_lateFee: {
        list: {
            serialNumber: '订单编号',
            departmentName: '机构名称',
            deptCode: '机构编码',
            payType: '押金收款方式',
            receivableAmount: '应收滞纳金',
            receivedAmount: '实收滞纳金',
            shouldReceive: '应实收差额',
            delayDay: '延期时间',
            createTime: '创建时间',
            returnTime: '归还时间'
        }
    },
    /**
     * 财务管理 -- 账单列表 --   其他费用明细
     * 负责人：litao
     */
    v_otherFee: {
        list: {
            serialNumber: '订单编号',
            departmentName: '机构名称',
            deptCode: '机构编码',
            payType: '押金收款方式',
            receivableAmount: '应收其他费用',
            receivedAmount: '实收其他费用',
            shouldReceive: '应实收差额',
            createTime: '创建时间',
            returnTime: '归还时间'
        }
    },
    /**
     * 财务管理 -- 账单列表 --  取消违约金明细
     * 负责人：litao
     */
    v_cancelDamageFee: {
        list: {
            serialNumber: '订单编号',
            departmentName: '机构名称',
            deptCode: '机构编码',
            payType: '押金收款方式',
            receivableAmount: '应收其他费用',
            receivedAmount: '实收其他费用',
            shouldReceive: '应实收差额',
            createTime: '创建时间',
            returnTime: '归还时间'
        }
    },
    /**
     * 财务管理 -- 账单列表 --  月账单明细
     * 负责人：litao
     */
    v_billDetail: {
        list: {
            serialNumber: '订单编号',
            departmentName: '机构名称',
            departmentCode: '机构编码',
            customerName: '客户姓名',
            customerPhone: '客户电话',
            startDate: '出国时间',
            endDate: '回国时间',
            useDays: '使用天数',
            packageName: '套餐名称',
            packageType: '套餐列表',
            imei: 'IMEI',
            rent: '租金',
            reletRent: '续租租金',
            refund: '退款金额',
            express: '快递费',
            deliverAdvance: '提前发货费用',
            shouldReceive: '应收金额',
            damage: '赔偿款',
            delayAmount: '滞纳金',
            otherAmount: '其他费用',
            damageName: '应收赔偿款原因',
            delayDay: '逾期天数',
            serviceStaffName: '业务员',
            serviceStaffDeptName: '部门名称',
            createTime: '创建时间',
            returnTime: '归还时间',
            areaName: '区域',
            expressPayType: '邮寄方式',
            takeType: '取货方式',
            remark: '备注'
        }
    },
    /**
     * 财务管理 -- 结账
     * 负责人：litao
     */
    v_checkout: {
        month: '年月',
        selectMonth: '选择账单月份',
        search: '查询',
        checkout: '结账',
        detail: '详情',
        antiSettlement: '反结账',
        createCheckout: '生成账单',
        operateSuccess: '账单已生成',
        operateFail: '该月账单已经生成不能再次生成',
        createCheckoutTip: '本月只能生成之前月份的账单！',
        antiSettlementTip: '确定进行反结账操作？',
        antiSettlementSuccess: '反结账成功！',
        list: {
            month: '年月',
            settlementDate: '结账时间',
            antiSettlementDate: '反结账时间',
            userName: '结账人',
            updateUserName: '反结账人'
        }
    },
    /**
     * 企业账户押金 页面国际化
     * 负责人：huangchao
     **/
    v_companyAccountDeposit: {
        list: {
            agentName: '机构名称',
            agentCode: '机构编码',
            totalCharge: '累计充值金额',
            usedAmount: '使用金额',
            deductAmount: '扣款金额',
            extractedAmount: '提取金额',
            auditingAmount: '待审核金额',
            balance: '可用余额'
        },
        export: '导出',
        query: '查询',
        recharge: '充值',
        payRecordExport: '充值记录导出',
        withdrawExport: '提取记录导出',
        rechargeMechanism: '充值机构',
        rechargeSum: '充值金额',
        addRechargeSum: '累计充值金额',
        paymentMode: '支付方式',
        paymentModeList: { 'FinancialPay@wx': '微信', 'FinancialPay@alipay': '支付宝', 'FinancialPay@account': '对公账户' },
        extractTypeList: { 'BusinessAccountExtract@alipay': '支付宝', 'BusinessAccountExtract@ccb': '建行' },
        pay: '支付',
        paySuccess: '充值成功',
        saveSuccessfully: '保存成功',
        widthDrawSuccessfully: '提取成功',
        saveFailed: '保存成立',
        payFailed: '充值失败',
        rechargeStartTime: '充值开始时间',
        rechargeEndTime: '充值结束时间',
        checkStatus: '审核状态',
        debitSum: '扣款金额',
        debitStartTime: '扣款开始时间',
        debitEndTime: '扣款结束时间',
        IMEI: 'IMEI',
        orderCode: '订单编号',
        widthdrawalAmount: '提取金额',
        widthdrawalStartTime: '提取开始时间',
        widthdrawalEndTime: '提取结束时间',
        waitForCheck: '待审核金额',
        rechargeAgent: '充值机构',
        widthdrawalBalance: '提取余额',
        availableBalance: '可用余额',
        availableBalanceHeader: '可用余额',
        useAmount: '使用金额',
        widthdrawalAmountLabel: '提取金额',
        widthdrawalAmountMode: '提取方式',
        occurrenceStartTime: '发生开始时间',
        occurrenceEndTime: '发生结束时间',
        orderProgress: '订单进度',
        auditStatus: { 'AuditStatus@waitAudited': '待审核', 'AuditStatus@audited': '通过', 'AuditStatus@nopass': '不通过' },
        depositReturnStatus: '押金返还状态',
        payAccount: '支付账户',
        payAmountNum: '支付金额',
        constructorAccount: '建行账户',
        constructorAccountNum: '建行账号',
        agency: '机构代理',
        rechargeNumFloatCheck: '充值金额输入格式有误',
        widthDrawlNumFloatCheck: '提取金额输入格式有误',
        widthDrawlNumNotZero: '提取金额必须大于0',
        checkAvaliableWithdralNum: '提取金额不能大于可用余额',
        chargeSumCheck: '充值金额必须大于0',
        dateTimeCheck: '结束时间不能早于开始时间',
        agencyCode: '机构编码',
        checkPendingSum: '待审核金额',
        detail: '详情',
        enteerWidthDrawSum: '请输入提取金额',
        enterAgencyCode: '请输入机构编码',
        enterRechargeNum: '请输入充值金额',
        selectStartTime: '请选择开始时间',
        selectEndTime: '请选择结束时间',
        enterImeiCode: '请输入IMEI号',
        enterOrderCode: '请输入订单编号',
        enterRemarkInfo: '请输入备注信息...',
        paymentMethod: '支付方式',
        remarks: '备注',
        save: '保存',
        startTime: '开始时间',
        endTime: '结束时间',
        agencyName: '机构名称:'
    },
    /**
     * 企业账户押金————累计充值金额详情表格 页面国际化
     * 负责人：huangchao
     **/
    v_cadAddSum: {
        list: {
            agentName: '机构名称',
            amount: '充值金额',
            payType: '支付方式',
            transactionId: '支付流水号',
            createDate: '充值时间',
            auditStatus: '审核状态',
            auditUserName: '审核人',
            auditDate: '审核时间',
            auditReason: '审核意见'
        }
    },
    /**
     * 企业账户押金————使用金额详情表格 页面国际化
     * 负责人：huangchao
     **/
    v_cadUsedAmount: {
        list: {
            orderSerialNumber: '订单编号',
            imei: 'IMEI',
            depositAmount: '押金金额',
            orderProgress: '订单进度',
            takeType: '取货方式',
            createUserName: '创建人',
            returnStatus: '押金返还状态',
            usedAmount: '使用金额',
            returnAmount: '返还金额',
            createDate: '发生时间'
        }
    },

    /**
     * 企业账户押金————扣款金额详情表格 页面国际化
     * 负责人：huangchao
     **/
    v_cadDebitSum: {
        list: {
            orderSerialNumber: '订单编号',
            imei: 'IMEI',
            amount: '发生金额',
            deductType: '赔偿类型',
            deductReason: '原因',
            createDate: '发生时间'
        }
    },
    /**
     * 企业账户押金————提取金额详情表格 页面国际化
     * 负责人：huangchao
     **/
    v_cadExtractedAmount: {
        list: {
            agentName: '机构名称',
            amount: '提取金额',
            extractType: '提取方式',
            extractAccount: '支付账号',
            extractUserName: '提取人',
            createDate: '提取时间',
            remark: '备注'
        }
    },
    /**
     * 企业账户押金————待审核金额详情表格 页面国际化
     * 负责人：huangchao
     **/
    v_cadCheckPendingSum: {
        list: {
            amount: '充值金额',
            payType: '充值支付方式',
            createDate: '充值时间',
            auditStatus: '审核状态',
            auditReason: '审核意见'
        },
        commonAccount: '对共账户',
        passYes: '通过',
        passNo: '不通过',
        passCheck: '待审核'
    },
    /**
     * 企业账户押金————可用金额详情表格 页面国际化
     * 负责人：huangchao
     **/
    v_cadAvailableBalanceSum: {
        list: {
            createDate: '发生时间',
            content: '发生内容',
            receipts: '收入金额',
            payments: '支出金额',
            balance: '可用余额'
        }
    },
    /**
     * 资金账户管理 页面国际化
     * 负责人：lihuan
     **/
    v_fundAccountManagement: {
        list: {
            agentName: '机构名称',
            code: '机构编码',
            deptName: '部门',
            representative: '业务代表',
            deviceDeposit: '存货押金',
            monthlyDeposit: '包月押金',
            preDeposit: '保证金'

        },
        agency: '机构代理',
        agencyCode: '机构编码',
        businessAgent: '业务代表',
        departmentName: '部门名称',
        totalInventoryMargin: '存货押金总额',
        monthlyDeposit: '包月押金总额',
        bond: '保证金',
        inventoryMarginRecord: '存货押金操作记录',
        monthlyDepositRecord: '包月押金操作记录',
        bondRecord: '保证金操作记录',
        rechargeDeposit: '充值押金',
        withdrawDeposit: '提取押金',
        createAccount: '创建账户',
        selectAccountType: '选择账户类型',
        selectInventoryMargin: '存货押金',
        selectMonthly: '包月押金',
        selectBond: '保证金',
        inventoryMarginName: '存货押金',
        monthlyName: '包月押金',
        paymentMethod: '支付方式',
        arrivalTime: '到账时间',
        serialNumber: '流水号',
        remarks: '备注',
        save: '保存',
        timeSearch: '时间查询',
        startTime: '开始时间',
        endTime: '结束时间',
        agencyName: '机构名称',
        export: '导出',
        query: '查询',
        recharge: '充值',
        withdraw: '提取',
        cerate: '创建',
        all: '全部',
        addSuccess: '新增成功',
        rechargeSuccess: '充值成功',
        withdrawSuccess: '提取成功',
        tips: '请同时选择时间查询与开始时间与结束时间',
        prompt: '提示',
        internetBug: '网络异常',
        tipsInput: '* 字符有误，请输入数字',
        pTips: '请输入金额'
    },
    /**
     * 资金账户管理————详情表格 页面国际化
     * 负责人：lihuan
     **/
    v_fundAccountDetail: {
        list: {
            createDate: '发生时间',
            admoun: '修改金额',
            updateDate: '变更时间',
            operatType: '操作类型',
            userName: '修改人',
            payType: '支付方式',
            paySerialNumber: '支付流水号',
            remark: '备注'
        }
    },
    /**
     * 订单详情
     * 负责人：fengcheng
     **/
    v_orderDetail: {
        detail: '订单详情',
        basic: '基本信息',
        receive: '收款信息',
        deliver: '发货信息',
        return: '归还信息',
        settlement: '结算信息',
        relet: '续租信息',
        cancel: '取消信息',
        refund: '退款信息',
        serialNumber: '订单编号',
        orderLabel: '订单标签',
        orderProgress: '订单进度',
        customerName: '客户姓名',
        customerPhone: '客户手机',
        packageName: '套餐名称',
        packageType: '套餐类型',
        areaName: '出行国家',
        useDays: '出行时间',
        orderType: '订单类型',
        departmentName: '网点名称',
        agencyName: '代理商名称',
        storeName: '店铺名称',
        captcha: '验证码',
        msg: '是否发送了短信',
        createUserName: '创建人',
        createTime: '创建时间',
        remark: '备注',
        yes: '是',
        no: '否',
        otaOrderId: 'OTA订单号',
        number: '序号',
        feeType: '类目',
        receivableAmount0: '应收金额',
        receivedAmount: '实收金额',
        payType: '收款方式',
        receiveUserName: '收款人',
        sendPayDate: '收款时间',
        orderSN: '支付流水号',
        payProgress: '支付进度',
        attachment: '附件',
        attachmentName: '附件名称',
        imeiPositionName: '设备仓位',
        takeType: '预计取货方式',
        expressProbablyDate: '预计发货日期',
        deliverDate: '实际发货时间',
        isExpressAdvance: '是否提前发货',
        advanceDeliverDate: '提前发货日期',
        expressAddress: '收货地址',
        expressCode: '快递单号',
        deliverUserName: '发货人',
        endDate: '回国日期',
        returnTime: '归还时间',
        delayDay: '延期天数',
        delayAmount: '应收滞纳金',
        returnType: '赔偿类型',
        damageAmount: '应收赔偿金',
        returnUserName: '归还人',
        returnWarehouseName: '归还仓',
        returnExpressCode: '寄回快递单号',
        settlementPayType: '结算方式',
        settlementUserName: '结算人',
        settlementDate: '结算时间',
        reletPackageName: '续租套餐',
        reletStartDate: '续租开始时间',
        reletEndDate: '续租结束时间',
        reletDay: '续租天数',
        receivableAmount: '续租金额',
        reletUserName: '续租人',
        reletOtaOrderId: '续租OTA订单号',
        relet_createTime: '操作时间',
        operationUserName: '操作人',
        operationDate: '操作时间',
        cancelStatus: '退订状态',
        cancel_remark: '操作描述',
        info: '详情',
        damageName: '赔偿原因',
        damagePrice: '赔偿金额',
        refundStatus: '退款状态',
        refund_refundDays: '实际退款天数',
        refund_refundPrice: '退款金额',
        day: '天',
        to: '至',
        deliver_areaName: '区域仓',
        shouldReceiveOther: '其他金额',
        receivableOtherReason: '其他金额原因',
        // deliver_area : "网点",
        // expectTakePointName : "机柜",

        expeactDeliver_areaName: '预计区域仓',
        actualDeliver_areaName: '实际区域仓',
        expectTakePointName: '预计取货网点',
        actualTakePointName: '实际取货网点',
        expectTakeCabinetName: '预计取货机柜',
        actualTakeCabinetName: '实际取货机柜',
        null: '无',
        updateTime: '更新时间'
    },
    /***
     * Created By zhengyongsheng on 2017/06/09
     * 客服管理 客服360
     */
    v_customer_service360: {
        list: {
            serialNumber: '订单编号',
            orderProgress: '订单进度',
            orderLabelList: '标签',
            customerName: '客户姓名',
            customerPhone: '客户电话',
            startDate: '出国时间',
            endDate: '回国时间',
            imei: 'IMEI',
            packageName: '套餐名称',
            name: '代理商',
            servicestaffName: '业务员',
            createTime: '创建时间',
            deliverDate: '发货时间',
            returnTime: '归还时间'
        },
        serialNumber: '订单编号',
        customerName: '客户姓名',
        customerPhone: '客户电话',
        imei: 'IMEI',
        search: '查询',
        deviceSearch: '设备查询',
        distribution: '分配'
    },
    /***
     * Created By yankang on 2017/06/12
     * home
     */
    v_homePage: {
        confirm: '确定',
        orderReturn: '待归还',
        orderReturnDelay: '逾期未归还',
        orderReturnDelayT: '逾期七天未归还',
        fast_enter: '快捷入口',
        task_panel: '任务面板',
        create_order: '订单创建',
        create_agency: '代理订单创建',
        create_point: '网点订单创建',
        create_retailers: '电商订单创建',
        organization: '组织构架',
        create_agent: '机构代理创建',
        create_staff: '员工创建',
        inventory: '库存操作',
        inWarehouse: '入库',
        allot: '调拨',
        borrow: '借用',
        outWarehouse: '退库',
        receivable: '待收款',
        deposit_agency: '押金待收款',
        rent_agency: '租金待收款',
        xiecheng_agency: '携程待收款',
        deliver: '待发货',
        point: '网点待发货',
        xiecheng: '携程待发货',
        ctripPoint: '携程网点待发货',
        theday: '当日发货',
        overdue: '逾期未发货',
        order_settlement: '待结算',
        xiecheng_pending_settlement: '携程待结算',
        tipsMsgIsDelivery: '订单验证发货失败',
        imeiRepeat: 'IMEI重复',
        imeiCheckFail: 'IMEI验证失败',
        expressCodeNotEmpty: '快递单号不能为空',
        pleaseSelectDeliveryOrder: '请勾选需发货的订单',
        return_btn: '归还',
        order_search: '订单搜索',
        notice_list: '通知列表',
        allotAudit: '调拨待审核',
        agentAudit: '机构待审核',
        refundsAudit: '退款待审核',
        pendingAudit: '待审核',
        check: '查看'
    },
    /*v_orderSearch*/
    v_orderSearch: {
        list: {
            serialNumber: '订单编号',
            customerName: '客户姓名',
            customerPhone: '客户电话',
            startDate: '出国日期',
            endDate: '回国日期',
            imei: '设备号',
            packageName: '套餐名称',
            orderProgress: '订单进度'
        },
        searchResultList: '搜索结果列表',
        implement: '执行',
        batchExecute: '批量执行',
        sameOrderList: '请选择订单进度一致的订单开始操作'
    },
    /*v_orderWaitReceive*/
    v_orderWaitReceive: {
        list: {
            serialNumber: '订单编号',
            orderProgress: '订单进度',
            departmentType: '订单类型',
            orderLabel: '订单标签',
            departmentName: '部门'
        },
        searchResultList: '搜索结果列表',
        implement: '执行',
        batchExecute: '批量执行',
        sameOrderList: '请选择订单进度一致的订单开始操作'
    },
    /***
     * Created By yankang on 2017/06/13
     * 待发货弹窗功能组件
     */
    v_delivery: {
        list: {
            serialNumber: '订单编号',
            customerName: '客户姓名',
            customerPhone: '客户电话',
            orderProgress: '订单进度',
            takeType: '取货方式',
            actualTakePointName: '取货信息',
            areaName: '发货信息',
            expressAddress: '收货地址',
            expressProbablyDate: '预计发货日期',
            overdue: '逾期天数',
            imei: 'IMEI',
            expressCode: '快递单号'
        },
        query: '查询',
        imeiNoempty: '待发货IMEI不能为空',
        serialNumber: '订单编号',
        customerName: '客户姓名',
        customerPhone: '客户电话',
        SFPrint: '顺丰打印'
    },
    /***
     * Created By yankang on 2017/06/13
     * 待发货弹窗功能组件(list带快递单号)
     */
    v_deliveryExpress: {
        list: {
            serialNumber: '订单编号',
            customerName: '客户姓名',
            customerPhone: '客户电话',
            orderProgress: '订单进度',
            takeType: '取货方式',
            actualTakePointName: '取货信息',
            imei: 'IMEI',
            expressCode: '快递单号'
        },
        query: '查询',
        imeiNoempty: '待发货IMEI不能为空',
        serialNumber: '订单编号',
        customerName: '客户姓名',
        customerPhone: '客户电话',
        SFPrint: '顺丰打印'
    },
    /***
     * 下单限制 页面国际化
     * 负责人:lihuan
     */
    v_orderLimit: {
        list: {
            limitTakeType: '取货方式',
            limitTimeType: '限制时间类型',
            limitBeginTime: '限制开始日期',
            limitEndTime: '限制结束日期',
            limitIncludePackageNames: '限制套餐',
            limitExcludePackageNames: '排除套餐',
            limitExcludeAgentCodes: '排除机构',
            limitIncludePointCodes: '限制仓位',
            limitExcludePointCodes: '排除仓位',
            limitAdvanceDay: '网点最晚下单天数',
            createTime: '创建时间',
            createUser: '创建人',
            updateTime: '最新更新时间',
            updateUserName: '更新人',
            status: '数据状态'
        },
        pickupMode: '取货方式',
        isValid: '是否有效',
        create: '创建',
        emit: '编辑',
        query: '查询',
        save: '保存',
        dotRack: '网点/机柜',
        express: '快递',
        limitedTimeType: '限制时间类型',
        limitStartDate: '限制开始日期',
        limitEndDate: '限制结束日期',
        limitedPackage: '限制套餐',
        excludePackages: '排除套餐',
        limitPickupDot: '限制取货网点',
        excludePickupDot: '排除取货网点',
        eliminationMechanismCode: '排除机构编码',
        latestDaysBeforeOutlets: '网点最晚提前天数',
        orderTime: '下单时间',
        abroadTime: '出国时间',
        all: '全部',
        confirm: '确定',
        createOrderLimit: '创建下单限制',
        editOrderLimit: '编辑下单限制',
        pleaseLimitedPackage: '请选择限制套餐',
        pleaseExcludePackages: '请选择排除套餐',
        pleaseLimitPickupDot: '请选择限制取货网点',
        pleaseExcludePickupDot: '请选择排除取货网点',
        pleaseEliminationMechanismCode: '请选择排除机构编码',
        limitedTitle: '限制套餐',
        excludeTitle: '排除套餐',
        limitPickupDotTitle: '限制取货网点',
        excludePickupDotTitle: '排除取货网点',
        eliminationMechanismCodeTitle: '排除机构编码',
        dataStatus: '数据状态',
        select_wareHouse: {
            'SupportOrderType@pointCabinet': '网点/机柜',
            'SupportOrderType@deliver': '快递'
        },
        select_returnData: {
            'Common@valid': '有效',
            'Common@invalid': '无效'
        },
        select_timeType: {
            'orderTime': '下单时间',
            'abroadTime': '出国时间'
        }

    },
    // 首页消息
    v_homeMessage: {
        message_notification: '消息通知',
        notice_list: '通知列表',
        notice: '通知',
        no_message: '暂无未读消息'
    },
    v_404: {
        sorry: 'Sorry...',
        lost: '您迷路啦...',
        noExistent: '您访问的网页不存在',
        returnHome: '返回首页'
    },
    v_serverException: {
        sorry: 'Sorry...',
        lost: '服务器异常...',
        noExistent: '由于某些原因导致功能异常，请稍后重试',
        returnHome: '返回首页'
    },
    v_networkTimeout: {
        sorry: 'Sorry...',
        lost: '你的电脑没有连接到互联网...',
        noExistent: '无法显示此页面，请检查网络连接',
        returnHome: '返回首页'
    },
    v_withoutPermission: {
        sorry: 'Sorry...',
        lost: '你无权访问此链接...',
        noExistent: '你访问的网页有权限设置',
        returnHome: '返回上个页面'
    },
    v_withoutAllPermission: {
        sorry: 'Sorry...',
        lost: '你无任何权限...',
        noExistent: '请使用其它用户登录或联系管理员',
        returnHome: '返回登录页'
    },
    v_searchBar: {
        tips: '请输入IMEI号或客户电话或订单编号'
    },
    v_taobaoAuthorizeApi: {
        authorize: '授权',
        getDetailFullInfo: '获取详情FullInfo',
        getDetailQuery: '获取详情Query'
    },
    v_taobaoAuthorize: {
        list: {
            taobaoUserId: '店铺名称',
            appkey: '应用AppKey',
            secret: '应用secret',
            accessToken: '授权令牌',
            refreshToken: '刷新授权令牌',
            depositNumIid: '押金的商品号',
            orderNumIids: '对接商品号',
            authorizeOwerType: '所属类型',
            authorizeOwerName: '所属名称',
            isElectricity: '是否是电商部',
            expireTime: '过期时间',
            createUserName: '创建人'
        },
        add: '新增',
        edit: '编辑',
        search: '查询',
        detail: '详情',
        save: '保存',
        department: '所属部门',
        success: '保存成功',
        failed: '保存失败',
        authorize: '授权',
        getDetailFullInfo: '获取详情FullInfo',
        getDetailQuery: '获取详情Query',
        canel: '取消',
        createUserName: '创建人'
    },
    v_taobaoDeposit: {
        list: {
            depositOidStr: '押金子订单ID',
            buyerNick: '买家昵称',
            num: '数字',
            price: '押金金额',
            depositCreated: '押金创建时间',
            wifiOidStr: '匹配的WiFi子订单ID',
            useNum: '匹配的WIFI数量',
            sellerNick: '店铺',
            alipayNo: '支付宝交易号',
            dataStatus: '数据状态',
            errorInfo: '错误信息'
        },
        search: '查询',
        detail: '详情',
        set: '设置WIFI子订单ID不为空',
        dataStatus: '数据状态',
        depositOid: '押金子订单ID',
        buyerNick: '买家昵称',
        wifiOid: '匹配的子订单ID',
        all: '全部',
        select_status: {
            'Common@valid': '有效',
            'Common@invalid': '无效'
        }
    },
    v_taobaoMatch: {
        list: {
            oidStr: 'WIFI或押金子订单ID',
            num: '数量',
            buyerNick: '买家昵称',
            sellerNick: '店铺',
            useNum: '已匹配数量',
            created: '押金创建时间',
            wifiDeposit: '订单类型'
        },
        search: '查询',
        detail: '详情',
        oid: 'WIFI或押金子订单ID',
        buyerNick: '买家昵称',
        sellerNick: '店铺'
    },
    v_taobaoOrder: {
        list: {
            oidStr: '淘宝订单号',
            buyerNick: '买家昵称',
            payment: '金额',
            sellerNick: '店铺',
            type: '类型'
        },
        search: '查询',
        detail: '详情',
        oid: '淘宝订单号',
        buyerNick: '买家昵称',
        type: '淘宝对接',
        set: '添加到待处理队列',
        tips: '确定要添加到待处理队列吗？',
        failed: '设置错误'
    },
    v_taobaoOrderHistory: {
        list: {
            tidStr: '淘宝订单号',
            buyerNick: '买家昵称',
            payment: '金额',
            createTime: '创建时间',
            sellerNick: '店铺',
            status: '错误状态',
            remark: '说明'
        },
        search: '查询',
        detail: '详情',
        set: '设为待处理订单',
        tid: '淘宝订单号',
        buyerNick: '买家昵称',
        status: '错误状态',
        tips: '确定设为待处理订单吗？',
        failed: '设置出错！',
        all: '全部',
        select_status: {
            'Common@valid': '有效',
            'Common@invalid': '无效'
        }
    },
    v_taobaoOrderMatch: {
        list: {
            wifiIdStr: '淘宝WiFi ID',
            depositIdStr: '淘宝押金ID',
            serialNumber: '订单ID',
            buyerNick: '买家昵称',
            sellerNick: '店铺',
            depositCreated: '押金创建时间',
            wifiCreated: 'WiFi创建时间'
        },
        search: '查询',
        detail: '详情',
        orderId: '订单ID',
        buyerNick: '买家昵称',
        sellerNick: '店铺',
        wifiId: '淘宝WiFiID',
        depositId: '淘宝押金ID'
    },
    v_taobaoWifi: {
        list: {
            wifiOidStr: 'WiFi子订单ID',
            hireStartDate: '出行日期',
            hireEndDate: '返程日期',
            hireNumber: '购买数量',
            outerSkuId: '商品编码',
            totalFee: '商品金额',
            payment: '实付金额',
            buyerNick: '买家昵称',
            contactName: '联系人',
            contactMobile: '联系人电话',
            obtainType: '获取方式',
            obtainProvince: '收件省',
            obtainCity: '收件城市',
            obtainPosition: '取件区域',
            obtainAddress: '取件地址',
            buyerMemo: '买家备注',
            wifiCreated: 'WIFI创建时间',
            wifiSuccessTime: 'WIFI成功时间',
            departmentCode: '部门编码',
            isCreatedOmsOrder: '已创建OMS订单',
            isUseDeposit: '是否匹配押金',
            useNum: '匹配押金数量',
            travelConfirm: '是否发货',
            wifiNonDepo: '是否信用免押金',
            sellerNick: '店铺',
            alipayNo: '支付宝交易号',
            dataStatus: '数据状态',
            errorInfo: '订单异常信息'
        },
        search: '查询',
        detail: '详情',
        wifiOid: 'WiFi子订单ID',
        outerskuId: '商品编码',
        buyerNick: '买家昵称',
        contactMobile: '联系人电话',
        sellerNick: '店铺',
        isCreateOmsOrder: '创建OMS订单',
        travelConfirm: '是否发货',
        dataStatus: '数据状态',
        all: '全部',
        select_status: {
            'Common@valid': '有效',
            'Common@invalid': '无效'
        },
        select_createOmsOrder: {
            'false': '否',
            'true': '是'
        },
        obtainType: {
            '0': '快递',
            '1': '自取'
        }
    },
    v_taobaoErrorOrder: {
        list: {
            tidStr: '淘宝订单号',
            buyerNick: '买家昵称',
            payment: '金额',
            createTime: '创建时间',
            sellerNick: '店铺',
            errorInfo: '错误信息'
        },
        tid: '淘宝订单号',
        buyerNick: '买家昵称',
        search: '查询',
        detail: '详情'
    },
    /* 通知管理 下载 wanglehui */
    v_download: {
        list: {
            fileName: '文件名称',
            fileCreateTime: '创建日期'
        },
        download: '下载',
        nodataTip: '当前无下载项'
    },
    /**
     * 邮件模板 页面国际化
     * 负责人：liMingHua
     **/
    v_mailTemplate: {
        list: {
            'code': '模版编码',
            'type': '模版类型',
            'title': '邮件标题',
            'langtype': '模板语言',
            'status': '状态',
            'createtime': '创建时间',
            'updatetime': '更新时间',
            'createuser': '创建人',
            'updateuser': '更新人',
            'remark': '备注',
        },
        all:'全部',
        pleaseChose:'请选择',
        add: "新增",
        search: "查询",
        detail: '详情',
        edit: '编辑',
        del: '删除',
        editSuccess: "编辑成功",
        editFailed: "编辑失败",
        delConfirm:'真的要删除这条数据吗？',
        delSuccess: "删除成功",
        delFailed: "删除失败",
        addSuccess: "新增成功",
        addFailed: "新增失败",
        status: "状态",
        langType: "语言",
        remark:'备注',
        pleaseInput:'请输入模板内容',
        title: "邮件标题",
        code: "模版编码",
        name: "模版名称",
        type: "模版类型",
        content: "邮件正文",
        preview:"预览",
        pleaseInputTitle:"请输入标题"
    },
    /**
     * 邮件日志 页面国际化
     * 负责人：liMingHua
     **/
    v_mailLog: {
        list: {
            'receiver': '收件邮箱',
            'templatecode': '邮件模板类型',
            'status': '发送状态',
            'createtime': '发送时间',
            'updatetime': '重发时间',
        },
        all:'全部',
        search: "查询",
        detail: '详情',
        del: '删除',
        sendAgain:"重新发送",
        isOk: "确定要重发这条邮件么",
        createTime: "发送时间",
        resendTime:"重发时间",
        receiver: "收件邮箱",
        status: "发送状态",
        title:"邮件标题",
        content:"邮件正文",
        tempType:"模板类型",
        state:"状态",
        sendSuccess: "重发成功",
        sendFailed: "重发失败",
        changeCondition:'请先补全查询条件（发送时间），才能查询列表信息',
        status_type:{
            "1": "成功",
            "0": "失败"
        }
    },

};
module.exports = lan;

