/**
 * Created by yankang on 2017/07/06.
 */
const lan = {
    page_title: {
        404: 'Page does not exist',
        common: 'The backstage management system of Roamingman',
        components: 'Dynamic components library',
        index: 'Homepage',
        login: 'Login Page',
        test: 'Test Page',
        ui: 'UI Template Page',
        home: 'Homepage',
        homePage: 'Homepage',
        dictionary: 'Data Dictionary Mgmt.',
        systemParamConf: 'Parameter Mgmt.',
        damages: 'Compensation Mgmt.',
        notice: 'Message Mgmt.',
        menuManager: 'Menu Mgmt.',
        departmentManagement: 'Department Mgmt.',
        smsManagement: 'SMS Message Mgmt.',
        smssendLog: 'SMS Message Log',
        smsTemplate: 'SMS Message Template'
    },
    component: {
        tips: {
            title: 'Tips',
            ok: 'Confirm',
            close: 'Cancel'
        },
        table: {
            jump: '跳转',
            ok: '确定',
            reset: '重置默认',
            page: '页数据',
            record: '条记录，',
            operate: '操作',
            setCol: '设置自定义列',
            selectAll: '全选',
            pages: '页码',
            ascending: '升序',
            detail: 'Details',
            search: '查询条件',
            tableList: '信息列表',
            tips: '提示',
            nulls: '无',
            advanceSearch: '高级查询',
            descending: '降序',
            searchList: '自定义选项'
        },
        input: {
            password: '请输入密码',
            mustSelect: '至少选择一项！',
            imei: '请输入IMEI',
            email: '请输入邮箱',
            user: '请输入用户名',
            port: '请输入身份证号',
            mailNumber: '请输入邮编',
            qq: '请输入QQ号',
            int: '请输入整数',
            desc: '请输入描述',
            page: '页码',
            point: '位',
            msPoint: '输入内容必须是',
            minLength: '输入内容的长度必须大于',
            maxLength: '输入内容的长度必须小于',
            betweenLength: '输入内容的长度在',
            between: '之间',
            notEmpty: '所填项不能为空',
            error: '校验类型出错',
            nullError: '校验为空',
            isLegitimateStr: '输入的内容不能包含特殊字符',
            hasSpace: '输入的内容不能包含空格',
            isNegativePoint: '请输入浮的浮点数',
            isPositvePoint: '请输入正的浮点数',
            isMailNumber: '请输入正确的邮编',
            isIP: '请输入正确的IP地址',
            isIMEI: '请输入正确的IMEI',
            isDeliveryIMEI: '请输入有效的IMEI',
            isQQ: '请输入正确的QQ号',
            isPort: '请输入正确的身份证号',
            isPhone: '请输入正确的电话号码',
            isNumber: '请输入正确的数值',
            isMail: '请输入正确的邮箱号码',
            success: '校验成功'
        },
        editor: {
            lanPackage: {
                bold: '粗体',
                underline: '下划线',
                italic: '斜体',
                forecolor: '文字颜色',
                bgcolor: '背景色',
                strikethrough: '删除线',
                eraser: '清空格式',
                source: '源码',
                quote: '引用',
                fontfamily: '字体',
                fontsize: '字号',
                head: '标题',
                orderlist: '有序列表',
                unorderlist: '无序列表',
                alignleft: '左对齐',
                aligncenter: '居中',
                alignright: '右对齐',
                link: '链接',
                text: '文本',
                submit: '提交',
                cancel: '取消',
                unlink: '取消链接',
                table: '表格',
                emotion: '表情',
                img: '图片',
                video: '视频',
                width: '宽',
                height: '高',
                location: '位置',
                loading: '加载中',
                searchlocation: '搜索位置',
                dynamicMap: '动态地图',
                clearLocation: '清除位置',
                langDynamicOneLocation: '动态地图只能显示一个位置',
                insertcode: '插入代码',
                undo: '撤销',
                redo: '重复',
                fullscreen: '全屏',
                openLink: '打开链接'
            },
            placeholder: '请输入内容...'
        },
        header: {
            currentLanguage: '简体中文',
            editPwd: '修改密码',
            loginOut: '退出',
            oldPwd: '旧密码',
            newPwd: '新密码',
            edit: '修改',
            confirmNewPwd: '确认新密码',
            repassword: '确认密码与新密码不一致',
            confirmPWD: '请确认新旧密码是否全部输入',
            editSuccess: '修改成功',
            editFailed: '修改失败',
            oldPwdError: '旧密码错误'
        },
        select: {
            all: 'All'
        },
        tableDetail: {
            detail: 'Details',
            save: 'Save'
        }
    },
    v_login: {
        titleM: 'Management platform',
        titleA: 'Account login',
        userBox: 'Account login',
        loginBtn: 'Login ',
        msgLoginFailed: 'Login Failed.',
        rememberPwd: 'Remember password',
        copyright: 'Ucloudlink copyright ? 2017 All Rights Reserved',
        icp: 'Guangdong ICP No.14087725-4'
    },
    v_homeOrderReturn: {
        list: {
            serialNumber: 'Order no.',
            customerName: 'Customer',
            customerPhone: 'Customer phone no.',
            imei: 'IMEI',
            endDate: 'Return date',
            overDay: 'Extension days',
            orderProgress: 'Order progress'
        },
        title: 'To be returned list',
        titleDelayT: 'Unreturned in 10 days overdue',
        titleDelay: 'Unreturned after due days',
        search: 'Query',
        IMEI: 'IMEI',
        customerName: 'Customer',
        customerPhone: 'Customer phone no.',
        serialNumber: 'Order no.',
        batchReturn: 'Batch return',
        back: 'Return'
    },
    v_systemParamConf: {
        list: {
            code: 'Parameters code',
            name: 'Parameters name',
            data: 'Parameters value',
            remark: 'Notes',
            status: 'Status',
            mvnoCode: 'MVNO',
            createTime: 'Creation time',
            updateTime: 'Update time'
        },
        all: 'All',
        yes: 'Yes',
        no: 'No',
        effective: 'Valid',
        invalid: 'Invalid',
        code: 'Parameters code',
        name: 'Parameters name',
        data: 'Parameters value',
        mvnoCode: 'MVNO',
        createTime: 'Creation time',
        updateTime: 'Update time',
        search: 'Query',
        detail: 'Details',
        edit: 'Edit',
        add: 'Add',
        del: 'Delete',
        editSuccess: 'Edited',
        editFailed: 'Edit failed',
        delSuccess: 'Deleted',
        delFailed: 'Deletion failed',
        addSuccess: 'Added',
        addFailed: 'Add failed',
        delConfirm: 'Are you sure you want to delete this record?',
        status: 'Status',
        status_type: {
            '': 'All',
            'Common@valid': 'Valid',
            'Common@invalid': 'Invalid'
        }
    },
    v_dictionary: {
        list: {
            type: 'Dictionary type',
            key: 'Dictionary code',
            langType: 'Language',
            value: 'Dictionary value',
            status: 'Status',
            description: 'Description',
            createTime: 'Creation time'
        },
        all: 'All',
        type: 'Dictionary type',
        key: 'Dictionary code',
        value: 'Dictionary value',
        effective: 'Valid',
        invalid: 'Invalid',
        description: 'Dictionary description',
        langType: 'Language type',
        status: 'Status',
        search: 'Query',
        detail: 'Details',
        edit: 'Edit',
        editSuccess: 'Dictionary value edited',
        editFailed: 'Failed to edit dictionary value',
        add: 'Add',
        addSuccess: 'Dictionary value added',
        addFailed: 'Failed to add dictionary value',
        del: 'Delete',
        delConfirm: 'Are you sure you want to delete this record?',
        delSuccess: 'Dictionary value deleted',
        delFailed: 'Failed to delete dictionary value'
    },
    v_groupAccount: {
        list: {
            groupName: 'Group account',
            partnerCode: 'Group account code',
            userCodeSuffix: 'Sub-account rule',
            isDefault: 'Set default?',
            mvnoCode: 'MVNO',
            status: 'Data state',
            createUserName: 'Creator',
            createTime: 'Creation time'
        },
        yes: 'Yes',
        no: 'No',
        groupName: 'Group account',
        dataStatus: 'Data state',
        newFrameworkCode: 'Group account code',
        newFrameworkAccountRule: 'Sub-account rule',
        MVNO: 'MVNO',
        createUserName: 'Creator',
        createTime: 'Creation time',
        value: 'Dictionary value',
        effective: 'Valid',
        invalid: 'Invalid',
        description: 'Dictionary description',
        lanType: 'Language type',
        status: 'Set default?',
        search: 'Query',
        detail: 'Details',
        edit: 'Edit',
        editSuccess: 'Edited',
        editFailed: 'Edit failed',
        add: 'Add',
        addSuccess: 'Added successful',
        addFailed: 'Added failed',
        del: 'Delete',
        delConfirm: 'Are you sure you want to delete this record?',
        delSuccess: 'Deleted',
        delFailed: 'Deletion failed',
        lan_type: {
            'zh-CN': '英文',
            'zh-TW': '繁体中文',
            'en-US': 'English'
        },
        select_lantype_edit: {
            'zh-CN': 'zh-CN',
            'zh-TW': 'zh-TW',
            'en-US': 'en-US'
        },
        status_type: {
            'Common@all': 'All',
            'Common@valid': 'Valid',
            'Common@invalid': 'Invalid'
        },
        status_YN: {
            'CommonType@yes': 'Yes',
            'CommonType@no': 'No'
        },
        dataStatusLabel: {
            'Common@all': 'All',
            'Common@valid': 'Valid',
            'Common@invalid': 'Invalid'
        },
        status_radio: {
            'Common@valid': 'Valid',
            'Common@invalid': 'Invalid'
        },
        MVNO_label: {
            'Common@valid': 'Roamingman'
        }
    },
    v_notice: {
        list: {
            noticeNum: 'Reference number',
            title: 'Title',
            titlePicture: 'Banner graphic',
            emergencyDegree: 'Urgency degree',
            pushWay: 'Release mode',
            roleNameListStr: 'Push notifications object',
            noticeStatus: 'Status',
            createName: 'Creator',
            createTime: 'Creation time',
            updateTime: 'Update time',
            isRead: 'Read it now?',
            contentPicture: 'Content picture',
            createUser: 'Create account',
            mvnoCode: 'MVNO',
            content: 'Content'
        },
        createTime: 'Creation time',
        content: 'Content',
        imgUploadSuccess: 'Picture uploaded',
        imgUploadFailed: 'Picture uploading failed',
        add: 'Add',
        search: 'Query',
        detail: 'Details',
        edit: 'Edit',
        del: 'Delete',
        read: 'Release',
        offline: 'Offline',
        browse: 'Browse',
        bgTime: 'Creation time',
        endTime: 'Update time',
        editSuccess: 'Edited',
        editFailed: 'Edit failed',
        delSuccess: 'Deleted',
        delFailed: 'Deletion failed',
        readSuccess: 'Released',
        readFailed: 'Release failed',
        offlineSuccess: 'Offline success',
        offlineFailed: 'Offline failed',
        delConfirm: 'Are you sure you want to delete this record?',
        readConfirm: 'Are you sure you want to release this record information?',
        offlineConfirm: 'Are you sure you want to make this record information offline?',
        addSuccess: 'Added',
        addFailed: 'Add failed',
        createName: 'Creator',
        createUser: 'Create account',
        state: 'Status',
        language: 'Language',
        mvno: 'MVNO',
        mvno_1: 'MVNO',
        state_1: 'Status',
        title_1: 'Title',
        noticeNum_1: 'Reference number',
        emergencyDegree_1: 'Urgency degree',
        pushWay_1: 'Release mode',
        isRead_1: 'Read it now?',
        title: 'Title',
        noticeNum: 'Reference number',
        isRead: 'Already read it?',
        emergencyDegree: 'Urgency degree',
        pushWay: 'Release mode',
        roleNameListStr: 'Push notifications object',
        tipsRoleName: 'Push notifications object cannot be blank',
        titlePicture: 'Banner graphic',
        contentPicture: 'Content picture',
        all: 'All',
        to: 'to',
        roleTitle: 'Push notifications object',
        pleaseObject: 'Please select push notifications object',
        placeholder: 'Search…',
        confirm: 'Confirm',
        internetBug: 'network anomaly',
        emergencyDegree_type: {
            'NoticeEmergencydegree@commonly': 'Normal',
            'NoticeEmergencydegree@urgent': 'Urgent',
            'NoticeEmergencydegree@exigence': 'Very urgent'
        },
        isRead_type: {
            'CommonType@yes': 'Yes',
            'CommonType@no': 'No'
        },
        pushWay_tpye: {
            'NoticePublishModel@ordinary': 'Common',
            'NoticePublishModel@force': 'Mandatory'
        },
        status_type: {
            'NoticeStatus@publish': 'Release',
            'NoticeStatus@draft': 'Draft',
            'NoticeStatus@offline': 'Offline'
        }
    },
    v_damages: {
        list: {
            damagesCode: 'Compensation code',
            damagesName: 'Compensation name',
            damagesPrice: 'Compensation amount',
            langType: 'Language',
            description: 'Description',
            damagesType: 'Compensation type',
            dataStatus: 'Status',
            mvnoCode: 'MVNO',
            createTime: 'Creation time',
            updateTime: 'Update time'
        },
        currencyUnit: 'Currency Unit',
        currencyCountry: 'Currency Country',
        add: 'Add',
        all: 'All',
        damagesCode: 'Compensation code',
        damagesPrice: 'Compensation amount',
        damagesName: 'Compensation name',
        createTime: 'Creation time',
        updateTime: 'Update time',
        editSuccess: 'Edited',
        editFailed: 'Edit failed',
        delSuccess: 'Deleted',
        delFailed: 'Deletion failed',
        delConfirm: 'Are you sure you want to delete this record?',
        addSuccess: 'Added',
        addFailed: 'Add failed',
        mvno: 'MVNO',
        dataStatus: 'Status',
        langType: 'Language',
        description: 'Description',
        damagesType: 'Compensation type',
        search: 'Query',
        detail: 'Details',
        edit: 'Edit',
        del: 'Delete',
        status: 'Status',
        status_type: {
            'Common@valid': 'Valid',
            'Common@invalid': 'Invalid'
        },
        mvnoCode_type: {
            '': 'All',
            'MvnoCode@B': 'GTBU300 Mega',
            'MvnoCode@C': 'For Xiecheng only',
            'MvnoCode@D': 'GTBU unbundle                                                                                                                      '
        }
    },
    v_department: {
        list: {
            code: 'Department code',
            name: 'Department ',
            parentDeptName: 'Superior department',
            status: 'Status',
            description: 'Description',
            adminUserName: 'Manager',
            createUserName: 'Creator',
            createTime: 'Creation time',
            updateTime: 'Update time',
            type: 'Type',
            pTypes: 'Package type',
            createUserAccount: 'Create account',
            mvnoCode: 'MVNO'
        },
        add: 'Add',
        search: 'Query',
        detail: 'Details',
        edit: 'Edit',
        del: 'Delete',
        type: 'Type',
        change: 'Select',
        all: 'All',
        package: 'Allocate packages',
        createTime: 'Creation time',
        updateTime: 'Update time',
        editSuccess: 'Edited',
        editFailed: 'Edit failed',
        delSuccess: 'Deleted',
        delFailed: 'Deletion failed',
        addSuccess: 'Added',
        addFailed: 'Add failed',
        status: 'Status',
        parentID: 'Superior department',
        mvnoCode: 'MVNO',
        code: 'Department code',
        name: 'Department ',
        adminUserId: 'Manager',
        createUserName: 'Creator',
        createUserAccount: 'Create account',
        delConfirm: 'Are you sure you want to delete this department?',
        charge: 'Manager info.',
        loginname: 'Login name',
        username: 'Display Name',
        usercode: 'Employee code',
        mobile: 'Contact phone no.',
        email: 'E-mail address',
        inputPack: 'Please enter package type',
        searchPack: 'Search packages',
        save: 'Save',
        status_type: {
            'Common@valid': 'Valid',
            'Common@invalid': 'Invalid'
        },
        exists_value: 'The value already exists',
        existes_user: 'The user already exists',
        enterPack: 'Enter package type'
    },
    v_management: {
        list: {
            usercode: 'Code',
            loginname: 'Login name',
            username: 'Display Name',
            usertype: 'User type',
            deptName: 'OrgName',
            mobile: 'Contact phone no.',
            status: 'Status',
            createUserName: 'Creator',
            createTime: 'Creation time',
            updateTime: 'Update time',
            user: 'Role',
            adminType: 'Administrator',
            email: 'E-mail address',
            identifyType: 'ID type',
            identifyNum: 'ID no.',
            createUserAccount: 'Creator account',
            mvnoCode: 'MVNO code'
        },
        usertype: 'User type',
        adminType: 'Administrator',
        add: 'Add',
        mvno: 'MVNO',
        addTpye: 'Creation type',
        search: 'Query',
        detail: 'Details',
        edit: 'Edit',
        del: 'Delete',
        stop: 'Suspend',
        enabled: 'Enabled',
        change: 'Select',
        all: 'All',
        resetPwd: 'Reset password',
        distributionUser: 'Assign roles',
        distributionOrg: 'Assign org.',
        distributionPosition: 'Assign storage bins',
        basicRole: 'Basic roles',
        businessRole: 'Business roles',
        orglist: 'Organization list',
        positionlist: 'Storage bins list',
        agentOrg: 'MVNO',
        agentShop: 'MVNO shop',
        selfShoplist: 'Self-run shop list',
        agentShotlist: 'MVNO shop list',
        createTime: 'Creation time',
        updateTime: 'Update time',
        editSuccess: 'Edited',
        editFailed: 'Edit failed',
        delSuccess: 'Deleted',
        delFailed: 'Deletion failed',
        addSuccess: 'Added',
        addFailed: 'Add failed',
        delConfirm: 'Are you sure you want to delete this record?',
        stopConfirm: 'Are you sure you want to disable the usage status for this user?',
        upConfirm: 'Are you sure you want to enable the usage status for this user?',
        upSuccess: 'Enabled',
        upFailed: 'Enable failed',
        stopSuccess: 'Disabled',
        stopFailed: 'Disable failed',
        resetPwdSuccess: 'Reset',
        resetPwdFailed: 'Reset failed',
        distributionUserSuccess: 'Assigned',
        distributionUserFailed: 'Failed to assign roles',
        reustConfirm: 'Are you sure you want to reset the password for this user?',
        status: 'Status',
        usercode: 'Code',
        username: 'Display Name',
        deptName: 'Organization',
        dept: 'Department',
        user: 'Basic roles',
        createUserName: 'Creator',
        createUserAccount: 'Creator account',
        mvnoCode: 'MVNO',
        functionalAuthority: 'Function permission',
        userType: 'Employee type',
        departmentUser: 'Department employee',
        agentUser: 'MVNO employee',
        addOrdinary: 'General employee',
        addAdmin: 'Administrative employee',
        userList: 'Basic roles',
        code: 'Code',
        loginname: 'Login name',
        userName: 'Display Name',
        org: 'Organization',
        mobile: 'Phone no.',
        email: 'Mail-box',
        identifyType: 'ID type',
        identifyNum: 'ID no.',
        admin: 'Administrator',
        keep: 'Save',
        functionaLauthority: 'Function permission',
        orgAuthority: 'Organization permission',
        rolePermissions: 'It is prohibited to assign roles on platform management',
        institutionalAuthority: 'It is prohibited to assign organizations on platform management',
        positionPermission: 'It is prohibited to assign on platform management',
        searchOrg: 'Org. query',
        checkOrg: 'Assigned org.',
        status_type: {
            'Common@valid': 'Valid',
            'Common@invalid': 'Invalid'
        },
        status_typeAdd: {
            'Common@valid': 'Valid',
            'Common@invalid': 'Invalid'
        },
        user_type: {
            'userType@deptUser': 'Department employee',
            'userType@agentUser': 'MVNO employee'
        },
        user_typeALL: {
            'userType@deptUser': 'Department employee',
            'userType@agentUser': 'MVNO employee'
        },
        user_typeadmin: {
            'userType@deptUser': 'Department employee'
        },
        admin_Type: {
            'adminType@Admin': 'MVNO administrator',
            'adminType@superAdmin': 'Platform administrator'
        },
        fileType: {
            'FileType@identity': 'ID card'
        }
    },
    v_smsTemplate: {
        list: {
            code: 'Template code',
            name: 'Template name',
            data: 'Template content',
            langType: 'Language',
            orgCode: 'OrgCode',
            type: 'Template type',
            status: 'Status',
            mvnoCode: 'MVNO',
            createTime: 'Creation time',
            updateTime: 'Update time',
            remark: 'notes'
        },
        all: 'All',
        add: 'Add',
        search: 'Query',
        detail: 'Details',
        edit: 'Edit',
        del: 'Delete',
        createTime: 'Creation time',
        updateTime: 'Update time',
        editSuccess: 'Edited',
        editFailed: 'Edit failed',
        delConfirm: 'Are you sure you want to delete this record?',
        delSuccess: 'Deleted',
        delFailed: 'Deletion failed',
        addSuccess: 'Added',
        addFailed: 'Add failed',
        status: 'Status',
        langType: 'Language',
        mvno: 'MVNO',
        remark: 'Notes',
        pleaseInput: 'Please enter template content',
        orgCode: 'OrgCode',
        code: 'Template code',
        name: 'Template name',
        type: 'Template content',
        data: 'Template type',
        template_type: {
            business: 'Business template',
            cabinetOrder: 'Cabinet order',
            cabinetReturn: 'Cabinet return',
            customer: 'Customer service template',
            pointOrder: 'Counter order',
            warehouseOrder: 'Bin order'
        },
        lang_type0: {
            '': 'All',
            'zh-CN': 'English',
            'zh-TW': '繁体中文',
            'en-US': 'English'
        },
        pleaseenter: 'Please enter template content'
    },
    v_smssendLog: {
        list: {
            receiver: 'Receiver',
            senderName: 'Sender',
            content: 'SMS Message content',
            templateName: 'SMS Message template',
            serialNumber: 'Business turnover',
            status: 'Status',
            mvnoCode: 'MVNO',
            createTime: 'Sending time',
            updateTime: 'Resending time'
        },
        all: 'All',
        search: 'Query',
        detail: 'Details',
        del: 'Delete',
        createTime: 'Sending time',
        receiver: 'Receiving no.',
        senderName: 'Sender account',
        mvno: 'MVNO',
        status: 'Status',
        orgCode: 'Affiliated org.',
        templateName: 'SMS Message Template',
        serialNumber: 'Business running no.',
        sendAgain: 'Resend',
        isOk: 'Are you sure you want to resend this message?',
        sendSuccess: 'Resent',
        sendFailed: 'Resend failed',
        status_type: {
            'Common@success': 'Successful',
            'Common@fail': 'Failed'
        },
        orgCode_type: {
            '': 'All',
            'MessageDept@CtripDept': 'Xicheng',
            'MessageDept@OrdinaryDept': 'Common Org.'
        }
    },
    v_shopManage: {
        list: {
            code: 'Shop code',
            name: 'Shop name',
            parentID: 'Superior department ID',
            parentDeptName: 'Superior department',
            status: 'Status',
            description: 'Description',
            adminUserID: 'Manager ID',
            adminUserName: 'Manager',
            createUserName: 'Creator',
            createTime: 'Creation time',
            updateTime: 'Update time',
            type: 'Type',
            createUserAccount: 'Create account',
            mvnoCode: 'MVNO'
        },
        all: 'All',
        add: 'Create',
        save: 'Save',
        search: 'Query',
        detail: 'Details',
        edit: 'Edit',
        del: 'Delete',
        createTime: 'Creation time',
        updateTime: 'Update time',
        editSuccess: 'Edited',
        editFailed: 'Edit failed',
        delSuccess: 'Deleted',
        delFailed: 'Deletion failed',
        addSuccess: 'Added',
        addFailed: 'Add failed',
        status: 'Status',
        parentID: 'Department code',
        parentDeptName: 'Superior department',
        mvno: 'MVNO',
        code: 'Shop code',
        name: 'Shop name',
        storeDescription: 'Shop description',
        description: 'Description',
        createStore: 'Shop creation',
        storeType: 'Shop type',
        adminUserID: 'Manager ID',
        adminUserName: 'Manager',
        adminUserInfo: 'Manager info.',
        createUserName: 'Creator',
        createUserAccount: 'Create account',
        loginname: 'Login name',
        username: 'Display Name',
        usercode: 'Employee code',
        email: 'E-mail address',
        mobile: 'Contact phone no.',
        delConfirm: 'Are you sure you want to delete this record?',
        duplicate: 'User existed',
        duplicate_department: 'Shop name existed'
    },
    v_agencyAgent: {
        list: {
            code: 'MVNO code',
            name: 'MVNO code',
            parentAgentName: 'Superior department',
            status: 'Status',
            reviewStatus: 'Audit status',
            adminUserName: 'Manager',
            representative: 'Sales rep.',
            createUserName: 'Creator',
            createTime: 'Creation time',
            updateTime: 'Update time',
            pNames: 'Package type',
            remitStatus: 'Remittance audit status',
            description: 'Notes',
            remiterName: 'Remittance approver',
            reviewerName: 'Approver',
            representativeId: 'Salesman account',
            createUserAccount: 'Creator account',
            mvnoCode: 'MVNO'
        },
        all: 'All',
        pleaseSelectMinOne: 'Please select at least one record!',
        agentName: 'OrgName',
        agencyAgent: 'Agency',
        agentId: 'OrgCode',
        agentCode: 'OrgCode',
        representative: 'Sales rep.',
        parentDeptName: 'Superior department',
        auditStatus: 'Audit status',
        remittanceStatus: 'Remittance audit status',
        remitStatus: 'Remittance audit status',
        status: 'Status',
        mvnoCode: 'MVNO',
        search: 'Query',
        export: 'Export',
        changeSalesman: 'Switch salesman',
        add: 'Create',
        detail: 'Details',
        edit: 'Edit',
        del: 'Delete',
        delConfirm: 'Are you sure you want to delete?',
        delSuccess: 'Deleted',
        delFailed: 'Deletion failed',
        audit: 'Audit',
        setServiceParams: 'Set business parameters',
        setOTA: 'Set OTA parameters',
        assignPackage: 'Allocate packages',
        basicInfo: 'Basic info.',
        contractInfo: 'Contract info.',
        remittanceInfo: 'Remittance info.',
        billInfo: 'Billing info.',
        businessParam: 'Business parameters',
        packageType: 'Package type',
        agentName1: 'OrgName',
        businessLicense: 'Business license',
        legalPersonName: 'Legal person name',
        legalPersonPhone: 'Legal person phone no.',
        dockingPeopleName: 'Liaison',
        dockingPeoplePhone: 'Liaison phone no.',
        dockingPeopleEmail: 'Liaison e-mail address',
        companyAddress: 'Company address',
        remark: 'Notes',
        responsiblePersonInfo: 'Manager info.',
        loginname: 'Login name',
        username: 'Display Name',
        usercode: 'Employee code',
        email: 'E-mail address',
        phoneNum: 'Contact no.',
        attachmentList: 'Attachment list',
        filename: 'File name',
        filedescription: 'File description',
        filetype: 'File type',
        file: 'File',
        updata: 'Upload',
        cancel: 'Cancel',
        close: 'Close',
        hireRebate: 'Lease contract',
        leaseContract: 'Lease contract',
        monthlyContract: 'Monthly contract',
        addHireRebate: 'Create lease contract',
        mainContract: 'Host contract info.',
        rebateInfo: 'Rebate info.',
        start: 'Contract start date ',
        end: 'Contract end date',
        addOtherContract: 'Add accessory contract',
        editOtherContract: 'Edit accessory contract',
        addMonthly: 'Create monthly contract',
        monthly_price: 'Monthly unit price',
        monthlyDevices: 'Monthly number of units',
        depositAmount: 'Deposit amount',
        depositTotalAmount: 'Total deposit amount',
        area: 'Coverage',
        settlement: 'Settlement method',
        advance: 'Pre-paid',
        otherContract: 'Accessory contract',
        stockContract: 'Inventory contract',
        expressDepositContract: 'No deposit shipment contract',
        num0: 'No. of units',
        num1: 'Unit',
        bottomPrice: 'Min. price',
        minConsumption: 'Min. consumption',
        stockArea: 'Inventory region',
        notAdded: 'Not now',
        leaseContractAttached: 'Accessory lease contract',
        addRemittance: 'Create remittance info.',
        add1: 'Add',
        index: 'Serial no.',
        remittanceName: 'Remitter',
        remittanceBank: 'Remitting bank',
        remittanceNumber: 'Remittance account',
        attachment: 'Attachment',
        enterRemittanceName: 'Enter remitter name',
        enterRemittanceBank: 'Enter remitting bank',
        enterRemittanceNumber: 'Enter remittance account',
        addInvoice: 'Create billing info.',
        invoiceTitle: 'Invoice title',
        telephoneNumber: 'Phone no.',
        phone: 'Phone no.',
        taxNum: 'Tax Identification no. or Unified social credit code',
        bankName: 'Deposit bank',
        bankAccount: 'Deposit bank no.',
        addressRegistered: 'Company registration address',
        addressMail: 'Shipping address',
        reviewStatus: 'Audit status',
        reviewTime: 'Audit time',
        reviewPerson: 'Auditor',
        reviewOpinion: 'Audit opinion',
        paramType: 'Parameters type',
        createPerson: 'Creator',
        createId: 'Create account',
        createTime: 'Creation time',
        updateTime: 'Update time',
        editContract: 'Edit contract info.',
        editRemittance: 'Edit remittance info.',
        editInvoice: 'Edit billing info.',
        nowSalesman: 'Current salesman',
        newSalesman: 'New salesman',
        prev: 'Previous',
        next: 'Next',
        save: 'Save',
        seeDetails: 'View details',
        isRebate: 'Any rebates?',
        haveRebate: 'Yes',
        noRebate: 'No',
        operateSuccessed: 'Successful',
        operateFailed: 'Failed',
        agentsName: 'MVNO',
        paramValue: 'Parameters',
        submit: 'Submit',
        confirm: 'Confirm',
        otaAccountID: 'otaAccountID',
        otaSignKey: 'otaSignKey',
        otaAPIUrl: 'otaAPIUrl',
        apiAccountCode: 'apiAccountCode',
        combineOrderCodePre: 'combineOrderCodePre',
        pleaseInputPackageType: 'Please enter package type',
        queryPackage: 'Search packages',
        refundPercent: 'Refund ratio',
        contactType: 'Contract type',
        percent: '%',
        enterDetail: 'Enter full address ',
        editHireRebate: 'Edit lease contract',
        editMonthly: 'Edit monthly contract',
        pleaseInputRefund: 'Please enter refund ratio',
        setRefundFailed: 'Failed to set refund ratio',
        refundMin: 'Refund ratio can not be minus',
        refundMax: 'Refund ratio can not exceed 100',
        refundNoempty: 'Refund ratio can not be blank',
        auditPassNoDel: 'Approved organization can not be deleted',
        aTotalOf: 'Total',
        use_area: 'Coverage',
        head_man: 'Manager',
        data: 'records',
        pagesOfData: 'pages',
        pagination: 'page no.',
        go: 'Jump',
        stripPage: 'record/page',
        msgBasic01: 'Enter OrgName',
        msgBasic02: 'Enter business license',
        msgBasic03: 'Enter legal person name',
        msgBasic04: 'Liaison name',
        msgBasic05: 'Liaison phone no.',
        msgBasic06: 'Liaison e-mail address',
        msgBasic07: 'Enter company address',
        msgBasic08: 'Enter attachment file name',
        msgBasic09: 'Attach at least one copy of business license',
        msgContract01: 'Enter the start date of lease contract',
        msgContract02: 'Enter the file name of accessory lease contract',
        msgContract03: 'Attach at least one copy of accessory lease contract',
        msgContract04: 'Enter the number of units of inventory contract',
        msgContract05: 'Enter the minimum price of inventory contract',
        msgContract06: 'Enter the region of inventory contract',
        msgContract07: 'Enter the file name of accessory inventory contract',
        msgContract08: 'Attach at least one copy of accessory inventory contract',
        msgContract09: 'Enter file name of accessory no deposit shipment contract',
        msgContract10: 'Attach at least one copy of accessory express contract without deposit',
        msgContract11: 'Enter the number of units for monthly contract',
        msgContract12: 'Enter the unit price of monthly contract',
        msgContract13: 'Enter the region of monthly contract',
        msgContract14: 'Enter the start date of monthly contract',
        msgContract15: 'Enter the file name of accessory monthly contract',
        msgContract16: 'Attach at least one copy of accessory monthly contract',
        msgContract17: 'The number of units or minimum price of inventory contract can not be minus',
        msgContract18: 'The number of units or monthly price of monthly contract can not be minus',
        msgRemittance01: 'Enter remitter',
        msgRemittance02: 'Enter remittance bank',
        msgRemittance03: 'Enter remittance account',
        msgRemittance04: 'Upload attachment',
        msgInvoice01: 'Enter invoice title',
        msgInvoice02: 'Enter phone no.',
        msgInvoice03: 'Enter tax identification no. or unified social credit code',
        msgInvoice04: 'Enter deposit bank',
        msgInvoice05: 'Enter deposit account',
        msgInvoice06: 'Enter company registration address',
        msgInvoice07: 'Enter shipping address',
        sureBatchInvalid: 'Are you sure you want to batch disable?',
        batchInvalid: 'Batch disable',
        delRemittanceList: 'Are you sure you want to delete the selected data?',
        max50: 'Add upper limit to 50 ',
        noDelAll: 'Upload at least one record of remittance information！',
        saveSuccessfully: 'Saved',
        xx: 'Search packages',
        pleaseenterPackageType: 'Enter package type',
        pleaseenterRefund: 'Enter refund ratio',
        agentNameRepeat : "The agency name already exists, please retype"
    },
    v_roleManager: {
        list: {
            code: 'Code',
            name: 'Name',
            deptName: 'Organization',
            type: 'Type',
            description: 'Description',
            status: 'Status',
            createUserName: 'Creator',
            createTime: 'Creation time',
            updateTime: 'Update time',
            roleRelationList: 'Basic roles',
            createUserAccount: 'Create account',
            mvnoCode: 'MVNO'
        },
        all: 'All',
        code: 'Code',
        name: 'Name',
        deptName: 'Organization',
        type: 'Type',
        description: 'Description',
        status: 'Status',
        createUserName: 'Creator',
        createTime: 'Creation time',
        updateTime: 'Update time',
        roleRelationList: 'Basic roles',
        createUserAccount: 'Create account',
        mvnoCode: 'MVNO',
        remark: 'Description',
        add: 'Create',
        addBasic: 'Basic roles',
        addBusiness: 'Business roles',
        search: 'Query',
        detail: 'Details',
        edit: 'Edit',
        del: 'Delete',
        editSuccess: 'Edited',
        editFailed: 'Edit failed',
        delSuccess: 'Deleted',
        delFailed: 'Deletion failed',
        addSuccess: 'Added',
        addFailed: 'Add failed',
        delConfirm: 'Are you sure you want to delete this role?',
        save: 'Save',
        functionLimits: 'Function permission',
        dataLimits: 'Data permission',
        interfaceLimits: 'Interface permission',
        saveReturn: 'Save and return',
        savaSuccess: 'Permission edited',
        savaFailed: 'Failed to edit permission',
        singleSave: 'Single record save',
        singleSaveTipT: 'Saved. Please continue to assign other permissions',
        singleSaveTipF: 'Save failed. Please try again later',
        saveFaild: 'Save failed. No options selected',
        noBaseRole: 'Basic role cannot be blank',
        status_type: {
            'Common@valid': 'Valid',
            'Common@invalid': 'Invalid'
        },
        roleType_type: {
            '': 'All',
            'RoleType@Basic': 'Basic roles',
            'RoleType@Business': 'Business roles'
        }
    },
    v_inventoryOperation: {
        list: {
            serialNumber: 'Order no.',
            operateType: 'Action type',
            deviceNumber: 'No. of device',
            alloctOutWarehouseName: 'Warehouse for device export ',
            alloctInWarehouseName: 'Warehouse for device import',
            operatorName: 'Operator',
            operateDate: 'Operating time',
            auditStatus: 'Audit status',
            auditUserName: 'Auditor',
            auditDate: 'Audit time',
            mvnoCode: 'MVNO',
            auditRemark: 'Audit instructions',
            remark: 'remarks'
        },
        index: 'Index',
        all: 'All',
        mvno: 'MVNO',
        operateType: 'Action type',
        auditStatus: 'Audit status',
        serialNumber: 'Order no.',
        operateDate: 'Operating time',
        imei: 'IMEI',
        pwd: 'PWD',
        ssid: 'SSID',
        deviceType: 'Device type',
        versionNo: 'Software version',
        search: 'Query',
        detail: 'Details',
        detailInfo: 'Details',
        audit: 'Audit',
        del: 'Delete',
        auditSuccess: 'Audited',
        auditFailed: 'Audit failed',
        delSuccess: 'Deleted',
        delFailed: 'Deletion failed',
        delConfirm: 'Are you sure you want to delete?',
        save: 'Save',
        inWarehouse: 'Enter warehouse',
        outWarehouse: 'Return to warehouse',
        scanCodeOutW: 'Scan to return to warehouse',
        importOutW: 'Import to return to warehouse',
        allot: 'Allocate',
        borrow: 'Borrow',
        export: 'Export',
        import: 'Import',
        downloadTemplate: 'Download template',
        nextStep: 'Next',
        confirm: 'Confirm',
        addDeviceImei: 'Scan to add device IMEI',
        outWarehouseRemark: 'Warehouse return instruction',
        chooseAllot: 'Select warehouse for device allocation ',
        operateSuccess: 'Successful',
        operateFailed: 'Failed',
        noOperate: 'The action is not allowed for this device',
        allotFrom0: 'from',
        allotFrom1: 'Allocate',
        borrowInfo: 'Borrowing information',
        borrowPackage: 'Borrowing package',
        borrowInUserName: 'Borrower',
        borrowInTelephone: 'Phone no.',
        borrowStartDate: 'Opening time',
        borrowEndDate: 'Closing time',
        maxLength: 'Maximum 100000 records for one-time import',
        operation: 'Operate',
        scanCodeOut: 'Scan to return to warehouse',
        exportOut: 'Import to return to warehouse',
        scanCodeAllot: 'Scan to allocate',
        exportAllot: 'Import to allocate',
        scanCodeBorrow: 'Scan to borrow',
        exportBorrow: 'Import to borrow',
        outFailed: 'It is not allowed to return this device to warehouse',
        allowFailed: 'It is not allowed to allocate this device',
        borrowFailed: 'It is not allowed to borrow this device',
        pass: 'Passed',
        reject: 'Rejected',
        auditReason: 'Reason of audit',
        remark: 'Please enter notes'
    },
    v_inventoryOperationDetail: {
        list: {
            imei: 'IMEI',
            warehouseName: 'Storage bin name',
            operateDate: 'Operating time',
            operatorName: 'Operator',
            deviceType: 'Device type',
            deviceStatus: 'Device status'
        }
    },
    v_statisticsWarehouse: {
        list: {
            name: 'Storage bin name',
            type: 'Storage bin type',
            classes: 'Bin category',
            totalDevice: 'Total device quantity',
            stockNumber: 'In stock',
            rentNumber: 'Lease',
            onTheWayNumber: 'In traveling',
            borrowNumber: 'Borrow',
            dataStatus: 'Storage bin status',
            imei: 'IMEI',
            ssid: 'SSID',
            pwd: 'PWD',
            deviceType: 'Device type',
            versionNo: 'Software version',
            deviceStatus: 'Device status'
        },
        mvnoCode: 'MVNO',
        name: 'Bin',
        dataStatus: 'Storage bin status',
        type: 'Storage bin type',
        classes: 'Storage bin category',
        search: 'Query',
        export: 'Export',
        all: 'All',
        close: 'Close',
        wareStatisticsTitle: 'Bins statistics details',
        imei: 'IMEI',
        ssid: 'SSID',
        pwd: 'PWD',
        deviceType: 'Device type',
        versionNo: 'Software version',
        deviceStatus: 'Device status'
    },
    v_statisticsDevices: {
        list: {
            name: 'Storage bin name',
            type: 'Storage bin type',
            imei: 'IMEI',
            ssid: 'SSID',
            pwd: 'PWD',
            deviceType: 'Device type',
            versionNo: 'Software version',
            deviceStatus: 'Device status',
            dataStatus: 'Storage bin status',
            mvnoCode: 'MVNO',
            index: 'Serial no.',
            createTime: 'Date',
            visitCountry: 'Country',
            flowSize: 'Data'
        },
        all: 'All',
        mvnoCode: 'MVNO',
        name: 'Storage bin name',
        imei: 'IMEI',
        type: 'Storage bin type',
        deviceStatus: 'Device status',
        dataStatus: 'Storage bin status',
        search: 'Query',
        export: 'Export',
        test: 'Test',
        queryTraffic: 'Data Query',
        trafficRecord: 'Data usage record',
        beginDate: 'Start time',
        endDate: 'End time',
        inputImei: 'Scan or manually enter IMEI',
        index: 'Serial no.',
        date: 'Date',
        country: 'Country',
        traffic: 'Data',
        noDataTip: 'Oops, no devices available ',
        flowNoDataTip: 'No data usage recrods!',
        exportTipFailed: '请输入查询条件过滤后导出',
        exportTipSuccess: '已添加—>系統管理—>通知管理—>下载管理',
        enterImei: 'Enter IMEI no.'
    },
    v_wareHouse: {
        list: {
            name: 'Storage bin name',
            mvnoCode: 'MVNO',
            number: 'Storage bin  no.',
            classes: 'Storage bin category',
            type: 'Storage bin type',
            createUserName: 'Creator',
            createTime: 'Creation time',
            updateTime: 'Update time',
            dataStatus: 'Is it valid?',
            createUserAccount: 'Create account',
            parentName: 'Superior storage bin',
            isSendMsgCode: 'Send verification code?',
            taobaoObtainProvince: 'Taobao pickup province',
            taobaoObtainCity: 'Taobao pickup city',
            taobaoObtainPosition: 'Taobao pickup region'
        },
        add: 'Create',
        addJoin: 'Franchised bins creation',
        addUser: 'Self-run bins creation',
        mvnoCode: 'MVNO',
        save: 'Save',
        search: 'Query',
        detail: 'Details',
        edit: 'Edit',
        settaobao: 'Set Taobao address',
        taobaoObtainProvince: 'Taobao pickup province',
        taobaoObtainCity: 'Taobao pickup city',
        taobaoObtainPosition: 'Taobao pickup region',
        name: 'Storage bin category',
        classes: 'Storage bin type',
        orgname: 'OrgName',
        isStatus: 'Is it valid?',
        all: 'All',
        change: 'Select',
        type: 'Storage bin type',
        number: 'Storage bin code',
        rangeUse: 'Self-use',
        SendMsgCode: 'Send verification code?',
        isparentWareHouse: 'Stored in superior storage bin',
        parentName: 'Superior storage bin',
        dataStatus: 'Data state',
        createUserName: 'Creator',
        createUserAccount: 'Create account',
        createTime: 'Creation time',
        updateTime: 'Last updated time',
        editSuccess: 'Edited',
        editFailed: 'Edit failed',
        addSuccess: 'Added',
        addFailed: 'Add failed',
        package: 'Allocate packages',
        inputPack: 'Please enter package type',
        searchPack: 'Search packages',
        wareHouseClasses: {
            'WareHouseClasses@Point': 'Counter',
            'WareHouseClasses@Area': 'Regional warehouse',
            'WareHouseClasses@Cabinet': 'Cabinet'
        },
        searchwareHouseClasses: {
            'WareHouseClasses@Point': 'Counter',
            'WareHouseClasses@Area': 'Regional warehouse',
            'WareHouseClasses@Cabinet': 'Cabinet',
            'WareHouseClasses@wareHouse': 'General warehouse'
        },
        wareHouseType: {
            'WareHouseType@selfSupport': 'Self-run',
            'WareHouseType@join': 'Franchise'
        },
        common: {
            'Common@valid': 'Valid',
            'Common@invalid': 'Invalid'
        },
        dataStatusType: {
            'Common@valid': 'Valid',
            'Common@invalid': 'Invalid'
        },
        IsSendMsgCode: {
            'IsSendMsgCode@yes': 'Yes',
            'IsSendMsgCode@no': 'No'
        },
        parentWareHouse: {
            'parentWareHouse@yes': 'Existed',
            'parentWareHouse@no': 'Not existed'
        },
        rangeUseType: {
            'rangeUse@use': 'Yes',
            'rangeUse@share': 'No'
        },
        enterPack: 'Enter package type'
    },
    v_networkDot: {
        list: {
            name: 'Counter name',
            mvnoCode: 'MVNO',
            cityName: 'City',
            busLine: 'Bus station',
            address: 'Address',
            businessStatus: 'Service coverage',
            createUserName: 'Creator',
            createTime: 'Creation time',
            updateTime: 'Update time',
            officeDate: 'Business time',
            createUserAccout: 'Create account',
            phone: 'Contact no.',
            status: 'Status',
            photoPath: 'Counter pics',
            netContent: 'Notes'
        },
        all: 'All',
        add: 'Create',
        addJoin: 'Franchised bins creation',
        addUser: 'Self-run bins creation',
        mvnoCode: 'MVNO',
        save: 'Save',
        search: 'Query',
        detail: 'Details',
        edit: 'Edit',
        del: 'Delete',
        name: 'Counter name',
        cityName: 'City',
        type: 'Storage bins type',
        status: 'Status',
        businessStatus: 'Service coverage',
        officeDate: 'Business time',
        phone: 'Contact no.',
        busLine: 'Bus station',
        address: 'Address',
        lastPhoto: 'Counter pics',
        netContent: 'Notes',
        delSuccess: 'Deleted',
        delFailed: 'Deletion failed',
        delConfirm: 'Are you sure you want to delete?',
        editSuccess: 'Edited',
        editFailed: 'Edit failed',
        addSuccess: 'Added',
        addFailed: 'Add failed',
        invalid: 'Invalid',
        valid: 'Valid',
        expressOnly: 'Express mgmt.',
        getAndReturn: 'For pickup and return',
        getOnly: 'For self pickup only',
        returnOnly: 'For return only',
        sceneOnly: 'Onsite business support'
    },
    v_borrowEquipmentList: {
        list: {
            imei: 'IMEI',
            ssid: 'SSID',
            pwd: 'PWD',
            borrowWarehouseName: 'Warehouse for device lending',
            lendUserName: 'Lender',
            contactPhoneNo: 'Contact info.',
            startTimeBorrow: 'Start time',
            endTimeBorrow: 'End time',
            returnStatus: 'Return status',
            weatherOpen: 'Opening status',
            effectiveTime: 'Opening time',
            expiryTime: 'Closing time',
            returnWarehouseName: 'Warehouse for device return',
            returnUserName: 'Returner',
            returnTime: 'Return time',
            borrowName: 'Borrower'
        },
        imei: 'IMEI',
        borrowName: 'Borrower',
        lendUserName: 'Lender',
        borrowWarehouseName: 'Warehouse for device lending',
        returnStatus: 'Return status',
        ssid: 'SSID',
        pwd: 'PWD',
        contactPhoneNo: 'Contact info.',
        startTimeBorrow: 'Start time',
        endTimeBorrow: 'End time',
        weatherOpen: 'Opening status',
        effectiveTime: 'Opening time',
        expiryTime: 'Closing time',
        returnWarehouseName: 'Warehouse for device return',
        returnUserName: 'Returner',
        returnTime: 'Return time',
        search: 'Query',
        export: 'Export',
        detail: 'Details',
        edit: 'Edit',
        back: 'Return',
        sure: 'Confirm',
        selectBack: 'Warehouse for device return',
        editSuccess: 'Edited',
        editFailed: 'Edit failed',
        returnSuccess: 'Returned',
        returnFailed: 'Return failed',
        save: 'Save',
        all: 'All'
    },
    v_countrySelect: {
        title: 'Select country',
        confirm: 'Confirm'
    },
    v_revert: {
        returnInfo: 'Return info.',
        index: 'Serial no.',
        serialNumber: 'Order no.',
        imei: 'IMEI',
        return: 'Return',
        comfirm: 'Confirm',
        inputExprees: 'Scan or enter tracking no.',
        inputImei: 'Scan or manually enter IMEI',
        totalAmount: 'Total amount',
        returnExpressNumber: 'Express tracking no.',
        cancelBreachFee: 'Overdue fine receivable',
        receivableOtherFee: 'Other payments',
        receivableDamageFee: 'Compensation receivable',
        receivableLateFee: 'Overdue fine receivable',
        delayDay: 'Extension days',
        returnWarehouse: 'Return storage bins',
        compensateForReason: 'Reason of compensation',
        returnExpressCode: 'Please enter express tracking number with correct format',
        repeatInput: 'Duplicate IMEI. Please re-enter.',
        importNumber: 'Please enter IMEI with 15 digits integer',
        noSearch: 'No order information queried',
        noImei: 'Do you want to go to old system to query?',
        point: 'Hint',
        enterExprees: 'Scan or enter tracking no.',
        enterImei: 'Scan or manually enter IMEI',
        repeatenter: 'IMEI duplicated. Please re-enter.',
        checkReturnTip: 'The return date is not due, are you sure you want to return the device？',
        friendshipTips: 'Kind reminder'
    },
    v_orderList: {
        list: {
            serialNumber: 'Order no.',
            imei: 'IMEI',
            orderProgress: 'Order progress',
            departmentType: 'Order type',
            orderLabel: 'Order tag',
            orderLabelList: 'Order tag',
            departmentName: 'Department',
            packageType: 'Package type',
            packageName: 'Package ',
            customerName: 'Customer',
            customerPhone: 'Customer phone no.',
            createUserName: 'Creator',
            creatDate: 'Creation date',
            deliverDate: 'Shipment date',
            returnDate: 'Return date',
            settlementDate: 'Settlement date',
            goOutDate: 'Departure date',
            getBackDate: 'Return date',
            cancelDate: 'Cancellation date',
            refundDate: 'Refund date',
            expressProbablyDate: 'Estimated shipping date',
            salesmanName: 'Salesman',
            userDepartment: 'Salesman department',
            takeType: 'Pickup method',
            imeiPositionName: 'Device bins',
            otaCombineOrderId: 'Combine order no.',
            otaOrderId: 'OTA order no.',
            subscribeStatus: 'Subscription relationship',
            source: 'Subscription sources',
            orderStatus: 'Order status',
            expectTakePointName: 'Estimated pickup counter',
            goAbroadDate: 'Departure date',
            backHomeDate: 'Return date',
            index: 'No.',
            createTime: 'Date',
            visitCountry: 'Country',
            flowSize: 'Flow'
        },
        agentOrderCreation: 'Agency order creation',
        websiteOrderCreation: 'Counter order creation',
        retailersOrderCreation: 'E-commerce order creation',
        closeOrderCreat: '关闭创建',
        returnOrderList: '返回订单列表',
        dotCreation: 'Counter creation',
        agentCreation: 'Agency creation',
        retailersCreation: 'E-commerce creation',
        orderCreation: 'Order creation',
        createSuccess: 'Created',
        createFailed: 'Creation failed',
        trafficQuery: 'Data Query',
        day: 'day(s)',
        yuanPeeDay: 'Yuan/Day',
        date: 'Date',
        country: 'Country',
        traffic: 'Data usage',
        trafficRecord: 'Data usage record',
        delivered: 'Shipped',
        imeiNotEmpty: 'IMEI cannot be blank',
        returnDays: 'Days returnable',
        excute: 'Operate',
        edit: 'Edit',
        detail: 'Details',
        cancel: 'Cancel',
        refund: 'Refund',
        relet: 'Renew',
        all: 'All',
        selectDepId: 'Select org.',
        totalRent: 'Subtotal::',
        PlaceholderName: 'Limit 25 characters',
        wareHouseId: '预计发货仓',
        customerEmail: '客户邮箱',
        PlaCustomerEmail: '请注意您的邮箱格式',
        isSendEmail: '是否发送邮件',
        pleaseSelect: 'Select',
        selectComboType: 'Please select package',
        selectGoputDate: 'Please select traveling date',
        expressAddress: 'Shipping address',
        detailAddress: 'Full address',
        expressPayMode: 'Payment method',
        deliveryCosts: 'Express fees',
        predictSendTime: 'Estimated delivery date',
        inAdvanceSendTime: 'Advanced shipment date',
        inAdvenceSendCosts: 'Advanced shipment fees',
        ifInAdvanceSend: 'Do you want advanced shipment?',
        sendMessage: 'Do you want to send message?',
        tipSelectTakeType: 'Please select pickup method',
        tipSelectTakeId: 'Please select pickup bins',
        tipNoBalance: 'Corporate account balance insufficient, please top up',
        departmentType: 'Department',
        tripTime: 'Traveling date',
        virtualDeliver: 'Virtual shipment',
        virtualReturn: 'Virtual return',
        wareHouseName: 'Device bins',
        salesmanName: 'Salesman',
        userDepartment: 'Salesman department',
        subscribeStatus: 'Subscription status',
        packageType: 'Package type',
        packageName: 'Package ',
        otaCombineOrderId: 'Combine order no.',
        otaOrderId: 'OTA order no.',
        dateType: 'Time query',
        agentOrderEdit: 'Edit agency order',
        dotOrderEdit: 'Edit e-commerce order',
        RetailerOrderEdit: 'Counter order edit',
        save: 'Save',
        pleaseSelect: 'Select',
        editSuccess: 'Edited',
        editFailed: 'Edit failed',
        notEdit_settlement: 'It is not allowed to edit the orders of settlement and to be settled',
        notEdit_abnormal: 'Abnormal orders cannot be edited',
        reEditAdvenceSend: 'Please re-configure the parameters for advanced shipment',
        pleaseSelePackType: 'Please select package type',
        pleaseSelePackName: 'Please select package name',
        pleaseSelectAddress: 'Please select shipping address',
        pleSeleAdvanceDate: 'Please select advanced shipment date',
        expectTakePointName: 'Estimated pickup counter',
        transactionId: 'Payment running no.',
        agent: 'MVNO',
        advanceDeliveryFee: 'Advanced shipment fees',
        batchExecute: 'Batch operate',
        customerPhone: 'Customer phone no.',
        cancelOrder: 'Cancel order application',
        refundOrderApply: 'Refund application',
        refundReason: 'Reason of refund',
        quadraticRefund: 'Is it second refund?',
        cancelReason: 'Reason of cancellation',
        cancelExpress: 'Cancel shipment',
        compensateMoney: 'Compensation amount',
        compensateReason: 'Reason of compensation',
        compensationAmount: 'Compensation received',
        compensateMoneyNum: '50.00',
        comfirm: 'Confirm',
        delivery: 'Delivery',
        deliveryInfo: 'Shipping info.',
        deliveryDate: 'Delivery date',
        downloadTemplate: 'Download template',
        deposit: 'Deposit received',
        depositAmount: 'Deposit amount',
        depositReceiveUserName: 'Deposit collector',
        depositPayTypeName: 'Deposit collecting method',
        delayAmount: 'Overdue fine received',
        department: 'Department',
        export: 'Export',
        financeExport: 'Financing export',
        endTime: 'End time',
        is: 'Yes',
        imei: 'IMEI',
        import: 'Import',
        index: 'Serial no.',
        rent: 'Rent amount',
        isRent: 'Rent should be collected?',
        inputImei: 'Scan or manually enter IMEI',
        not: 'No',
        ordered: 'Subscribe',
        orderProgress: 'Order progress',
        orderType: 'Order type',
        orderStatus: 'Order status',
        orderInfo: 'Order info.',
        otherAmount: 'Other payments',
        pleaseInputCancelReason: 'Please enter reason of cancellation',
        query: 'Query',
        receipt: 'Collect',
        receiptAmount: 'Accounts collected',
        receivableLateFee: 'Overdue fine receivable',
        receivableDamageFee: 'Compensation receivable',
        receiptInfo: 'Collection Info.',
        return: 'Return',
        returnInfo: 'Return info.',
        returnExpressNumber: 'Express tracking no.',
        returnWarehouse: 'Return bins',
        refundAmount: 'Refund',
        startTime: 'Start time',
        search: 'Search',
        serialNumber: 'Order no.',
        settlement: 'Settle',
        settlementInfo: 'Settlement info.',
        swapDevice: 'Device exchange',
        takeType: 'Pickup method',
        isNeedPay: 'Do you want to collect payment?',
        takeInfo: 'Pickup info.',
        totalAmount: 'Total amount',
        shop: 'Shop',
        to: 'to',
        days: 'days',
        reletInfo: 'Renewal info.',
        reletDate: 'Renewal date',
        reletOtaOrderId: 'Renewal OTA order no.',
        reletDays: 'Renewal days',
        reletAmount: 'Renewal rent',
        OTAOrderNumber: 'OTA order no.',
        agentPay: 'Agency payment',
        agentBatchPay: 'Batch payment by agency',
        receivableDeposit: 'Deposit account receivable',
        receiptDeposit: 'Deposit account received',
        sumReceiptDeposit: 'Total deposit account received',
        payAmount: 'Payment amount',
        scanQRCodeToPay: '(Scan to make payment)',
        SFExpress: 'Shunfeng print',
        readyPrint: 'Prepare for print',
        rentPaySerailNumber: 'Rent payment running no.',
        ifNeedRecipt: 'Do you want to collect payment?',
        salesman: 'Salesman',
        travelDate: 'Traveling date',
        selectCountry: 'Select country',
        comboType: 'Package type',
        comboName: 'Package ',
        orderNum: 'Order quantity',
        whetherSend: 'Send message?',
        cashPledgePayWay: 'Deposit payment method',
        paymentMethod: 'Payment method(Please select)',
        remark: 'Notes',
        remarkPlaceholder: 'Please enter notes…(Optional)',
        takeWebsite: 'Pickup counter',
        takeCabinet: 'Pickup cabinet',
        takeAddress: 'Pickup address',
        bussinessAccountPay: 'Pay with corporate account',
        submit: 'Submit',
        immediatelyPayment: 'Pay now',
        immediatelyReceipt: 'Collect now',
        authCode: 'Authorization code',
        uploadNote: 'Upload bill',
        chargeInfo: 'Deduction info.',
        chargeMoney: 'Accounts deducted',
        compensationSincere: 'Compensation',
        overdueFine: 'Overdue fine',
        overdueFineNum: 'Overdue fine',
        dalayDays: 'Extension days',
        otherExpenses: 'Other expenses',
        applyRefundPayment: 'Apply for refund deduction',
        returnMoney: 'Amount returned',
        applyReturnMoney: 'Apply for refund deduction',
        compensateCause: 'Reason of compensation',
        compensationMoney: 'Compensation amount',
        compensateReasonList: ['Device lost',
            'Device kit lost',
            'Data cable lost'],
        applySccusse: 'Application successful',
        applyFailed: 'Application failed',
        logoRmb: 'Yuan',
        payTimeout: 'Payment timeout',
        swapDeviceInfo: {
            index: 'Serial no.',
            IMEI: 'IMEI',
            newIMEI: 'New IMEI',
            orderIndex: 'Order no.',
            clientName: 'Customer',
            clientNumber: 'Customer phone no.'
        },
        imeiCheck: 'IMEI number must be 15 digits integer',
        importNewImei: 'Please enter valid correct IMEI',
        importImei: 'Please enter valid IMEI',
        firstImeiNoEmpty: 'Please enter old IMEI firstly',
        importNumber: 'Please enter IMEI with 15 digits integer',
        saveSuccessfully: 'Saved',
        notFoundOrderInfo: 'Order info. not found',
        delayDaysCheck: 'Extension days should be integer greater than or equal to zero',
        otherSumCheck: 'Other amount should be integer greater than or equal to zero',
        returnSumCheck: 'Refund deductions you applied for is greater than deduction amount, please select again',
        returnSumIsZeroCheck: 'Refund amount is zero, please select carefully',
        mostFive: 'Uploading up to 5 pics',
        tipsInputDate: 'Please select traveling date firstly',
        tipsInputCombo: 'Please select package type firstly',
        expressCode: 'Express no.',
        inputExprees: 'Scan or enter tracking no.',
        delayDay: 'Extension days',
        receivableOtherFee: 'Other payments',
        compensateForReason: 'Reason of compensation',
        refundOrderApplySuccess: 'Refund application successful',
        cancelOrderSuccess: 'Refund application cancelation successful',
        prompt: 'Hint',
        compensateForPromptOne: 'Application for cancelling this order will be completed',
        compensateForPromptTwo: 'Yuan, are you sure you want to cancel this order?',
        sameOrderList: 'Please select orders with same progress to operate',
        unsubscribeOrderApply: 'Apply for order cancellation',
        unsubscribeReason: 'Reason of cancellation',
        unsubscribeSuccess: 'Order cancelled',
        isOrderProgress: 'Refund after order delivery completed',
        isSettlemented: 'Settled and cannot refund',
        deliverSuccess: 'Shipping successful',
        sendBack: 'Offsite return',
        changePayType: 'Please select payment method',
        preview: 'Preview',
        departmentName: 'Department',
        customerName: 'Customer ',
        goOutDate: 'Departure date',
        getBackDate: 'Return date',
        branchName: 'Counter name',
        isSendMessage: 'Send message?',
        selectTemplateType: 'Select template type',
        download: 'Download',
        orderTemplate: 'Order template',
        cancelBreachFee: 'Overdue fine receivable',
        cancelBreachAmount: 'Cancel penalty',
        previewPoint: 'Please upload valid document',
        verifyDateType: 'Please enter valid date',
        verifyDate: 'Please check if the date is valid',
        importSuccess: 'Imported',
        uploadSuccess: 'Uploaded',
        orderRelationshipExport: 'Subscription export',
        resetOrderCaptcha: 'Reset order verification code',
        noDeliver: 'Please select at least one record from "To be returned" options',
        isSelect: 'Select information option',
        repeatInput: 'Duplicate IMEI. Please re-enter.',
        operateSuccess: 'Successful',
        friendshipTips: 'Kind reminder',
        selectMultipleMessages: 'Please select multiple information option',
        operationTimedOut: 'Operation timeout. Please re-operate.',
        noData: 'No records',
        nodataTip: "Sorry, you don't have any orders",
        flowNoDataTip: 'No data usage recrods!',
        changeCondition: 'Please enter at least one record of query condition for display list',
        orderTemplate_type: {
            'OrderTemplate@deptPoint': 'Self-run e-commerce pickup order template',
            'OrderTemplate@proxyPoint': 'Agency pickup order template',
            'OrderTemplate@pointPoint': 'Self-run network pickup order template'
        },
        isUseFreeDepositOrAccountPay: 'Deposit payment method',
        order_Type: {
            'Department@department': 'E-commerce',
            'Department@agent': 'Agency',
            'Department@wareHouse': 'Counter'
        },
        order_Progress: {
            'OrderProgress@receive': 'To be collected',
            'OrderProgress@deliver': 'To be shipped',
            'OrderProgress@return': 'To be returned',
            'OrderProgress@settlement': 'To be settled',
            'OrderProgress@settlemented': 'Settle'
        },
        order_Status: {
            'OrderStatus@normal': 'Available',
            'OrderStatus@free': 'Free',
            'OrderStatus@camcel': 'Cancel',
            'OrderStatus@refund': 'Refund',
            'OrderStatus@unsub': 'Cancel',
            'OrderStatus@invalid': 'Invalid'
        },
        select_cashPledgePayWay: {
            'CommonType@yes': 'No deposit',
            'CommonType@no': 'On-site payment'
        },
        select_isNeedPay: {
            'CommonType@yes': 'Yes',
            'CommonType@no': 'No'
        },
        /* 是否发送邮件 */
        select_SendEmail: {
            'CommonType@yes': '是',
            'CommonType@no': '否'
        },
        select_bussinessAccountPay: {
            'CommonType@yes': 'Use',
            'CommonType@no': 'Not use'
        },
        select_sendSms: {
            'CommonType@yes': 'Yes',
            'CommonType@no': 'No'
        },
        rentCollection: {
            'CommonType@yes': 'Yes',
            'CommonType@no': 'No'
        },
        select_expressPayMode: {
            'ExpressPayMode@send': 'Freight prepaid',
            'ExpressPayMode@arrival': 'Freight collect'
        },
        select_inAdvanceSend: {
            'CommonType@yes': 'Yes',
            'CommonType@no': 'No'
        },
        code: 'Verification code',
        enterImei: 'Scan or manually enter IMEI',
        pleaseenterCancelReason: 'Please enter reason of cancellation',
        tipsenterDate: 'Please select traveling date firstly',
        tipsenterCombo: 'Please select package method firstly',
        enterExprees: 'Scan or enter tracking no.',
        repeatenter: 'IMEI duplicated. Please re-enter.',
        checkReturnTip: 'The return date is not due, are you sure you want to return the device？'
    },
    v_workOrderList: {
        list: {
            orderLabelList: 'Order tag',
            serialNumber: 'Order no.',
            orderProgress: 'Order progress',
            orderStatus: 'Order status',
            customerName: 'Customer',
            customerPhone: 'Customer phone no.',
            goAbroadDate: 'Departure date',
            backHomeDate: 'Return date',
            imei: 'IMEI',
            takeType: 'Pickup method',
            departmentType: 'Order type',
            subscribeStatus: 'Subscription sources',
            creatDate: 'Creation date',
            orderType: 'Order type',
            goOutDate: 'Departure date',
            getBackDate: 'Return date'
        },
        agentOrderCreation: 'Agency order creation',
        websiteOrderCreation: 'Counter order creation',
        retailersOrderCreation: 'E-commerce order creation',
        dotCreation: 'Counter creation',
        agentCreation: 'MVNO creation',
        retailersCreation: 'E-commerce creation',
        orderCreation: 'Order creation',
        createSuccess: 'Created',
        createFailed: 'Creation failed',
        excute: 'Operate',
        edit: 'Edit',
        detail: 'Details',
        cancel: 'Cancel',
        refund: 'Refund',
        relet: 'Renew',
        all: 'All',
        selectComboType: 'Please select package type',
        selectGoputDate: 'Please select traveling date firstly',
        expressAddress: 'Shipping address',
        detailAddress: 'Full address',
        expressPayMode: 'Payment method',
        deliveryCosts: 'Express fees',
        predictSendTime: 'Estimated delivery date',
        inAdvanceSendTime: 'Advanced shipment date',
        inAdvenceSendCosts: 'Advanced shipment fees',
        ifInAdvanceSend: 'Do you need advanced shipment date?',
        sendMessage: 'Send message?',
        tipSelectTakeType: 'Please select pickup method',
        tipNoBalance: 'Corporate account balance insufficient, please top up',
        departmentType: 'Department',
        tripTime: 'Traveling date',
        virtualDeliver: 'Virtual shipment',
        virtualReturn: 'Virtual return',
        wareHouseName: 'Device bins',
        salesmanName: 'Salesman',
        userDepartment: 'Salesman department',
        subscribeStatus: 'Subscription status',
        packageType: 'Package type',
        packageName: 'Package ',
        otaCombineOrderId: 'Combine order no.',
        otaOrderId: 'OTA order no.',
        dateType: 'Time query',
        agentOrderEdit: 'Edit agency order',
        dotOrderEdit: 'Edit counter order',
        RetailerOrderEdit: 'Edit e-commerce order',
        save: 'Save',
        pleaseSelect: 'Select',
        editSuccess: 'Edited',
        editFailed: 'Edit failed',
        notEdit_settlement: 'It is not allowed to edit the orders of settlement and to be settled',
        notEdit_abnormal: 'Abnormal orders cannot be edited',
        reEditAdvenceSend: 'Please re-configure the parameters for advanced shipment',
        pleaseSelePackType: 'Please select package type',
        pleaseSelePackName: 'Please select package name',
        pleaseSelectAddress: 'Please select shipping address',
        pleSeleAdvanceDate: 'Please select advanced shipment date',
        agent: 'MVNO',
        advanceDeliveryFee: 'Advanced shipment fees',
        batchExecute: 'Batch operate',
        customerName: 'Customer',
        customerPhone: 'Customer phone no.',
        cancelOrder: 'Cancel order application',
        refundOrderApply: 'Refund application',
        refundReason: 'Reason of refund',
        quadraticRefund: 'Is it second refund?',
        cancelReason: 'Reason of cancellation',
        cancelExpress: 'Cancel shipment',
        compensateMoney: 'Compensation amount',
        compensateReason: 'Reason of compensation',
        compensationAmount: 'Compensation received',
        compensateMoneyNum: '50.00',
        comfirm: 'Confirm',
        delivery: 'Shipment',
        deliveryInfo: 'Shipping info.',
        deliveryDate: 'Delivery date',
        downloadTemplate: 'Download template',
        deposit: 'Deposit received',
        depositAmount: 'Deposit amount',
        depositReceiveUserName: 'Deposit receiver',
        depositPayTypeName: 'Deposit collecting method',
        delayAmount: 'Overdue fine received',
        department: 'Department',
        export: 'Export',
        financeExport: 'Financing export',
        endTime: 'End time',
        is: 'Yes',
        imei: 'IMEI',
        import: 'Import',
        index: 'Serial no.',
        rent: 'Rent amount',
        isRent: 'Rent should be collected?',
        inputImei: 'Scan or manually enter IMEI',
        not: 'no',
        ordered: 'Subscribe',
        orderProgress: 'Order progress',
        orderType: 'Order type',
        orderStatus: 'Order status',
        orderInfo: 'Order info.',
        otherAmount: 'Other payments',
        pleaseInputCancelReason: 'Please enter reason of cancellation',
        query: 'Query',
        receipt: 'Collect',
        receiptAmount: 'Accounts collected',
        receivableLateFee: 'Overdue fine receivable',
        receivableDamageFee: 'Compensation receivable',
        receiptInfo: 'Collection Info.',
        return: 'Return',
        returnInfo: 'Return info.',
        returnExpressNumber: 'Express tracking no.',
        returnWarehouse: 'Warehouse for device return',
        refundAmount: 'Refund',
        startTime: 'Start time',
        search: 'Search',
        serialNumber: 'Order no.',
        settlement: 'Settle',
        settlementInfo: 'Settlement info.',
        swapDevice: 'Device switch',
        takeType: 'Pickup method',
        isNeedPay: 'Does it need collection?',
        takeInfo: 'Pickup info.',
        totalAmount: 'Total amount',
        shop: 'Shop',
        to: 'to',
        days: 'days',
        reletInfo: 'Renewal info.',
        reletDate: 'Renewal date',
        reletOtaOrderId: 'Renewal OTA order no.',
        reletDays: 'Renewal days',
        reletAmount: 'Renewal rent',
        OTAOrderNumber: 'OTA order no.',
        agentPay: 'Agency payment',
        agentBatchPay: 'Batch payment by agency',
        receivableDeposit: 'Deposit account receivable',
        receiptDeposit: 'Deposit account received',
        sumReceiptDeposit: 'Total deposit account received',
        payAmount: 'Payment amount',
        scanQRCodeToPay: '(Scan to make payment)',
        SFExpress: 'Shunfeng print',
        readyPrint: 'Prepare for print',
        rentPaySerailNumber: 'Rent payment running no.',
        ifNeedRecipt: 'Does it need collection?',
        salesman: 'Salesman',
        travelDate: 'date',
        selectCountry: 'Select country',
        comboType: 'Package type',
        orderNum: 'Order quantity',
        whetherSend: 'Send message?',
        cashPledgePayWay: 'Deposit payment method',
        paymentMethod: 'Payment method(Please select)',
        remark: 'Notes',
        remarkPlaceholder: 'Please enter notes…(Optional)',
        takeWebsite: 'Pickup counter',
        takeCabinet: 'Pickup cabinet',
        bussinessAccountPay: 'Pay with corporate account',
        submit: 'Submit',
        immediatelyPayment: 'Pay now',
        immediatelyReceipt: 'Collect now',
        authCode: 'Authorization code',
        uploadNote: 'Upload bill',
        chargeInfo: 'Deduction info.',
        chargeMoney: 'Accounts deducted',
        compensationSincere: 'Compensation',
        overdueFine: 'Overdue fine',
        overdueFineNum: 'Overdue fine',
        dalayDays: 'Extension days',
        otherExpenses: 'Other expenses',
        applyRefundPayment: 'Apply for refund deduction',
        returnMoney: 'Amount returned',
        applyReturnMoney: 'Apply for refund deduction',
        compensateCause: 'Reason of compensation',
        compensationMoney: 'Compensation amount',
        compensateReasonList: ['Device lost',
            'Device kit lost',
            'Data cable lost'],
        applySccusse: 'Application successful',
        applyFailed: 'Application failed',
        logoRmb: 'Yuan',
        payTimeout: 'Payment timeout',
        swapDeviceInfo: {
            index: 'Serial no.',
            IMEI: 'IMEI',
            newIMEI: 'New IMEI',
            orderIndex: 'Order no.',
            clientName: 'Customer',
            clientNumber: 'Customer phone no.'
        },
        resetOrderCaptcha: 'Reset order verification code',
        imeiCheck: 'IMEI no. must be 15 digits integer',
        importNewImei: 'Please enter valid correct IMEI',
        importImei: 'Please enter valid IMEI firstly',
        saveSuccessfully: 'Saved',
        notFoundOrderInfo: 'Order info. not found',
        delayDaysCheck: 'Extension days should be integer greater than or equal to zero',
        otherSumCheck: 'Other amount should be integer greater than or equal to zero',
        returnSumCheck: 'Other payments',
        returnSumIsZeroCheck: 'Return amount is zero, please select carefully',
        mostFive: 'Uploading up to 5 pics',
        tipsInputDate: 'Please select traveling date firstly',
        tipsInputCombo: 'Please select package type firstly',
        expressCode: 'Express tracking no.',
        inputExprees: 'Scan or enter tracking no.',
        delayDay: 'Extension days',
        receivableOtherFee: 'Other payments',
        compensateForReason: 'Reason of compensation',
        refundOrderApplySuccess: 'Refund application successful',
        cancelOrderSuccess: 'Refund application cancelation successful',
        prompt: 'Hint',
        compensateForPromptOne: 'Application for cancelling this order will be completed',
        compensateForPromptTwo: 'Yuan, are you sure you want to cancel this order?',
        sameOrderList: 'Please select orders with same progress to operate',
        unsubscribeOrderApply: 'Apply for order cancellation',
        unsubscribeReason: 'Reason of cancellation',
        unsubscribeSuccess: 'Order cancelled',
        isOrderProgress: 'Refund after order delivery completed',
        isSettlemented: 'Settled and cannot refund',
        deliverSuccess: 'Shipping successful',
        sendBack: 'Offsite return',
        changePayType: 'Please select payment method',
        preview: 'Preview',
        departmentName: 'Department',
        goOutDate: 'Departure date',
        getBackDate: 'Return date',
        branchName: 'Counter name',
        isSendMessage: 'Send message?',
        selectTemplateType: 'Select template type',
        download: 'Download',
        orderTemplate: 'Order template',
        cancelBreachFee: 'Overdue fine receivable',
        cancelBreachAmount: 'Cancel penalty',
        checkReturnTip: 'The return date is not due, are you sure you want to return the device？',
        previewPoint: 'Please upload valid document',
        verifyDateType: 'Please enter valid date',
        verifyDate: 'Please check the date',
        importSuccess: 'Imported',
        uploadSuccess: 'Uploaded',
        nodataTip: "Sorry, you don't have any orders",
        changeCondition: 'Please enter at least one record of query condition for display list',
        orderTemplate_type: {
            'OrderTemplate@deptPoint': 'Self-run e-commerce pickup order template',
            'OrderTemplate@proxyPoint': 'Agency pickup order template',
            'OrderTemplate@pointPoint': 'Self-run network pickup order template'
        },
        isUseFreeDepositOrAccountPay: 'Deposit payment method',
        order_Type: {
            'Department@department': 'E-commerce',
            'Department@agent': 'Agency',
            'Department@wareHouse': 'Counter'
        },
        order_Progress: {
            'OrderProgress@receive': 'To be collected',
            'OrderProgress@deliver': 'To be shipped',
            'OrderProgress@return': 'To be returned',
            'OrderProgress@settlement': 'To be settled',
            'OrderProgress@settlemented': 'Settle'
        },
        order_Status: {
            'OrderStatus@normal': 'Available',
            'OrderStatus@free': 'Free',
            'OrderStatus@camcel': 'Cancel',
            'OrderStatus@refund': 'Refund',
            'OrderStatus@unsub': 'Cancel',
            'OrderStatus@invalid': 'Invalid'
        },
        rentCollection: {
            'CommonType@yes': 'Yes',
            'CommonType@no': 'No'
        },
        select_expressPayMode: {
            'ExpressPayMode@send': 'Freight prepaid',
            'ExpressPayMode@noSend': 'Freight collect'
        },
        select_inAdvanceSend: {
            noInAdvance: 'No',
            inAdvance: 'Yes'
        },
        enterImei: 'Scan or manually enter IMEI',
        pleaseenterCancelReason: 'Please enter reason of cancellation',
        tipsenterDate: 'Please select traveling date firstly',
        tipsenterCombo: 'Please select package method firstly',
        enterExprees: 'Scan or enter tracking no.'
    },
    v_orderReturnList: {
        list: {
            serialNumber: 'Order no.',
            departmentName: 'Department',
            alreadyCutAmount: 'Amount deducted(Yuan)',
            returnBackDamageAmount: 'Refund compensation(Yuan)',
            returnBackDelayAmount: 'Refund overdue fine(Yuan)',
            returnBackOtherAmount: 'Refund other expenses(Yuan)',
            returnBackCutAmount: 'Refund deductions amount(Yuan)',
            returnBackCutPayType: 'Deductions refund method',
            applyUserName: 'Applicant',
            createTime: 'Application date',
            auditStatus: 'Audit status'
        },
        search: 'Query',
        audit: 'Audit',
        export: 'Export',
        save: 'Save',
        auditSaveSuccessfully: 'Audited',
        auditSaveFailed: 'Save failed',
        remark: 'Notes',
        serialNumber: 'Order no.',
        departmentName: 'Department',
        auditStatus: 'Audit status',
        all: 'All',
        auditStatusList: {
            'ReturnBackCutPayAuditStatus@all': 'All',
            'ReturnBackCutPayAuditStatus@pending': 'To be audited',
            'ReturnBackCutPayAuditStatus@approve': 'Passed',
            'ReturnBackCutPayAuditStatus@refuse': 'Rejected'
        },
        auditTwoStatusList: {
            'ReturnBackCutPayAuditStatus@approve': 'Passed',
            'ReturnBackCutPayAuditStatus@refuse': 'Rejected'
        }
    },
    v_productManager: {
        list: {
            goodCode: 'Offerings code',
            goodName: 'Offerings name',
            dataStatus: 'Status',
            description: 'Offerings description',
            mccList: 'Country list',
            mccFlag: 'Country black and white list identification'
        },
        goodCode: 'Offerings code',
        goodName: 'Offerings name',
        search: 'Query',
        synchronization: 'Sync',
        synIng: 'Are you sure you want to sync?',
        synSuccess: 'Sync successful',
        synFailed: 'Sync failed',
        dataStatus_type: {
            'Common@valid': 'Valid',
            'Common@invalid': 'Invalid'
        }
    },
    v_packageManager: {
        list: {
            packageName: 'Package ',
            packageCode: 'Package code',
            price: 'Unit price',
            packageType: 'Package type',
            beginTime: 'Effective time',
            endTime: 'Invalid time',
            orderBeginTime: 'Order start time',
            orderEndTime: 'Order end time',
            dataStatus: 'Data state',
            minDays: 'Minimum order days',
            isShippingFree: 'Are delivery fees covered?'
        },
        all: 'All',
        activityPrice: 'Promotion price',
        addActivityPackage: 'Add promotion packages',
        attachmentlist: 'Attachment list',
        addProducts: 'Add offerings',
        applicationItem: 'Application projects',
        addRoutineFail: 'Failed to add general packages',
        addActivityFail: 'Failed to add promotion packages',
        modifyActivityFail: 'Failed to modify promotion packages',
        addStockFail: 'Failed to add inventory packages',
        addMonthlyFail: 'Failed to add monthly packages',
        beginTime: 'Effective time',
        beginMonth: 'Effective month',
        ctripSingle: 'Xiecheng single day single number',
        createUserName: 'Creator',
        createUserAccount: 'Create account',
        createTime: 'Creation time',
        dataStatus: 'Data state',
        detail: 'Details',
        detailInfo: 'Details',
        endTime: 'Invalid time',
        endMonth: 'Invalid month',
        export: 'Export',
        edit: 'Edit',
        editSuccess: 'Edited',
        editFailed: 'Edit failed',
        expressPrice: 'Express fees',
        fileList: 'Attachment list',
        fileName: 'File name',
        fileDescription: 'File description',
        fileType: 'File type',
        file: 'File',
        fileUploadFailed: 'Failed to upload document',
        inputExpressFee: 'Please enter delivery fees',
        isRecommend: 'Is it popular?',
        isShippingFree: 'Were shipment fees covered?',
        limitCount: 'Limit order quantity',
        mvno: 'MVNO',
        minDays: 'Minimum order days',
        minMonths: 'Minimum order months',
        orderBeginTime: 'Order start time',
        orderEndTime: 'Order end time',
        operationlog: 'Operation log',
        operateSuccess: 'Successful',
        operateFail: 'Failed',
        packageCode: 'Package code',
        packageName: 'Package ',
        packageType: 'Package type',
        packageCreate: 'Package creation',
        packageActivity: 'Promotion package',
        packageRoutine: 'General package',
        packageStock: 'Inventory package',
        packageMonthly: 'Monthly package',
        packageRoutineCreate: 'General package creation',
        packageStockCreate: 'Inventory package creation',
        packageMonthlyCreate: 'Monthly package creation',
        packageRoutineEdit: 'General package edit',
        packageStockEdit: 'Inventory package edit',
        packageMonthlyEdit: 'Monthly package edit',
        price: 'Unit price',
        packagePrice: 'Package price',
        pleaseInputRequestData: 'Required data cannot be blank',
        querySaleProductsFail: 'Failed to query offerings',
        queryRelativeSaleProductsFail: 'Failed to query related offerings',
        queryGroupFail: 'Failed to query group account',
        remark: 'notes',
        relateGroup: 'Related group account',
        saveCreate: 'Inventory package',
        search: 'Query',
        setHot: 'Set it popular',
        save: 'Save',
        sure: 'Confirm',
        shippingFree: 'Shipment fees covered',
        supportTakeType: 'Pickup method supported',
        typeName: 'Type name',
        typeStatus: 'Type status',
        uploadFile: 'Upload',
        updateTime: 'Last updated time',
        updateUserName: 'Updater',
        mastInput: 'It is a required field',
        packageNameAndTypeCheck: 'Package name and package type cannot duplicate',
        tipsMsgLimit: 'Start and end date of promotion package effective and order place must be included in normal package',
        tipsMsgLess: 'End date should not be less than start date',
        enterExpressFee: 'Please enter express fees',
        pleaseenterRequestData: 'Required data cannot be blank',
        mastenter: 'Required field',
        tipsMsgLimit: '活动套餐生效起止日与下单起止日必须包含在正常套餐时间之内',
        tipsMsgLess: '套餐终止时间不能小于起始时间',
        nitOfChoice:'选择货币单位'
    },
    v_depositGrade: {
        list: {
            name: 'OrgName',
            code: 'OrgCode',
            depositGradeType: 'Deposit grade',
            deposit: 'Deposit amount',
            supportOrderType: 'Order type supported',
            applicant: 'Applicant',
            applyTime: 'Application date',
            auditStatus: 'Audit status',
            auditor: 'Auditor',
            auditTime: 'Audit time',
            dataStatus: 'Data state',
            auditReason: 'Audit opinion',
            mvnoCode: 'MVNO'
        },
        code: 'OrgCode',
        auditStatus: 'Audit status',
        agency: 'Agency',
        save: 'Save',
        edit: 'Edit',
        apply: 'Apply for',
        search: 'Query',
        selectAgent: 'Select agency',
        supportOrderType: {
            'SupportOrderType@pointCabinet': 'Counter/Cabinet',
            'SupportOrderType@deliver': 'Express'
        },
        auditStatusType: {
            'GradeAuditStatus@pending': 'To be audited',
            'GradeAuditStatus@notPass': 'Failed',
            'GradeAuditStatus@pass': 'Passed'
        },
        auditStatusTypetwo: {
            'GradeAuditStatus@notPass': 'Failed',
            'GradeAuditStatus@pass': 'Passed'
        },
        depositGradeType: {
            'DepositGradeType@A': 'A',
            'DepositGradeType@B': 'B',
            'DepositGradeType@C': 'C'
        },
        serialNumber: 'Serial no.',
        Agent: 'Agency',
        supportOrdeType: 'Order type supported',
        supportPickup: 'Pickup method supported',
        depositGrade: 'Deposit grade',
        depositAmount: 'Deposit amount',
        audit: 'Audit',
        auditOpinion: 'Audit opinion',
        batchaudit: 'Batch audit',
        export: 'Export',
        auditSuccess: 'Audited',
        auditFailed: 'Audit failed',
        editSuccess: 'Edited',
        editFailed: 'Edit failed',
        noedit: 'No editing allowed',
        mvnoCode: 'MVNO',
        dataStatus: 'Data state',
        sure: 'Confirm',
        all: 'All',
        applySccusse: 'Application successful',
        supportStype: 'Pickup method supported',
        applyFailed: 'Application failed',
        checkNotEdit: 'Audit status is approved, and cannot be edited',
        isSelect: 'Select information option',
        dataStatusType: {
            'Common@valid': 'Valid',
            'Common@invalid': 'Invalid'
        }
    },
    v_menuManager: {
        add: 'Add',
        detailInfo: 'Details',
        'zh-CN': 'Chinese name',
        'zh-TW': 'Traditional Chinese name',
        'en-US': 'English name',
        url: 'URL',
        parentCode: 'Superior code',
        parentName: 'Superior name',
        parentValue: 'None',
        code: 'Code',
        type: 'Type',
        status: 'Status',
        description: 'Description',
        sortIndex: 'Sorting',
        interfaceUrl: 'Interface address',
        createUserAccount: 'Create account',
        sysChannels: 'Application type',
        createTime: 'Creation time',
        updateTime: 'Last updated time',
        menuBtn: 'Menu button',
        del: 'Delete',
        edit: 'Edit',
        query: 'Query',
        save: 'Save',
        distMechanism: 'Assign organization',
        queryTraffic: 'Query data',
        modify: 'Modify',
        addToken: '+',
        addMenu: 'Add menu',
        delConfirm: 'Are you sure you want to delete this menu?',
        delSuccess: 'Deleted',
        delFailed: 'Deletion failed',
        confirm: 'Confirm',
        cancel: 'Cancel',
        editMenu: 'Edit menu',
        editSuccess: 'Modified',
        editFailed: 'Modification failed',
        addSuccess: 'Added',
        addFailed: 'Add failed'
    },
    v_discountCodeList: {
        list: {
            discountCode: 'Promotion code',
            discountType: 'Promotion type',
            days: 'Minimum order days',
            discountDays: 'Remission days',
            discountAmount: 'Remission amount',
            codeStatus: 'Get status',
            status: 'Status',
            createTime: 'Creation time',
            updateTime: 'Update time',
            updateUserName: 'Updater'
        },
        discountCode: 'Promotion code',
        discountType: 'Promotion type',
        codeStatus: 'Get status',
        selectDiscountType: 'Select promotion type',
        days: 'Minimum order days',
        discountDays: 'Remission days',
        number: 'No. of promotion code',
        discountAmount: 'Remission amount',
        status: 'Data state',
        type: 'Dictionary type',
        key: 'Dictionary code',
        value: 'Dictionary value',
        effective: 'Valid',
        invalid: 'Invalid',
        description: 'Dictionary description',
        lanType: 'Language type',
        search: 'Query',
        detail: 'Details',
        edit: 'Edit',
        editSuccess: 'Promotion code edited',
        editFailed: 'Failed to edit promotion code',
        add: 'Add',
        addSuccess: 'Promotion code added',
        addFailed: 'Failed to add promotion code',
        del: 'Delete',
        delConfirm: 'Are you sure you want to delete this record?',
        delSuccess: 'Dictionary value deleted',
        delFailed: 'Failed to delete dictionary value',
        lan_type: {
            'zh-CN': '英文',
            'zh-TW': '繁体中文',
            'en-US': 'English'
        },
        select_lantype_edit: {
            'zh-CN': 'zh-CN',
            'zh-TW': 'zh-TW',
            'en-US': 'en-US'
        },
        status_type: {
            '': 'All',
            'Common@valid': 'Valid',
            'Common@invalid': 'Invalid'
        },
        status_type_edit: {
            'Common@valid': 'Valid',
            'Common@invalid': 'Invalid'
        },
        discount_type_status: {
            '': 'All',
            'DiscountType@Days': 'Remission days',
            'DiscountType@Amount': 'Remission amount'
        },
        discount_type_addstatus: {
            'DiscountType@Days': 'Remission days',
            'DiscountType@Amount': 'Remission amount'
        },
        code_status: {
            '': 'All',
            'CouponState@Use': 'Used',
            'CouponState@Unused': 'Unused'
        }
    },
    v_filedManagementList: {
        list: {
            interfaceName: 'Interface ',
            description: 'Description',
            fieldCode: 'Field code',
            fieldName: 'Field name',
            status: 'Status',
            createUserName: 'Creator',
            createUserAccount: 'Create account',
            createTime: 'Creation time',
            updateTime: 'Update time'
        },
        interfaceName: 'Interface ',
        description: 'Description',
        fieldCode: 'Field code',
        fieldName: 'Field name',
        status: 'Status',
        createUserName: 'Creator',
        createUserAccount: 'Create account',
        createTime: 'Creation time',
        updateTime: 'Update time',
        effective: 'Valid',
        invalid: 'Invalid',
        lanType: 'Language type',
        search: 'Query',
        edit: 'Edit',
        editSuccess: 'Edited',
        editFailed: 'Edit failed',
        add: 'Add',
        addSuccess: 'Added successful',
        addFailed: 'Added failed',
        lan_type: {
            'zh-CN': '英文',
            'zh-TW': '繁体中文',
            'en-US': 'English'
        },
        select_lantype_edit: {
            'zh-CN': 'zh-CN',
            'zh-TW': 'zh-TW',
            'en-US': 'en-US'
        },
        status_type: {
            '': 'All',
            'Common@valid': 'Valid',
            'Common@invalid': 'Invalid'
        },
        status_type_edit: {
            'Common@valid': 'Valid',
            'Common@invalid': 'Invalid'
        }
    },
    v_interfaceManagementList: {
        list: {
            interfaceName: 'Interface ',
            createUserAccount: 'Create account',
            createUserName: 'Creator',
            createTime: 'Creation time',
            updateTime: 'Update time',
            description: 'Description'
        },
        interfaceName: 'Interface ',
        description: 'Description',
        status: 'Status',
        createUserName: 'Creator',
        createUserAccount: 'Create account',
        createTime: 'Creation time',
        updateTime: 'Update time',
        lanType: 'Language type:',
        search: 'Query',
        edit: 'Edit',
        editSuccess: 'Edited',
        editFailed: 'Edit failed',
        add: 'Add',
        addSuccess: 'Added successful',
        addFailed: 'Added failed',
        del: 'Delete',
        delConfirm: 'Are you sure you want to delete?',
        delSuccess: 'Deleted',
        delFailed: 'Deletion failed',
        lan_type: {
            'zh-CN': '英文',
            'zh-TW': '繁体中文',
            'en-US': 'English'
        },
        select_lantype_edit: {
            'zh-CN': 'zh-CN',
            'zh-TW': 'zh-TW',
            'en-US': 'en-US'
        }
    },
    v_cabinet: {
        list: {
            name: 'Cabinet ',
            number: 'Cabinet code',
            type: 'Cabinet type',
            parentName: 'Superior storage bin',
            cabinetStatus: 'Cabinet status',
            createTime: 'Creation time',
            createUserName: 'Creator',
            versionNo: 'Cabinet version',
            remark: 'Notes',
            updateTime: 'Last updated time',
            mvnoCode: 'MVNO'
        },
        search: 'Query',
        detail: 'Details',
        close: 'Close',
        edit: 'Edit',
        editSuccess: 'Edited',
        editFailed: 'Edit failed',
        add: 'Create cabinet',
        addSuccess: 'Created',
        addFailed: 'Add failed',
        mvno: 'MVNO',
        cabinetName: 'Cabinet ',
        number: 'Cabinet code',
        cabinetType: 'Cabinet type',
        cabinetStatus: 'Cabinet status',
        versionNo: 'Cabinet version',
        remark: 'Notes',
        serialNumber: 'Serial no.',
        cellName: 'Cabinet code',
        cellStatus: 'Cabinet type',
        cabinet_type: {
            '': 'All',
            'cabinetType@canRent': 'Leasable',
            'cabinetType@canReturn': 'Returnable',
            'cabinetType@blend': 'Mixed'
        },
        cabinet_typeVal: {
            'cabinetType@canRent': 'Leasable',
            'cabinetType@canReturn': 'Returnable',
            'cabinetType@blend': 'Mixed'
        },
        mvno_code: {
            '': 'All',
            '漫游超人': 'Roamingman'
        },
        cabinet_status: {
            '': 'All',
            'cabinetStatus@normal': 'Available',
            'cabinetStatus@notAvailable': 'Not available'
        },
        cabinet_statusVal: {
            'cabinetStatus@normal': 'Available',
            'cabinetStatus@notAvailable': 'Not available'
        },
        cabinet_versionNo: {
            '': 'All',
            'cabinetVersionNo@firstEra': 'First generation',
            'cabinetVersionNo@secondEra': 'Second generation'
        },
        cabinet_versionNoVal: {
            'cabinetVersionNo@firstEra': 'First generation',
            'cabinetVersionNo@secondEra': 'Second generation'
        }
    },
    v_cabinetDetail: {
        list: {
            number: 'Serial no.',
            cellName: 'Cabinet code',
            type: 'Cabinet type'
        }
    },
    v_refundOrderList: {
        list: {
            serialNumber: 'Order no.',
            imei: 'IMEI',
            customerPhone: 'Customer phone no.',
            orderProgress: 'Order progress',
            startDate: 'Departure date',
            endDate: 'Return date',
            customerName: 'Customer',
            departmentType: 'Order type',
            departmentName: 'Department',
            operationReason: 'Reason for application ',
            operationUserName: 'Applicant',
            operationDate: 'Application date',
            auditReason: 'Audit opinion',
            auditUserName: 'Auditor',
            auditDate: 'Audit time',
            auditStatus: 'Audit status',
            refundStatus: 'Refund status',
            refundPrice: 'Refund amount',
            refundDays: 'Refund days(day)',
            quadraticRefund: 'Is it second refund?'
        },
        export: 'Export',
        search: 'Search',
        query: 'Query',
        apply: 'Audit',
        refund: 'Refund',
        sure: 'Confirm',
        adopt: 'Passed',
        chat: 'WeChat Pay',
        notAdopt: 'Failed',
        advancedQuery: 'Advanced query',
        orderNumber: 'Order no.',
        imei: 'IMEI',
        customerName: 'Customer',
        customerPhone: 'Customer phone no.',
        agent: 'Agency',
        orderSchedule: 'Order progress',
        orderType: 'Order type',
        applyReason: 'Reason for application ',
        applyName: 'Applicant',
        applyDate: 'Application date',
        applyView: 'Audit opinion',
        auditName: 'Auditor',
        auditTime: 'Audit time',
        auditStatus: 'Audit status',
        refundStatus: 'Refund status',
        abroadDate: 'Departure date',
        returnDate: 'Return date',
        return_date: 'Return time',
        renewEndDate: 'Renew end date',
        daysOfRefund: 'Days refundable ',
        refundDays: 'Refund days',
        refundInformation: 'Refund info.',
        flowInformation: 'Data usage info.',
        travelInformation: 'Traveling info.',
        refundAmount: 'Refund',
        refundMethod: 'Refund method',
        agency: 'Department',
        timeQuery: 'Time query',
        startTime: 'Start time',
        endTime: 'End time',
        notTime: 'It cannot be audited without start time and end time',
        auditSuccess: 'Audited',
        isRefund: 'Duplicate refund',
        refundSuccess: 'Refund successful',
        quadraticRefund: 'Is it second refund?',
        isSearch: 'Please select time query, start time and end time at the same time',
        startDays: '* Your refund days are incorrect, which does not match traveling days.',
        all: 'All',
        day: 'days',
        timeQuery_value: {
            'DateQuery@apply': 'Application date',
            'DateQuery@start': 'Departure date',
            'DateQuery@end': 'Return date'
        },
        auditStatus_value: {
            'RefundStatus@pass': 'Passed',
            'RefundStatus@notPass': 'Failed',
            'RefundStatus@pending': 'To be audited'
        },
        refundStatus_value: {
            'RefundStatus@forRefund': 'To be refunded',
            'RefundStatus@refunded': 'Refunded'
        },
        orderSchedule_value: {
            'OrderProgress@receive': 'To be collected',
            'OrderProgress@deliver': 'To be shipped',
            'OrderProgress@return': 'To be returned',
            'OrderProgress@settlement': 'To be settled',
            'OrderProgress@settlemented': 'Settle'
        },
        quadraticRefund_value: {
            'CommonType@yes': 'Yes',
            'CommonType@no': 'No'
        },
        orderType_value: {
            'Department@wareHouse': 'Storage bins',
            'TypeForOrder@Network': 'Counter',
            'Department@agent': 'Agency',
            'TypeForOrder@Online_retailers': 'E-commerce'
        },
        status_lantype: {
            'RefundStatus@pass': 'adopt',
            'RefundStatus@notPass': 'not pass'
        }
    },
    v_flowOrderList: {
        list: {
            imei: 'IMEI',
            createTime: 'Date',
            visitCountry: 'Country',
            flowSize: 'Data usage',
            number: 'Serial no.'
        }
    },
    v_monthlyReceivableList: {
        list: {
            agentName: 'Department',
            agentCode: 'Department code',
            staffDept: 'Salesman department',
            staffName: 'Sales rep.',
            month: 'Month',
            orderType: 'Order type',
            rent: 'Rent amount',
            reletRent: 'Renewal rent',
            totalRele: 'Total rent amount',
            backAmount: 'Refund',
            expressFee: 'Express fees',
            expressAdvancedFee: 'Advanced shipment fees',
            receiveAmount: 'Accounts receivable'
        },
        staffDeptName: 'Salesman department',
        agentName: 'Department',
        agentCode: 'Department code',
        staffName: 'Sales rep.',
        month: 'Month',
        search: 'Query',
        export: 'Export',
        all: 'All'
    },
    v_autoReturnDeposit: {
        customerPhone: 'Customer phone no.',
        customerPhonePlaceholder: 'Enter customer phone no.',
        refundStatus: 'Refund status',
        refundType: 'Refund type',
        payType: 'Payment method',
        serialNumber: 'Order no.',
        serialNumberPlaceholder: 'Enter order no.',
        deptName: 'Department',
        search: 'Query',
        export: 'Export',
        must: 'Please select at least one record!',
        confirmRefund: 'Confirm',
        returnDepositSearch: 'Refund query',
        returnDepositSearchTips: 'Select payment method to query WeChat record',
        detail: 'Details',
        confirmRefundTitle: 'Confirm',
        confirmRefundText: 'Are you sure you want to refund?',
        confirmRefundTips: '(Once you confirm, the deposit will automatically return back to customer account)',
        confirm: 'Confirm',
        operateSuccess: 'Successful',
        all: 'All',
        list: {
            serialNumber: 'Order no.',
            refundType: 'Refund type',
            customerName: 'Customer',
            customerPhone: 'Customer phone no.',
            payType: 'Payment method',
            refundStatus: 'Refund status',
            actualOther: 'Other expenses received ',
            actualCancel: 'Penalty cancellation received',
            tradeNo: 'Payment running no.',
            orderProgress: 'Order status',
            deptName: 'MVNO',
            actualDeposit: 'Deposit received',
            actualDamages: 'Compensation received',
            actualLateFee: 'Overdue fine received',
            refundTime: 'Refund time',
            refundUserName: 'Refund receiver',
            pay: 'Accounts collected',
            channel: 'Refund method',
            refundDesc: 'Refund instructions',
            refundId: 'Refund no.',
            refundStatusQuery: 'Refund query',
            commitTime: 'Submission time',
            preRefund: 'Last returned time',
            refund: 'Amount returned'
        }
    },
    v_rebateManagement: {
        list: {
            agnetName: 'OrgName',
            agnetCode: 'OrgCode',
            rewardTypeName: 'Rebate type',
            rewardRadix: 'Type of transaction amount',
            createDate: 'Creation time',
            updateDate: 'Update time',
            createUserName: 'Creator',
            updateUserName: 'Updater',
            dataStatus: 'Data state'
        },
        all: 'All',
        offsetLoan: 'Offset loan',
        agencyAgent: 'Agency',
        agencyName: 'OrgName',
        edit: 'Edit',
        detail: 'View details',
        rebateDetail: 'View details',
        query: 'Query',
        code: 'OrgCode',
        dataStatus: 'Data state',
        createRebate: 'Create rebate',
        createRebateInfo: 'Create rebate info.',
        operateLog: 'Operation record',
        choiceRebateType: 'Select rebate type',
        leaseContractRebate: 'Lease contract rebate',
        leaseAttachmentProtocolRebate: 'Accessory lease contract rebate',
        monthlyAttachmentProtocoRebate: 'Accessory monthly contract rebate',
        rebateSettlement: 'Rebate settlement method',
        transactionType: 'Type of transaction amount',
        index: 'Serial no.',
        transactionAmount: 'Transaction amount',
        rebatePercent: 'Rebate ratio',
        percent: '%',
        setDefault: 'Set defult',
        operation: 'Operate',
        add: 'Add',
        delete: 'Delete',
        remark: 'Notes',
        fistX: '<X<',
        midX: '≤X<',
        lastX: '≤X',
        save: 'Save',
        fileNoempty: 'Attachment list cannot be blank',
        createFailed: 'Created',
        createSuccessed: 'Creation failed',
        operateFailed: 'Failed',
        operateSuccessed: 'Successful',
        defaultRebeatType: 'Default rebate type',
        agencyAgentName: 'OrgName',
        createDate: 'Creation time',
        updateDate: 'Update time',
        createUserName: 'Creator',
        updateUserName: 'Updater',
        attachmentlist: 'Attachment list',
        fileName: 'File name',
        fileDescription: 'File description',
        fileType: 'File type',
        file: 'File',
        cancel: 'Cancel',
        noRepeat: 'Same organization cannot be created',
        dataStatusRadioList: {
            'Common@valid': 'valid',
            'Common@invalid': 'invalid'
        },
        transactionTypeList: {
            '上月回款': 'Last month fund restream',
            '本月业绩': 'This month performance'
        }
    },
    v_receivableList: {
        list: {
            serialNumber: 'Order no.',
            agentName: 'Department',
            agentCode: 'Department code',
            deptName: 'Salesman department',
            rent: 'Rent',
            reletRent: 'Renewal rent',
            backAmount: 'Refund',
            expressFee: 'Express fees',
            expressAdvancedFee: 'Advanced shipment fees',
            recieveAmount: 'Accounts receivable',
            expressFeePayWay: 'Express payment method',
            orderType: 'Order type',
            staffName: 'Salesman',
            dateGoabroad: 'Departure date',
            dateRepaird: 'Return date',
            createTime: 'Creation time'
        },
        serialNumber: 'Order no.',
        agentName: 'Department',
        deptName: 'Salesman department',
        orderType: 'Order type',
        staffName: 'Sales rep.',
        timeType: 'Time type',
        startTime: 'Start time',
        endTime: 'End time',
        search: 'Query',
        export: 'Export',
        detail: 'Details',
        detailInfo: 'Billing details',
        detailorderInfo: 'Order info.',
        detailpackageType: 'Package type',
        detailpackageName: 'Package ',
        detailcustomerName: 'Customer',
        detailcustomerTel: 'Customer phone no.',
        detailoutTime: 'Traveling date',
        detailoutDay: 'Traveling days',
        detailexpressFeePayWay: 'Pickup method',
        detailexpressNumber: 'Express no.',
        detailrefundDate: 'Refund date',
        detailrefundReason: 'Reason of refund',
        detailimei: 'IMEI',
        detailremark: 'Notes',
        detailcreateUser: 'Creator',
        detailcreateTime: 'Creation time',
        detaildeptInfo: 'Department info.',
        detailorgName: 'OrgName',
        detailarea: 'Regional warehouse',
        detailstaffName: 'Salesman',
        detaildeptName: 'Department ',
        detailfeeInfo: 'Fees info.',
        detailrent: 'Rent',
        detailreletRent: 'Renewal rent',
        detailexpressFee: 'Express fees',
        detailexpressAdvancedFee: 'Advanced shipment fees',
        detailbackAmount: 'Refund',
        detailrecieveAmount: 'Accounts receivable',
        all: 'All',
        exportTipSuccess: '已添加—>系統管理—>通知管理—>下载管理'
    },
    v_compensationList: {
        list: {
            serialNumber: 'Order no.',
            departmentName: 'Agency',
            departmentType: 'Order type',
            payType: 'Deposit payment method',
            target: 'Collection target',
            receivableAmount_damage: 'Compensation receivable',
            receivableAmount_delay: 'Overdue fine receivable',
            receivableAmount_other: 'Other expenses receivable',
            receivableAmount: 'Overdue fine cancellation receivable',
            receivedleTotalAmount: 'Total accounts receivable',
            receivedAmount_damage: 'Compensation received',
            receivedAmount_delay: 'Overdue fine received',
            receivedAmount_other: 'Other expenses received ',
            receivedAmount: 'Penalty cancellation received',
            receivedTotalAmount: 'Total accounts received',
            difference: 'Balance between the receivable and received',
            delayDay: 'Days of delay',
            damageName: 'Reason of compensation',
            compensatePayType: 'Compensation collecting method',
            settlementUserName_damage: 'Compensation receiver',
            settlementUserName_delay: 'Overdue fine receiver',
            receiveUserName: 'Deposit collector',
            imei: 'IMEI no.',
            customerName: 'Customer',
            customerPhone: 'Customer phone no.',
            servicestaffName: 'Salesman',
            takeType: 'Pickup method',
            returnWarehouseName: 'Warehouse for device return',
            transactionId: 'Deposit payment running no.',
            startDate: 'Departure date',
            endDate: 'Return date',
            returnTime: 'Return time',
            settlementDate: 'Deduction time',
            createTime: 'Import time',
            createUserName: 'Importer',
            remark: 'Notes'
        },
        serialNumber: 'Order no.',
        departmentName: 'Agency',
        departmentType: 'Order type',
        payType: 'Deposit payment method',
        target: 'Collection target',
        receivableAmount_damage: 'Compensation receivable',
        receivableAmount_delay: 'Overdue fine receivable',
        receivableAmount_other: 'Other expenses receivable',
        receivableAmount: 'Overdue fine cancellation receivable',
        receivedleTotalAmount: 'Total accounts receivable',
        receivedAmount_damage: 'Compensation received',
        receivedAmount_delay: 'Overdue fine received',
        receivedAmount_other: 'Other expenses received ',
        receivedAmount: 'Penalty cancellation received',
        receivedTotalAmount: 'Total accounts received',
        difference: 'Balance between the receivable and received',
        delayDay: 'Days of delay',
        damageName: 'Reason of compensation',
        compensatePayType: 'Compensation collecting method',
        settlementUserName_damage: 'Compensation receiver',
        settlementUserName_delay: 'Overdue fine receiver',
        receiveUserName: 'Deposit collector',
        imei: 'IMEI no.',
        customerName: 'Customer',
        customerPhone: 'Customer phone no.',
        servicestaffName: 'Sales rep.',
        takeType: 'Pickup method',
        returnWarehouseName: 'Warehouse for device return',
        transactionId: 'Payment running no.',
        startDate: 'Departure date',
        endDate: 'Return date',
        returnTime: 'Return time',
        settlementDate: 'Deduction time',
        createTime: 'Import time',
        createUserName: 'Importer',
        remark: 'Notes',
        departmentId: 'Department',
        orderType: 'Order type',
        orgType: 'Organization type',
        timeType: 'Time type',
        startTime: 'Start time',
        endTime: 'End time',
        receivableTotal: 'Total accounts receivable',
        receivedTotal: 'Other expenses received ',
        import: 'Import',
        export: 'Export',
        downloadTemplate: 'Download template',
        maxLength: 'Maximum 100000 records for one-time import',
        all: 'All',
        detail: 'Details',
        detailInfo: 'Details',
        save: 'Save',
        query: 'Query',
        search: 'Search',
        internetBug: 'Counter abnormal'
    },
    v_temporaryOpened: {
        list: {
            imei: 'IMEI',
            packageName: 'Activate package',
            openedHours: 'Activation time',
            openedTime: 'Opening time',
            status: 'Opening status',
            creater: 'Creator',
            createTime: 'Creation time'
        },
        imei: 'IMEI',
        status: 'Opening status',
        query: 'Query',
        search: 'Search',
        save: 'Activate',
        add: 'Temporary activation',
        openedHours: 'Activation time',
        packageId: 'Activate package',
        imeiPlaceHolder: 'Enter IMEI no.'
    },
    v_billList: {
        month: 'Y/M',
        deptName: 'MVNO',
        rewardStatus: 'Rebate status',
        rewardAmt: 'Rebate amount',
        staffName: 'Sales rep.',
        department: 'Department',
        search: 'Query',
        sendMonthBill: 'Send monthly bill',
        batchAudit: 'Batch audit',
        sendStatus: 'Sending status',
        detail: 'Details',
        must: 'Please select at least one record!',
        all: 'All',
        monthBill: 'Monthly bill',
        batchAuditConfirmTip: 'Are you sure you want to batch audit?',
        e_batchSendMonthBillConfirmTip: 'Are you sure you want to batch send these selected monthly bills?',
        rebateAudit: 'Rebate audit',
        editBaseAmout: 'Modify minimum balance',
        receivableAmountDialogTitle: 'Accounts receivable details',
        damageDialogTitle: 'Compensation details',
        delayAmountDialogTitle: 'Overdue fine details',
        otherDialogTitle: 'Other expenses details',
        cancelBreachDialogTitle: 'Penalty cancellation details',
        baseAmount: 'Minimum balance',
        monthBillDialogTitle: 'Monthly bill',
        remark: 'notes',
        save: 'Save',
        selectTip: 'Select',
        imei: 'IMEI',
        imeiPlaceholder: 'Enter device no.',
        timeSearch: 'Time query',
        orderCode: 'Order no.',
        orderCodePlaceHolder: 'Enter order no.',
        staffNamePlaceHolder: 'Enter salesman',
        startDate: 'Start time',
        startDatePlaceholder: 'Enter start time',
        endDate: 'End time',
        endDatePlaceholder: 'Enter end time',
        customerName: 'Customer',
        customerNamePlaceholder: 'Enter customer ',
        customerPhone: 'Customer phone no.',
        customerPhonePlaceholder: 'Enter customer phone no.',
        export: 'Export',
        dialogDeptName: 'OrgName',
        tradeType: 'Type of transaction amount',
        rewardType: 'Rebate type',
        tableNum: 'Serial no.',
        tableAmount: 'Transaction amount',
        tableRate: 'Rebate ratio',
        lastMonthReceive: 'Accounts receivable of last month',
        lastMonthLowermost: 'Minimum balance of last month',
        lastMonthReward: 'Rebate amount of last month',
        auditRewardStatus: 'Audit status',
        receivableAmount: 'Accounts receivable of this month',
        lowermostAmount: 'Minimum balance of this month',
        sendBillText: 'Enter recipient',
        send: 'Send',
        auditSuccess: 'Approved',
        sendSuccess: 'Sent',
        list: {
            billMonth: 'Month',
            departmentName: 'Agent',
            departmentCode: 'OrgCode',
            receivableAmount: 'Accounts receivable',
            lowermostAmount: 'Minimum balance',
            rewardAmount: 'Rebate amount',
            receiveAll: 'Total amount',
            damage: 'Compensation',
            delayAmount: 'Overdue fine',
            otherAmount: 'Other expenses',
            cancelBreach: 'Cancel penalty',
            totalAmount: 'Total',
            rewardStatus: 'Rebate status',
            serviceStaffDeptName: 'Department',
            dockingPeopleEmail: 'Send e-mail ',
            billSendStatus: 'Bill sending status',
            serviceStaffName: 'Sales rep.',
            rewardRemark: 'Rebate audit notes',
            lowermostRemark: 'Minimum balance notes'
        },
        audit_status_list: {
            'AuditStatus@audited': 'Audited',
            'AuditStatus@nopass': 'no pass'
        },
        expressPayType: {
            'ExpressPayMode@send': 'send',
            'ExpressPayMode@noSend': 'no send'
        }
    },
    v_receivableAmountList: {
        list: {
            serialNumber: 'Order no.',
            departmentName: 'OrgName',
            departmentCode: 'OrgCode',
            receivableAmount: 'Rent',
            reletAmount: 'Renewal rent',
            refundPrice: 'Refund amount',
            expressPrice: 'Express fees',
            expressAdvancePrice: 'Advanced shipment fees',
            name: 'Department',
            departmentType: 'Order type',
            servicestaffName: 'Salesman',
            createTime: 'Creation time',
            returnDate: 'Refund time',
            firstReleDate: 'First renewal time',
            secondReleDate: 'Second renewal time',
            thirdReleDate: 'Third renewal time'
        }
    },
    v_compensation: {
        list: {
            serialNumber: 'Order no.',
            departmentName: 'OrgName',
            code: 'OrgCode',
            payType: 'Deposit collecting method',
            receivableAmount: 'Compensation receivable',
            receivedAmount: 'Compensation received',
            shouldReceivedAmount: 'Balance between the receivable and received',
            damageName: 'Reason of compensation',
            createTime: 'Creation time',
            returnTime: 'Return time'
        }
    },
    v_lateFee: {
        list: {
            serialNumber: 'Order no.',
            departmentName: 'OrgName',
            deptCode: 'OrgCode',
            payType: 'Deposit collecting method',
            receivableAmount: 'Overdue fine receivable',
            receivedAmount: 'Overdue fine received',
            shouldReceive: 'Balance between the receivable and received',
            delayDay: 'Extension days',
            createTime: 'Creation time',
            returnTime: 'Return time'
        }
    },
    v_otherFee: {
        list: {
            serialNumber: 'Order no.',
            departmentName: 'OrgName',
            deptCode: 'OrgCode',
            payType: 'Deposit collecting method',
            receivableAmount: 'Other expenses receivable',
            receivedAmount: 'Other expenses received ',
            shouldReceive: 'Balance between the receivable and received',
            createTime: 'Creation time',
            returnTime: 'Return time'
        }
    },
    v_cancelDamageFee: {
        list: {
            serialNumber: 'Order no.',
            departmentName: 'OrgName',
            deptCode: 'OrgCode',
            payType: 'Deposit collecting method',
            receivableAmount: 'Other expenses receivable',
            receivedAmount: 'Other expenses received ',
            shouldReceive: 'Balance between the receivable and received',
            createTime: 'Creation time',
            returnTime: 'Return time'
        }
    },
    v_billDetail: {
        list: {
            serialNumber: 'Order no.',
            departmentName: 'OrgName',
            departmentCode: 'OrgCode',
            customerName: 'Customer',
            customerPhone: 'Customer phone no.',
            startDate: 'Departure date',
            endDate: 'Return date',
            useDays: 'Usage days',
            packageName: 'Package ',
            packageType: 'Package list',
            imei: 'IMEI',
            rent: 'Rent',
            reletRent: 'Renewal rent',
            refund: 'Refund',
            express: 'Express fees',
            deliverAdvance: 'Advanced shipment fees',
            shouldReceive: 'Accounts receivable',
            damage: 'Compensation',
            delayAmount: 'Overdue fine',
            otherAmount: 'Other expenses',
            damageName: 'Reason of compensation receivable ',
            delayDay: 'Overdue days',
            serviceStaffName: 'Salesman',
            serviceStaffDeptName: 'Department ',
            createTime: 'Creation time',
            returnTime: 'Return time',
            areaName: 'Region',
            expressPayType: 'Delivery method',
            takeType: 'Pickup method',
            remark: 'notes'
        }
    },
    v_checkout: {
        month: 'Y/M',
        selectMonth: 'Select the billing month',
        search: 'Query',
        checkout: 'Settle',
        detail: 'Details',
        antiSettlement: 'Anti-settlement',
        createCheckout: 'Generate  bill',
        operateSuccess: 'Generated',
        operateFail: 'The bill of this month has been generated, and cannot be generated again.',
        createCheckoutTip: 'This month can only generate the bill for previous months',
        antiSettlementTip: 'Are you sure you want to enable anti-settlement?',
        antiSettlementSuccess: 'Anti-settlement successful',
        list: {
            month: 'Y/M',
            settlementDate: 'Settlement time',
            antiSettlementDate: 'Anti-settlement time',
            userName: 'Settlement operator',
            updateUserName: 'Anti-settlement operator'
        }
    },
    v_companyAccountDeposit: {
        list: {
            agentName: 'OrgName',
            agentCode: 'OrgCode',
            totalCharge: 'Accumulated top-up amount',
            usedAmount: 'Accounts used',
            deductAmount: 'Accounts deducted',
            extractedAmount: 'Accounts withdrew',
            auditingAmount: 'Accounts to be audited',
            balance: 'Available balance'
        },
        export: 'Export',
        query: 'Query',
        recharge: 'Top up',
        payRecordExport: 'Export top-up records',
        withdrawExport: 'Export withdraw records',
        rechargeMechanism: 'Top-up Org.',
        rechargeSum: 'Top-up amount',
        addRechargeSum: 'Accumulated top-up amount',
        paymentMode: 'Payment method',
        paymentModeList: {
            'FinancialPay@wx': 'WeChat Pay',
            'FinancialPay@alipay': 'Alipay',
            'FinancialPay@account': 'Corporate account'
        },
        extractTypeList: {
            'BusinessAccountExtract@alipay': 'Alipay',
            'BusinessAccountExtract@ccb': 'Construction Bank'
        },
        pay: 'Pay now',
        paySuccess: 'Top-up successful',
        saveSuccessfully: 'Saved',
        widthDrawSuccessfully: 'Withdrew',
        saveFailed: 'Saved',
        payFailed: 'Top-up failed',
        rechargeStartTime: 'Top-up start time',
        rechargeEndTime: 'Top-up end time',
        checkStatus: 'Audit status',
        debitSum: 'Accounts deducted',
        debitStartTime: 'Deduction start time',
        debitEndTime: 'Deduction end time',
        IMEI: 'IMEI',
        orderCode: 'Order no.',
        widthdrawalAmount: 'Accounts withdrew',
        widthdrawalStartTime: 'Withdrawal start time',
        widthdrawalEndTime: 'Withdrawal end time',
        waitForCheck: 'Accounts to be audited',
        rechargeAgent: 'Top-up Org.',
        widthdrawalBalance: 'Balance withdrew',
        availableBalance: 'Available balance',
        availableBalanceHeader: 'Available balance',
        useAmount: 'Accounts used',
        widthdrawalAmountLabel: 'Accounts withdrew',
        widthdrawalAmountMode: 'Withdrawal method',
        occurrenceStartTime: 'Occurrence start time',
        occurrenceEndTime: 'Occurrence end time',
        orderProgress: 'Order progress',
        auditStatus: {
            'AuditStatus@waitAudited': 'To be audited',
            'AuditStatus@audited': 'Passed',
            'AuditStatus@nopass': 'Failed'
        },
        depositReturnStatus: 'Deposit returning status',
        payAccount: 'Payment account',
        payAmountNum: 'Payment amount',
        constructorAccount: 'Construction Bank account',
        constructorAccountNum: 'Construction Bank account no.',
        agency: 'Agency',
        rechargeNumFloatCheck: 'Incorrect top-up amount format',
        widthDrawlNumFloatCheck: 'Incorrect withdrawal amount format',
        widthDrawlNumNotZero: 'Withdrawal amount must be greater than zero',
        checkAvaliableWithdralNum: 'Withdraw amount should not be greater than available balance',
        chargeSumCheck: 'Top-up amount must be greater than zero',
        dateTimeCheck: 'End time should not be greater than start time',
        agencyCode: 'OrgCode',
        checkPendingSum: 'Accounts to be audited',
        detail: 'Details',
        enteerWidthDrawSum: 'Enter withdrawal amount',
        enterAgencyCode: 'Enter orgCode',
        enterRechargeNum: 'Enter top-up amount',
        selectStartTime: 'Select start time',
        selectEndTime: 'Select end time',
        enterImeiCode: 'Enter IMEI no.',
        enterOrderCode: 'Enter order no.',
        enterRemarkInfo: 'Enter notes…',
        paymentMethod: 'Payment method',
        remarks: 'Notes',
        save: 'Save',
        startTime: 'Start time',
        endTime: 'End time',
        agencyName: 'OrgName:'
    },
    v_cadAddSum: {
        list: {
            agentName: 'OrgName',
            amount: 'Top-up amount',
            payType: 'Payment method',
            transactionId: 'Payment running no.',
            createDate: 'Top-up time',
            auditStatus: 'Audit status',
            auditUserName: 'Auditor',
            auditDate: 'Audit time',
            auditReason: 'Audit opinion'
        }
    },
    v_cadUsedAmount: {
        list: {
            orderSerialNumber: 'Order no.',
            imei: 'IMEI',
            depositAmount: 'Deposit amount',
            orderProgress: 'Order progress',
            takeType: 'Pickup method',
            createUserName: 'Creator',
            returnStatus: 'Deposit returning status',
            usedAmount: 'Accounts used',
            returnAmount: 'Amount returned',
            createDate: 'Occurrence time'
        }
    },
    v_cadDebitSum: {
        list: {
            orderSerialNumber: 'Order no.',
            imei: 'IMEI',
            amount: 'Occurrence amount',
            deductType: 'Compensation type',
            deductReason: 'Reason',
            createDate: 'Occurrence time'
        }
    },
    v_cadExtractedAmount: {
        list: {
            agentName: 'OrgName',
            amount: 'Accounts withdrew',
            extractType: 'Withdrawal method',
            extractAccount: 'Payment account',
            extractUserName: 'Withdrawer',
            createDate: 'Withdraw time',
            remark: 'Notes'
        }
    },
    v_cadCheckPendingSum: {
        list: {
            amount: 'Top-up amount',
            payType: 'Top-up payment method ',
            createDate: 'Top-up time',
            auditStatus: 'Audit status',
            auditReason: 'Audit opinion'
        },
        commonAccount: 'Corporate account',
        passYes: 'Passed',
        passNo: 'Failed',
        passCheck: 'To be audited'
    },
    v_cadAvailableBalanceSum: {
        list: {
            createDate: 'Occurrence time',
            content: 'Occurrence content',
            receipts: 'Income',
            payments: 'Expense',
            balance: 'Available balance'
        }
    },
    v_fundAccountManagement: {
        list: {
            agentName: 'OrgName',
            code: 'OrgCode',
            deptName: 'Department',
            representative: 'Sales rep.',
            deviceDeposit: 'Inventory deposit',
            monthlyDeposit: 'Monthly deposit',
            preDeposit: 'Deposit'
        },
        agency: 'MVNO',
        agencyCode: 'OrgCode',
        businessAgent: 'Sales rep.',
        departmentName: 'Department ',
        totalInventoryMargin: 'Total inventory deposit',
        monthlyDeposit: 'Total monthly deposit',
        bond: 'Deposit',
        inventoryMarginRecord: 'Operating record of Inventory deposit ',
        monthlyDepositRecord: 'Operating record of monthly deposit',
        bondRecord: 'Operating record of deposit',
        rechargeDeposit: 'Top-up deposit',
        withdrawDeposit: 'Withdraw deposit',
        createAccount: 'Create account',
        selectAccountType: 'Select account type',
        selectInventoryMargin: 'Inventory deposit',
        selectMonthly: 'Monthly deposit',
        selectBond: 'Deposit',
        inventoryMarginName: 'Inventory deposit',
        monthlyName: 'Monthly deposit',
        paymentMethod: 'Payment method',
        arrivalTime: 'Accounting time',
        serialNumber: 'Running no.',
        remarks: 'Notes',
        save: 'Save',
        timeSearch: 'Time query',
        startTime: 'Start time',
        endTime: 'End time',
        agencyName: 'OrgName',
        export: 'Export',
        query: 'Query',
        recharge: 'Top up',
        withdraw: 'Withdraw',
        cerate: 'Create',
        all: 'All',
        addSuccess: 'Added',
        rechargeSuccess: 'Top-up successful',
        withdrawSuccess: 'Withdrew',
        tips: 'Please select time query, start time and end time at the same time',
        prompt: 'Hint',
        internetBug: 'Counter abnormal',
        tipsInput: '* Character incorrect. Please enter number.',
        pTips: 'Please enter amount',
        tipsenter: '* Character incorrect. Please enter number.'
    },
    v_fundAccountDetail: {
        list: {
            createDate: 'Occurrence time',
            admoun: 'Modify amount',
            updateDate: 'Change time',
            operatType: 'Action type',
            userName: 'Modifier',
            payType: 'Payment method',
            paySerialNumber: 'Payment running no.',
            remark: 'notes'
        }
    },
    v_orderDetail: {
        detail: 'Order details',
        basic: 'Basic info.',
        receive: 'Collection Info.',
        deliver: 'Shipping info.',
        return: 'Return info.',
        settlement: 'Settlement info.',
        relet: 'Renewal info.',
        cancel: 'Cancellation info.',
        refund: 'Refund info.',
        serialNumber: 'Order no.',
        orderLabel: 'Order tag',
        orderProgress: 'Order progress',
        customerName: 'Customer',
        customerPhone: 'Customer phone no.',
        packageName: 'Package ',
        packageType: 'Package type',
        areaName: 'Departure country',
        useDays: 'Traveling date',
        orderType: 'Order type',
        departmentName: 'Counter name',
        agencyName: 'Agency',
        storeName: 'Shop name',
        captcha: 'Verification code',
        msg: 'Message sent?',
        createUserName: 'Creator',
        createTime: 'Creation time',
        remark: 'Notes',
        yes: 'Yes',
        no: 'No',
        otaOrderId: 'OTA order no.',
        number: 'Serial no.',
        feeType: 'Item',
        receivableAmount0: 'Accounts receivable',
        receivedAmount: 'Amount received',
        payType: 'Collection method',
        receiveUserName: 'Collector',
        sendPayDate: 'Collection time',
        orderSN: 'Payment running no.',
        payProgress: 'Payment progress',
        attachment: 'Attachment',
        attachmentName: 'Attachment name',
        imeiPositionName: 'Device bins',
        takeType: 'Estimated pickup method',
        expressProbablyDate: 'Estimated shipping date',
        deliverDate: 'Actual shipping time',
        isExpressAdvance: 'Advanced shipment?',
        advanceDeliverDate: 'Advanced shipment date',
        expressAddress: 'Shipping address',
        expressCode: 'Express no.',
        deliverUserName: 'Shipper',
        endDate: 'Return date',
        returnTime: 'Return time',
        delayDay: 'Extension days',
        delayAmount: 'Overdue fine receivable',
        returnType: 'Compensation type',
        damageAmount: 'Compensation receivable',
        returnUserName: 'Returner',
        returnWarehouseName: 'Warehouse for device return',
        returnExpressCode: 'Express tracking no.',
        settlementPayType: 'Payment method',
        settlementUserName: 'Payor',
        settlementDate: 'Settlement time',
        reletPackageName: 'Renew package',
        reletStartDate: 'Renewal start time',
        reletEndDate: 'Renewal end time',
        reletDay: 'Renewal days',
        receivableAmount: 'Renewal amount',
        reletUserName: 'Renewal applicant',
        reletOtaOrderId: 'Renewal OTA order no.',
        relet_createTime: 'Operating time',
        operationUserName: 'Operator',
        operationDate: 'Operating time',
        cancelStatus: 'Cancellation status',
        cancel_remark: 'Operation description',
        info: 'Details',
        damageName: 'Reason of compensation',
        damagePrice: 'Compensation amount',
        refundStatus: 'Refund status',
        refund_refundDays: 'Actual refund days',
        refund_refundPrice: 'Refund',
        day: 'days',
        to: 'to',
        deliver_areaName: 'Regional warehouse',
        expeactDeliver_areaName: 'Estimated regional warehouse',
        actualDeliver_areaName: 'Actual regional warehouse',
        expectTakePointName: 'Cabinet',
        actualTakePointName: 'Actual pickup counter',
        expectTakeCabinetName: 'Estimated pickup cabinet',
        actualTakeCabinetName: 'Actual pickup cabinet',
        null: 'None',
        deliver_area: 'Counter',
        updateTime: 'Update time',
        otherAmount: 'Other payments',
        receivableOtherReason: 'Reason for other payments'
    },
    v_customer_service360: {
        list: {
            serialNumber: 'Order no.',
            orderProgress: 'Order progress',
            orderLabelList: 'Label',
            customerName: 'Customer',
            customerPhone: 'Customer phone no.',
            startDate: 'Departure date',
            endDate: 'Return date',
            imei: 'IMEI',
            packageName: 'Package ',
            name: 'Agency',
            servicestaffName: 'Salesman',
            createTime: 'Creation time',
            deliverDate: 'Shipping time',
            returnTime: 'Return time'
        },
        serialNumber: 'Order no.',
        customerName: 'Customer',
        customerPhone: 'Customer phone no.',
        imei: 'IMEI',
        search: 'Query',
        deviceSearch: 'Device query',
        distribution: 'Allocate'
    },
    v_homePage: {
        confirm: 'Confirm',
        orderReturn: 'To be returned',
        orderReturnDelay: 'Unreturned after due days',
        orderReturnDelayT: 'Unreturned in 7 days overdue',
        fast_enter: 'Quick entry',
        task_panel: 'Task board',
        create_order: 'Order creation',
        create_agency: 'Agency order creation',
        create_point: 'Counter order creation',
        create_retailers: 'E-commerce order creation',
        organization: 'Organizational structure',
        create_agent: 'Agency creation',
        create_staff: 'Employee creation',
        inventory: 'Inventory operation',
        inWarehouse: 'Enter warehouse',
        allot: 'Allocate',
        borrow: 'Borrow ',
        outWarehouse: 'Return to warehouse',
        receivable: 'To be collected',
        deposit_agency: 'Deposit to be collected',
        rent_agency: 'Rent to be collected',
        xiecheng_agency: 'Xiecheng to be collected',
        deliver: 'To be shipped',
        point: 'Counter to be shipped',
        xiecheng: 'Xicheng to be shipped',
        ctripPoint: 'Xicheng network to be shipped',
        theday: 'Same day shipping',
        overdue: 'Unshipped after due days',
        order_settlement: 'To be settled',
        xiecheng_pending_settlement: 'Xicheng to be settled',
        tipsMsgIsDelivery: 'Failed to verify order shipment',
        imeiRepeat: 'IMEI duplicated',
        imeiCheckFail: 'IMEI verification failed ',
        expressCodeNotEmpty: 'Express number cannot be blank',
        pleaseSelectDeliveryOrder: 'Please select order needs to be shipped',
        return_btn: 'Return',
        order_search: 'Search order',
        notice_list: 'Notification list',
        allotAudit: 'Pending allot audit',
        agentAudit: 'Pending agent audit',
        refundsAudit: 'Pending refunds audit',
        pendingAudit: 'Pending audit',
        check: 'View'
    },
    v_orderSearch: {
        list: {
            serialNumber: 'Order no.',
            customerName: 'Customer',
            customerPhone: 'Customer phone no.',
            startDate: 'Departure date',
            endDate: 'Return date',
            imei: 'Device no.',
            packageName: 'Package ',
            orderProgress: 'Order progress'
        },
        searchResultList: 'Search results list',
        implement: 'Operate',
        batchExecute: 'Batch operate',
        sameOrderList: 'Please select orders with same progress to operate'
    },
    v_orderWaitReceive: {
        list: {
            serialNumber: 'Order no.',
            orderProgress: 'Order progress',
            departmentType: 'Order type',
            orderLabel: 'Order tag',
            departmentName: 'Department'
        },
        searchResultList: 'Search results list',
        implement: 'Operate',
        batchExecute: 'Batch operate',
        sameOrderList: 'Batch operate'
    },
    v_delivery: {
        list: {
            serialNumber: 'Order no.',
            customerName: 'Customer',
            customerPhone: 'Customer phone no.',
            orderProgress: 'Order progress',
            takeType: 'Pickup method',
            actualTakePointName: 'Pickup info.',
            areaName: 'Shipping info.',
            expressAddress: 'Shipping address',
            expressProbablyDate: 'Estimated shipping date',
            overdue: 'Overdue days',
            imei: 'IMEI',
            expressCode: 'Express no.'
        },
        query: 'Query',
        imeiNoempty: 'IMEI to be shipped cannot be blank',
        serialNumber: 'Order no.',
        customerName: 'Customer',
        customerPhone: 'Customer phone no.',
        SFPrint: 'Shunfeng print'
    },
    v_deliveryExpress: {
        list: {
            serialNumber: 'Order no.',
            customerName: 'Customer',
            customerPhone: 'Customer phone no.',
            orderProgress: 'Order progress',
            takeType: 'Pickup method',
            actualTakePointName: 'Pickup info.',
            imei: 'IMEI',
            expressCode: 'Express no.'
        },
        query: 'Query',
        imeiNoempty: 'IMEI to be shipped cannot be blank',
        serialNumber: 'Order no.',
        customerName: 'Customer',
        customerPhone: 'Customer phone no.',
        SFPrint: 'Shunfeng print'
    },
    v_orderLimit: {
        list: {
            limitTakeType: 'Pickup method',
            limitTimeType: 'Limit time type',
            limitBeginTime: 'Limit start time',
            limitEndTime: 'Limit end time',
            limitIncludePackageNames: 'Limited packages',
            limitExcludePackageNames: 'Excluded packages',
            limitExcludeAgentCodes: 'Excluded organizations',
            limitIncludePointCodes: 'Limited bins',
            limitExcludePointCodes: 'Excluded bins',
            limitAdvanceDay: 'The latest order days on network',
            createTime: 'Creation time',
            createUser: 'Creator',
            updateTime: 'Last updated time',
            updateUserName: 'Updater',
            status: 'Data state'
        },
        pickupMode: 'Pickup method',
        isValid: 'Is it valid?',
        create: 'Create',
        emit: 'Edit',
        query: 'Query',
        save: 'Save',
        dotRack: 'Counter/Cabinet',
        express: 'Express',
        limitedTimeType: 'Limit time type',
        limitStartDate: 'Limit start time',
        limitEndDate: 'Limit end time',
        limitedPackage: 'Limited packages',
        excludePackages: 'Excluded packages',
        limitPickupDot: 'Limit pickup network',
        excludePickupDot: 'Exclude pickup network',
        eliminationMechanismCode: 'Exclude organization code',
        latestDaysBeforeOutlets: 'Latest early days on network',
        orderTime: 'Order time',
        abroadTime: 'Departure date',
        all: 'All',
        confirm: 'Confirm',
        createOrderLimit: 'Create order limitation ',
        editOrderLimit: 'Edit order limitation',
        pleaseLimitedPackage: 'Please select limited package',
        pleaseExcludePackages: 'Please select excluded package',
        pleaseLimitPickupDot: 'Please select limited pickup network',
        pleaseExcludePickupDot: 'Please select excluded pickup network',
        pleaseEliminationMechanismCode: 'Please select excluded organization code',
        limitedTitle: 'Limited packages',
        excludeTitle: 'Excluded packages',
        limitPickupDotTitle: 'Limit pickup network',
        excludePickupDotTitle: 'Exclude pickup network',
        eliminationMechanismCodeTitle: 'Exclude organization code',
        dataStatus: 'Data state',
        select_wareHouse: {
            'SupportOrderType@pointCabinet': 'Counter/Cabinet',
            'SupportOrderType@deliver': 'Express'
        },
        select_returnData: {
            'Common@valid': 'Valid',
            'Common@invalid': 'Invalid'
        },
        select_timeType: {
            orderTime: 'Order time',
            abroadTime: 'Departure date'
        }
    },
    v_homeMessage: {
        message_notification: 'Notice',
        notice_list: 'Notification list',
        notice: 'Notification',
        no_message: 'No unread messages'
    },
    v_404: {
        sorry: 'Sorry...',
        lost: 'Page not found',
        noExistent: "The page you were looking for doesn't exist.",
        returnHome: 'Back to homepage'
    },
    v_serverException: {
        sorry: 'Sorry...',
        lost: 'Server abnormal…',
        noExistent: 'Function abnormal due to some reasons. Please try again later',
        returnHome: 'Back to homepage'
    },
    v_networkTimeout: {
        sorry: 'Sorry...',
        lost: 'Your computer has not connected to internet',
        noExistent: 'Page not displayed. Please check network connection.',
        returnHome: 'Back to homepage'
    },
    v_withoutPermission: {
        sorry: 'Sorry...',
        lost: 'You are not authorized to access the link…',
        noExistent: 'The page you accessed has permission settings',
        returnHome: 'Back to previous page'
    },
    v_withoutAllPermission: {
        sorry: 'Sorry...',
        lost: 'You do not have any permissions…',
        noExistent: 'Please use other account to log in  or contact administrator',
        returnHome: 'Back to login page'
    },
    v_searchBar: {
        tips: 'Please enter IMEI no. or customer phone no. or order no.'
    },
    v_taobaoAuthorizeApi: {
        authorize: 'Authorize',
        getDetailFullInfo: 'Get details FullInfo',
        getDetailQuery: 'Get details Query'
    },
    v_taobaoAuthorize: {
        list: {
            a: 'Data state'
        },
        add: 'Add',
        edit: 'Edit',
        search: 'Query',
        detail: 'Details',
        save: 'Save',
        storeName: 'Shop name',
        dataStatus: 'Data state'
    },
    v_taobaoDeposit: {
        list: {},
        search: 'Query',
        detail: 'Details',
        set: 'Wi-Fi child order ID should not be blank'
    },
    v_taobaoMatch: {
        list: {},
        search: 'Query',
        detail: 'Details'
    },
    v_taobaoMatchHistory: {
        list: {},
        search: 'Query',
        detail: 'Details'
    },
    v_taobaoOrder: {
        list: {},
        search: 'Query',
        detail: 'Details'
    },
    v_taobaoOrderHistory: {
        list: {},
        search: 'Query',
        detail: 'Details',
        set: 'Set it as pending order'
    },
    v_taobaoOrderMatch: {
        list: {},
        search: 'Query',
        detail: 'Details'
    },
    v_taobaoWifi: {
        search: 'Query',
        detail: 'Details'
    },
    v_taobaoErrorOrder: {
        list: {},
        search: 'Query',
        detail: 'Details'
    },
    /* 通知管理 下载 wanglehui */
    v_download: {
        list: {
            fileName: 'fileName',
            fileCreateTime: 'fileCreateTime'
        },
        download: 'download',
        nodataTip: 'There are no downloads'
    },
    /**
     * 邮件模板 页面国际化
     * 负责人：liMingHua
     **/
    v_mailTemplate: {
        list: {
            'code': 'Template coding',
            'type': 'Template type',
            'title': 'Mail title',
            'langtype': 'Template language',
            'status': 'Status',
            'createtime': 'Create time',
            'updatetime': 'Update time',
            'createuser': 'Founder',
            'updateuser': 'Updater',
            'remark': 'Remarks',
        },
        all:'All',
        pleaseChose:'Please choose',
        add: "Add",
        search: "Search",
        detail: 'Detail',
        edit: 'Edit',
        del: 'Delete',
        editSuccess: "Edited successfully",
        editFailed: "Editing failed",
        delConfirm:'Really want to delete this data?',
        delSuccess: "Successfully deleted",
        delFailed: "Failed to delete",
        addSuccess: "Added successfully",
        addFailed: "Added failed",
        status: "Status",
        langType: "Language",
        remark:'Remarks',
        pleaseInput:'Please enter the template content',
        title: "Mail title",
        code: "Template coding",
        name: "Template name",
        type: "Template type",
        content: "Message body",
        preview:"Preview",
        pleaseInputTitle:"Please enter the title"
    },
    /**
     * 邮件日志 页面国际化
     * 负责人：liMingHua
     **/
    v_mailLog: {
        list: {
            'receiver': 'Inbox',
            'templatecode': 'Mail template type',
            'status': 'Send status',
            'createtime': 'Send time',
            'updatetime': 'Resend the time',
        },
        all:'All',
        search: "Search",
        detail: 'Detail',
        del: 'Delete',
        sendAgain:"Resend",
        isOk: "Are you sure you want to resend this email?",
        createTime: "Send times",
        resendTime:"Resend times",
        receiver: "Inbox",
        status: "Send status",
        title:"Mail title",
        content:"Message body",
        tempType:"Template type",
        state:"Status",
        sendSuccess: "Resend success",
        sendFailed: "Resend failed",
        changeCondition:'Please add the query conditions (send time), to query the list of information',
        status_type:{
            "1": "Success",
            "0": "Failure"
        }
    },
};
module.exports = lan;

